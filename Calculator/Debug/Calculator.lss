
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005274  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000114  00800060  00005274  000052e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000022bc  00000000  00000000  000053fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c5f  00000000  00000000  000076b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000240  00000000  00000000  00008317  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000297  00000000  00000000  00008557  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003717  00000000  00000000  000087ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000196b  00000000  00000000  0000bf05  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018d1  00000000  00000000  0000d870  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  0000f144  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c8  00000000  00000000  0000f3a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000024cc  00000000  00000000  0000f76c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00011c38  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e7       	ldi	r30, 0x74	; 116
      68:	f2 e5       	ldi	r31, 0x52	; 82
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 37       	cpi	r26, 0x74	; 116
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 79 15 	call	0x2af2	; 0x2af2 <main>
      7a:	0c 94 38 29 	jmp	0x5270	; 0x5270 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__subsf3>
      ae:	0e 94 38 12 	call	0x2470	; 0x2470 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 38 12 	call	0x2470	; 0x2470 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <__fixunssfdi>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 bc 28 	jmp	0x5178	; 0x5178 <__prologue_saves__>
      e6:	7b 01       	movw	r14, r22
      e8:	8c 01       	movw	r16, r24
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	30 e0       	ldi	r19, 0x00	; 0
      ee:	40 e8       	ldi	r20, 0x80	; 128
      f0:	5f e3       	ldi	r21, 0x3F	; 63
      f2:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
      f6:	88 23       	and	r24, r24
      f8:	4c f4       	brge	.+18     	; 0x10c <__fixunssfdi+0x32>
      fa:	aa 24       	eor	r10, r10
      fc:	bb 24       	eor	r11, r11
      fe:	cc 24       	eor	r12, r12
     100:	dd 24       	eor	r13, r13
     102:	ee 24       	eor	r14, r14
     104:	ff 24       	eor	r15, r15
     106:	00 e0       	ldi	r16, 0x00	; 0
     108:	10 e0       	ldi	r17, 0x00	; 0
     10a:	86 c0       	rjmp	.+268    	; 0x218 <__fixunssfdi+0x13e>
     10c:	c8 01       	movw	r24, r16
     10e:	b7 01       	movw	r22, r14
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	40 e8       	ldi	r20, 0x80	; 128
     116:	5f e4       	ldi	r21, 0x4F	; 79
     118:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
     11c:	88 23       	and	r24, r24
     11e:	54 f4       	brge	.+20     	; 0x134 <__fixunssfdi+0x5a>
     120:	c8 01       	movw	r24, r16
     122:	b7 01       	movw	r22, r14
     124:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     128:	5b 01       	movw	r10, r22
     12a:	6c 01       	movw	r12, r24
     12c:	ee 24       	eor	r14, r14
     12e:	ff 24       	eor	r15, r15
     130:	87 01       	movw	r16, r14
     132:	72 c0       	rjmp	.+228    	; 0x218 <__fixunssfdi+0x13e>
     134:	c8 01       	movw	r24, r16
     136:	b7 01       	movw	r22, r14
     138:	20 e0       	ldi	r18, 0x00	; 0
     13a:	30 e0       	ldi	r19, 0x00	; 0
     13c:	40 e8       	ldi	r20, 0x80	; 128
     13e:	5f e5       	ldi	r21, 0x5F	; 95
     140:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
     144:	87 fd       	sbrc	r24, 7
     146:	0f c0       	rjmp	.+30     	; 0x166 <__fixunssfdi+0x8c>
     148:	aa 24       	eor	r10, r10
     14a:	aa 94       	dec	r10
     14c:	bb 24       	eor	r11, r11
     14e:	ba 94       	dec	r11
     150:	cc 24       	eor	r12, r12
     152:	ca 94       	dec	r12
     154:	dd 24       	eor	r13, r13
     156:	da 94       	dec	r13
     158:	ee 24       	eor	r14, r14
     15a:	ea 94       	dec	r14
     15c:	ff 24       	eor	r15, r15
     15e:	fa 94       	dec	r15
     160:	0f ef       	ldi	r16, 0xFF	; 255
     162:	1f ef       	ldi	r17, 0xFF	; 255
     164:	59 c0       	rjmp	.+178    	; 0x218 <__fixunssfdi+0x13e>
     166:	c8 01       	movw	r24, r16
     168:	b7 01       	movw	r22, r14
     16a:	20 e0       	ldi	r18, 0x00	; 0
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	40 e8       	ldi	r20, 0x80	; 128
     170:	5f e2       	ldi	r21, 0x2F	; 47
     172:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
     176:	7b 01       	movw	r14, r22
     178:	8c 01       	movw	r16, r24
     17a:	22 24       	eor	r2, r2
     17c:	33 24       	eor	r3, r3
     17e:	21 01       	movw	r4, r2
     180:	90 e1       	ldi	r25, 0x10	; 16
     182:	a9 2e       	mov	r10, r25
     184:	b1 2c       	mov	r11, r1
     186:	c1 2c       	mov	r12, r1
     188:	d1 2c       	mov	r13, r1
     18a:	c0 e0       	ldi	r28, 0x00	; 0
     18c:	d0 e0       	ldi	r29, 0x00	; 0
     18e:	61 e0       	ldi	r22, 0x01	; 1
     190:	70 e0       	ldi	r23, 0x00	; 0
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	0a 2c       	mov	r0, r10
     198:	04 c0       	rjmp	.+8      	; 0x1a2 <__fixunssfdi+0xc8>
     19a:	66 0f       	add	r22, r22
     19c:	77 1f       	adc	r23, r23
     19e:	88 1f       	adc	r24, r24
     1a0:	99 1f       	adc	r25, r25
     1a2:	0a 94       	dec	r0
     1a4:	d2 f7       	brpl	.-12     	; 0x19a <__fixunssfdi+0xc0>
     1a6:	0e 94 8c 12 	call	0x2518	; 0x2518 <__floatunsisf>
     1aa:	3b 01       	movw	r6, r22
     1ac:	4c 01       	movw	r8, r24
     1ae:	c8 01       	movw	r24, r16
     1b0:	b7 01       	movw	r22, r14
     1b2:	a4 01       	movw	r20, r8
     1b4:	93 01       	movw	r18, r6
     1b6:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <__gesf2>
     1ba:	88 23       	and	r24, r24
     1bc:	64 f0       	brlt	.+24     	; 0x1d6 <__fixunssfdi+0xfc>
     1be:	2a 28       	or	r2, r10
     1c0:	3b 28       	or	r3, r11
     1c2:	4c 28       	or	r4, r12
     1c4:	5d 28       	or	r5, r13
     1c6:	c8 01       	movw	r24, r16
     1c8:	b7 01       	movw	r22, r14
     1ca:	a4 01       	movw	r20, r8
     1cc:	93 01       	movw	r18, r6
     1ce:	0e 94 9e 10 	call	0x213c	; 0x213c <__divsf3>
     1d2:	7b 01       	movw	r14, r22
     1d4:	8c 01       	movw	r16, r24
     1d6:	d6 94       	lsr	r13
     1d8:	c7 94       	ror	r12
     1da:	b7 94       	ror	r11
     1dc:	a7 94       	ror	r10
     1de:	21 96       	adiw	r28, 0x01	; 1
     1e0:	c5 30       	cpi	r28, 0x05	; 5
     1e2:	d1 05       	cpc	r29, r1
     1e4:	a1 f6       	brne	.-88     	; 0x18e <__fixunssfdi+0xb4>
     1e6:	c8 01       	movw	r24, r16
     1e8:	b7 01       	movw	r22, r14
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	40 e8       	ldi	r20, 0x80	; 128
     1f0:	5f e4       	ldi	r21, 0x4F	; 79
     1f2:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
     1f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     1fa:	5b 01       	movw	r10, r22
     1fc:	6c 01       	movw	r12, r24
     1fe:	9b 01       	movw	r18, r22
     200:	a6 01       	movw	r20, r12
     202:	60 e0       	ldi	r22, 0x00	; 0
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	02 2d       	mov	r16, r2
     20c:	0e 94 05 13 	call	0x260a	; 0x260a <__ashldi3>
     210:	59 01       	movw	r10, r18
     212:	6a 01       	movw	r12, r20
     214:	7b 01       	movw	r14, r22
     216:	8c 01       	movw	r16, r24
     218:	95 01       	movw	r18, r10
     21a:	a6 01       	movw	r20, r12
     21c:	b7 01       	movw	r22, r14
     21e:	c8 01       	movw	r24, r16
     220:	cd b7       	in	r28, 0x3d	; 61
     222:	de b7       	in	r29, 0x3e	; 62
     224:	e2 e1       	ldi	r30, 0x12	; 18
     226:	0c 94 d8 28 	jmp	0x51b0	; 0x51b0 <__epilogue_restores__>

0000022a <__udivdi3>:
     22a:	ae e5       	ldi	r26, 0x5E	; 94
     22c:	b0 e0       	ldi	r27, 0x00	; 0
     22e:	eb e1       	ldi	r30, 0x1B	; 27
     230:	f1 e0       	ldi	r31, 0x01	; 1
     232:	0c 94 bc 28 	jmp	0x5178	; 0x5178 <__prologue_saves__>
     236:	a8 e0       	ldi	r26, 0x08	; 8
     238:	4e 01       	movw	r8, r28
     23a:	08 94       	sec
     23c:	81 1c       	adc	r8, r1
     23e:	91 1c       	adc	r9, r1
     240:	f4 01       	movw	r30, r8
     242:	6a 2e       	mov	r6, r26
     244:	11 92       	st	Z+, r1
     246:	6a 94       	dec	r6
     248:	e9 f7       	brne	.-6      	; 0x244 <__udivdi3+0x1a>
     24a:	29 83       	std	Y+1, r18	; 0x01
     24c:	3a 83       	std	Y+2, r19	; 0x02
     24e:	4b 83       	std	Y+3, r20	; 0x03
     250:	5c 83       	std	Y+4, r21	; 0x04
     252:	6d 83       	std	Y+5, r22	; 0x05
     254:	7e 83       	std	Y+6, r23	; 0x06
     256:	8f 83       	std	Y+7, r24	; 0x07
     258:	98 87       	std	Y+8, r25	; 0x08
     25a:	ce 01       	movw	r24, r28
     25c:	09 96       	adiw	r24, 0x09	; 9
     25e:	fc 01       	movw	r30, r24
     260:	11 92       	st	Z+, r1
     262:	aa 95       	dec	r26
     264:	e9 f7       	brne	.-6      	; 0x260 <__udivdi3+0x36>
     266:	a9 86       	std	Y+9, r10	; 0x09
     268:	ba 86       	std	Y+10, r11	; 0x0a
     26a:	cb 86       	std	Y+11, r12	; 0x0b
     26c:	dc 86       	std	Y+12, r13	; 0x0c
     26e:	ed 86       	std	Y+13, r14	; 0x0d
     270:	fe 86       	std	Y+14, r15	; 0x0e
     272:	0f 87       	std	Y+15, r16	; 0x0f
     274:	18 8b       	std	Y+16, r17	; 0x10
     276:	29 84       	ldd	r2, Y+9	; 0x09
     278:	3a 84       	ldd	r3, Y+10	; 0x0a
     27a:	4b 84       	ldd	r4, Y+11	; 0x0b
     27c:	5c 84       	ldd	r5, Y+12	; 0x0c
     27e:	ed 84       	ldd	r14, Y+13	; 0x0d
     280:	fe 84       	ldd	r15, Y+14	; 0x0e
     282:	0f 85       	ldd	r16, Y+15	; 0x0f
     284:	18 89       	ldd	r17, Y+16	; 0x10
     286:	69 80       	ldd	r6, Y+1	; 0x01
     288:	7a 80       	ldd	r7, Y+2	; 0x02
     28a:	8b 80       	ldd	r8, Y+3	; 0x03
     28c:	9c 80       	ldd	r9, Y+4	; 0x04
     28e:	6d a6       	std	Y+45, r6	; 0x2d
     290:	7e a6       	std	Y+46, r7	; 0x2e
     292:	8f a6       	std	Y+47, r8	; 0x2f
     294:	98 aa       	std	Y+48, r9	; 0x30
     296:	6d 80       	ldd	r6, Y+5	; 0x05
     298:	7e 80       	ldd	r7, Y+6	; 0x06
     29a:	8f 80       	ldd	r8, Y+7	; 0x07
     29c:	98 84       	ldd	r9, Y+8	; 0x08
     29e:	e1 14       	cp	r14, r1
     2a0:	f1 04       	cpc	r15, r1
     2a2:	01 05       	cpc	r16, r1
     2a4:	11 05       	cpc	r17, r1
     2a6:	09 f0       	breq	.+2      	; 0x2aa <__udivdi3+0x80>
     2a8:	b3 c3       	rjmp	.+1894   	; 0xa10 <__stack+0x1b1>
     2aa:	62 14       	cp	r6, r2
     2ac:	73 04       	cpc	r7, r3
     2ae:	84 04       	cpc	r8, r4
     2b0:	95 04       	cpc	r9, r5
     2b2:	08 f0       	brcs	.+2      	; 0x2b6 <__udivdi3+0x8c>
     2b4:	3d c1       	rjmp	.+634    	; 0x530 <__udivdi3+0x306>
     2b6:	00 e0       	ldi	r16, 0x00	; 0
     2b8:	20 16       	cp	r2, r16
     2ba:	00 e0       	ldi	r16, 0x00	; 0
     2bc:	30 06       	cpc	r3, r16
     2be:	01 e0       	ldi	r16, 0x01	; 1
     2c0:	40 06       	cpc	r4, r16
     2c2:	00 e0       	ldi	r16, 0x00	; 0
     2c4:	50 06       	cpc	r5, r16
     2c6:	88 f4       	brcc	.+34     	; 0x2ea <__udivdi3+0xc0>
     2c8:	1f ef       	ldi	r17, 0xFF	; 255
     2ca:	21 16       	cp	r2, r17
     2cc:	31 04       	cpc	r3, r1
     2ce:	41 04       	cpc	r4, r1
     2d0:	51 04       	cpc	r5, r1
     2d2:	39 f0       	breq	.+14     	; 0x2e2 <__udivdi3+0xb8>
     2d4:	30 f0       	brcs	.+12     	; 0x2e2 <__udivdi3+0xb8>
     2d6:	48 e0       	ldi	r20, 0x08	; 8
     2d8:	e4 2e       	mov	r14, r20
     2da:	f1 2c       	mov	r15, r1
     2dc:	01 2d       	mov	r16, r1
     2de:	11 2d       	mov	r17, r1
     2e0:	18 c0       	rjmp	.+48     	; 0x312 <__udivdi3+0xe8>
     2e2:	ee 24       	eor	r14, r14
     2e4:	ff 24       	eor	r15, r15
     2e6:	87 01       	movw	r16, r14
     2e8:	14 c0       	rjmp	.+40     	; 0x312 <__udivdi3+0xe8>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	22 16       	cp	r2, r18
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	32 06       	cpc	r3, r18
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	42 06       	cpc	r4, r18
     2f6:	21 e0       	ldi	r18, 0x01	; 1
     2f8:	52 06       	cpc	r5, r18
     2fa:	30 f0       	brcs	.+12     	; 0x308 <__udivdi3+0xde>
     2fc:	38 e1       	ldi	r19, 0x18	; 24
     2fe:	e3 2e       	mov	r14, r19
     300:	f1 2c       	mov	r15, r1
     302:	01 2d       	mov	r16, r1
     304:	11 2d       	mov	r17, r1
     306:	05 c0       	rjmp	.+10     	; 0x312 <__udivdi3+0xe8>
     308:	20 e1       	ldi	r18, 0x10	; 16
     30a:	e2 2e       	mov	r14, r18
     30c:	f1 2c       	mov	r15, r1
     30e:	01 2d       	mov	r16, r1
     310:	11 2d       	mov	r17, r1
     312:	d2 01       	movw	r26, r4
     314:	c1 01       	movw	r24, r2
     316:	0e 2c       	mov	r0, r14
     318:	04 c0       	rjmp	.+8      	; 0x322 <__udivdi3+0xf8>
     31a:	b6 95       	lsr	r27
     31c:	a7 95       	ror	r26
     31e:	97 95       	ror	r25
     320:	87 95       	ror	r24
     322:	0a 94       	dec	r0
     324:	d2 f7       	brpl	.-12     	; 0x31a <__udivdi3+0xf0>
     326:	8d 58       	subi	r24, 0x8D	; 141
     328:	9f 4f       	sbci	r25, 0xFF	; 255
     32a:	dc 01       	movw	r26, r24
     32c:	2c 91       	ld	r18, X
     32e:	80 e2       	ldi	r24, 0x20	; 32
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	a0 e0       	ldi	r26, 0x00	; 0
     334:	b0 e0       	ldi	r27, 0x00	; 0
     336:	8e 19       	sub	r24, r14
     338:	9f 09       	sbc	r25, r15
     33a:	a0 0b       	sbc	r26, r16
     33c:	b1 0b       	sbc	r27, r17
     33e:	7c 01       	movw	r14, r24
     340:	8d 01       	movw	r16, r26
     342:	e2 1a       	sub	r14, r18
     344:	f1 08       	sbc	r15, r1
     346:	01 09       	sbc	r16, r1
     348:	11 09       	sbc	r17, r1
     34a:	e1 14       	cp	r14, r1
     34c:	f1 04       	cpc	r15, r1
     34e:	01 05       	cpc	r16, r1
     350:	11 05       	cpc	r17, r1
     352:	a1 f1       	breq	.+104    	; 0x3bc <__udivdi3+0x192>
     354:	0e 2c       	mov	r0, r14
     356:	04 c0       	rjmp	.+8      	; 0x360 <__udivdi3+0x136>
     358:	22 0c       	add	r2, r2
     35a:	33 1c       	adc	r3, r3
     35c:	44 1c       	adc	r4, r4
     35e:	55 1c       	adc	r5, r5
     360:	0a 94       	dec	r0
     362:	d2 f7       	brpl	.-12     	; 0x358 <__udivdi3+0x12e>
     364:	a4 01       	movw	r20, r8
     366:	93 01       	movw	r18, r6
     368:	0e 2c       	mov	r0, r14
     36a:	04 c0       	rjmp	.+8      	; 0x374 <__udivdi3+0x14a>
     36c:	22 0f       	add	r18, r18
     36e:	33 1f       	adc	r19, r19
     370:	44 1f       	adc	r20, r20
     372:	55 1f       	adc	r21, r21
     374:	0a 94       	dec	r0
     376:	d2 f7       	brpl	.-12     	; 0x36c <__udivdi3+0x142>
     378:	80 e2       	ldi	r24, 0x20	; 32
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	8e 19       	sub	r24, r14
     37e:	9f 09       	sbc	r25, r15
     380:	6d a4       	ldd	r6, Y+45	; 0x2d
     382:	7e a4       	ldd	r7, Y+46	; 0x2e
     384:	8f a4       	ldd	r8, Y+47	; 0x2f
     386:	98 a8       	ldd	r9, Y+48	; 0x30
     388:	04 c0       	rjmp	.+8      	; 0x392 <__udivdi3+0x168>
     38a:	96 94       	lsr	r9
     38c:	87 94       	ror	r8
     38e:	77 94       	ror	r7
     390:	67 94       	ror	r6
     392:	8a 95       	dec	r24
     394:	d2 f7       	brpl	.-12     	; 0x38a <__udivdi3+0x160>
     396:	62 2a       	or	r6, r18
     398:	73 2a       	or	r7, r19
     39a:	84 2a       	or	r8, r20
     39c:	95 2a       	or	r9, r21
     39e:	ad a4       	ldd	r10, Y+45	; 0x2d
     3a0:	be a4       	ldd	r11, Y+46	; 0x2e
     3a2:	cf a4       	ldd	r12, Y+47	; 0x2f
     3a4:	d8 a8       	ldd	r13, Y+48	; 0x30
     3a6:	04 c0       	rjmp	.+8      	; 0x3b0 <__udivdi3+0x186>
     3a8:	aa 0c       	add	r10, r10
     3aa:	bb 1c       	adc	r11, r11
     3ac:	cc 1c       	adc	r12, r12
     3ae:	dd 1c       	adc	r13, r13
     3b0:	ea 94       	dec	r14
     3b2:	d2 f7       	brpl	.-12     	; 0x3a8 <__udivdi3+0x17e>
     3b4:	ad a6       	std	Y+45, r10	; 0x2d
     3b6:	be a6       	std	Y+46, r11	; 0x2e
     3b8:	cf a6       	std	Y+47, r12	; 0x2f
     3ba:	d8 aa       	std	Y+48, r13	; 0x30
     3bc:	62 01       	movw	r12, r4
     3be:	ee 24       	eor	r14, r14
     3c0:	ff 24       	eor	r15, r15
     3c2:	cd aa       	std	Y+53, r12	; 0x35
     3c4:	de aa       	std	Y+54, r13	; 0x36
     3c6:	ef aa       	std	Y+55, r14	; 0x37
     3c8:	f8 ae       	std	Y+56, r15	; 0x38
     3ca:	92 01       	movw	r18, r4
     3cc:	81 01       	movw	r16, r2
     3ce:	20 70       	andi	r18, 0x00	; 0
     3d0:	30 70       	andi	r19, 0x00	; 0
     3d2:	09 af       	std	Y+57, r16	; 0x39
     3d4:	1a af       	std	Y+58, r17	; 0x3a
     3d6:	2b af       	std	Y+59, r18	; 0x3b
     3d8:	3c af       	std	Y+60, r19	; 0x3c
     3da:	c4 01       	movw	r24, r8
     3dc:	b3 01       	movw	r22, r6
     3de:	a7 01       	movw	r20, r14
     3e0:	96 01       	movw	r18, r12
     3e2:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     3e6:	7b 01       	movw	r14, r22
     3e8:	8c 01       	movw	r16, r24
     3ea:	c4 01       	movw	r24, r8
     3ec:	b3 01       	movw	r22, r6
     3ee:	2d a9       	ldd	r18, Y+53	; 0x35
     3f0:	3e a9       	ldd	r19, Y+54	; 0x36
     3f2:	4f a9       	ldd	r20, Y+55	; 0x37
     3f4:	58 ad       	ldd	r21, Y+56	; 0x38
     3f6:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     3fa:	c9 01       	movw	r24, r18
     3fc:	da 01       	movw	r26, r20
     3fe:	3c 01       	movw	r6, r24
     400:	4d 01       	movw	r8, r26
     402:	c4 01       	movw	r24, r8
     404:	b3 01       	movw	r22, r6
     406:	29 ad       	ldd	r18, Y+57	; 0x39
     408:	3a ad       	ldd	r19, Y+58	; 0x3a
     40a:	4b ad       	ldd	r20, Y+59	; 0x3b
     40c:	5c ad       	ldd	r21, Y+60	; 0x3c
     40e:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     412:	9b 01       	movw	r18, r22
     414:	ac 01       	movw	r20, r24
     416:	87 01       	movw	r16, r14
     418:	ff 24       	eor	r15, r15
     41a:	ee 24       	eor	r14, r14
     41c:	ad a4       	ldd	r10, Y+45	; 0x2d
     41e:	be a4       	ldd	r11, Y+46	; 0x2e
     420:	cf a4       	ldd	r12, Y+47	; 0x2f
     422:	d8 a8       	ldd	r13, Y+48	; 0x30
     424:	c6 01       	movw	r24, r12
     426:	aa 27       	eor	r26, r26
     428:	bb 27       	eor	r27, r27
     42a:	57 01       	movw	r10, r14
     42c:	68 01       	movw	r12, r16
     42e:	a8 2a       	or	r10, r24
     430:	b9 2a       	or	r11, r25
     432:	ca 2a       	or	r12, r26
     434:	db 2a       	or	r13, r27
     436:	a2 16       	cp	r10, r18
     438:	b3 06       	cpc	r11, r19
     43a:	c4 06       	cpc	r12, r20
     43c:	d5 06       	cpc	r13, r21
     43e:	e0 f4       	brcc	.+56     	; 0x478 <__udivdi3+0x24e>
     440:	08 94       	sec
     442:	61 08       	sbc	r6, r1
     444:	71 08       	sbc	r7, r1
     446:	81 08       	sbc	r8, r1
     448:	91 08       	sbc	r9, r1
     44a:	a2 0c       	add	r10, r2
     44c:	b3 1c       	adc	r11, r3
     44e:	c4 1c       	adc	r12, r4
     450:	d5 1c       	adc	r13, r5
     452:	a2 14       	cp	r10, r2
     454:	b3 04       	cpc	r11, r3
     456:	c4 04       	cpc	r12, r4
     458:	d5 04       	cpc	r13, r5
     45a:	70 f0       	brcs	.+28     	; 0x478 <__udivdi3+0x24e>
     45c:	a2 16       	cp	r10, r18
     45e:	b3 06       	cpc	r11, r19
     460:	c4 06       	cpc	r12, r20
     462:	d5 06       	cpc	r13, r21
     464:	48 f4       	brcc	.+18     	; 0x478 <__udivdi3+0x24e>
     466:	08 94       	sec
     468:	61 08       	sbc	r6, r1
     46a:	71 08       	sbc	r7, r1
     46c:	81 08       	sbc	r8, r1
     46e:	91 08       	sbc	r9, r1
     470:	a2 0c       	add	r10, r2
     472:	b3 1c       	adc	r11, r3
     474:	c4 1c       	adc	r12, r4
     476:	d5 1c       	adc	r13, r5
     478:	a2 1a       	sub	r10, r18
     47a:	b3 0a       	sbc	r11, r19
     47c:	c4 0a       	sbc	r12, r20
     47e:	d5 0a       	sbc	r13, r21
     480:	c6 01       	movw	r24, r12
     482:	b5 01       	movw	r22, r10
     484:	2d a9       	ldd	r18, Y+53	; 0x35
     486:	3e a9       	ldd	r19, Y+54	; 0x36
     488:	4f a9       	ldd	r20, Y+55	; 0x37
     48a:	58 ad       	ldd	r21, Y+56	; 0x38
     48c:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     490:	7b 01       	movw	r14, r22
     492:	8c 01       	movw	r16, r24
     494:	c6 01       	movw	r24, r12
     496:	b5 01       	movw	r22, r10
     498:	2d a9       	ldd	r18, Y+53	; 0x35
     49a:	3e a9       	ldd	r19, Y+54	; 0x36
     49c:	4f a9       	ldd	r20, Y+55	; 0x37
     49e:	58 ad       	ldd	r21, Y+56	; 0x38
     4a0:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     4a4:	c9 01       	movw	r24, r18
     4a6:	da 01       	movw	r26, r20
     4a8:	5c 01       	movw	r10, r24
     4aa:	6d 01       	movw	r12, r26
     4ac:	c6 01       	movw	r24, r12
     4ae:	b5 01       	movw	r22, r10
     4b0:	29 ad       	ldd	r18, Y+57	; 0x39
     4b2:	3a ad       	ldd	r19, Y+58	; 0x3a
     4b4:	4b ad       	ldd	r20, Y+59	; 0x3b
     4b6:	5c ad       	ldd	r21, Y+60	; 0x3c
     4b8:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     4bc:	9b 01       	movw	r18, r22
     4be:	ac 01       	movw	r20, r24
     4c0:	87 01       	movw	r16, r14
     4c2:	ff 24       	eor	r15, r15
     4c4:	ee 24       	eor	r14, r14
     4c6:	8d a5       	ldd	r24, Y+45	; 0x2d
     4c8:	9e a5       	ldd	r25, Y+46	; 0x2e
     4ca:	af a5       	ldd	r26, Y+47	; 0x2f
     4cc:	b8 a9       	ldd	r27, Y+48	; 0x30
     4ce:	a0 70       	andi	r26, 0x00	; 0
     4d0:	b0 70       	andi	r27, 0x00	; 0
     4d2:	e8 2a       	or	r14, r24
     4d4:	f9 2a       	or	r15, r25
     4d6:	0a 2b       	or	r16, r26
     4d8:	1b 2b       	or	r17, r27
     4da:	e2 16       	cp	r14, r18
     4dc:	f3 06       	cpc	r15, r19
     4de:	04 07       	cpc	r16, r20
     4e0:	15 07       	cpc	r17, r21
     4e2:	c0 f4       	brcc	.+48     	; 0x514 <__udivdi3+0x2ea>
     4e4:	08 94       	sec
     4e6:	a1 08       	sbc	r10, r1
     4e8:	b1 08       	sbc	r11, r1
     4ea:	c1 08       	sbc	r12, r1
     4ec:	d1 08       	sbc	r13, r1
     4ee:	e2 0c       	add	r14, r2
     4f0:	f3 1c       	adc	r15, r3
     4f2:	04 1d       	adc	r16, r4
     4f4:	15 1d       	adc	r17, r5
     4f6:	e2 14       	cp	r14, r2
     4f8:	f3 04       	cpc	r15, r3
     4fa:	04 05       	cpc	r16, r4
     4fc:	15 05       	cpc	r17, r5
     4fe:	50 f0       	brcs	.+20     	; 0x514 <__udivdi3+0x2ea>
     500:	e2 16       	cp	r14, r18
     502:	f3 06       	cpc	r15, r19
     504:	04 07       	cpc	r16, r20
     506:	15 07       	cpc	r17, r21
     508:	28 f4       	brcc	.+10     	; 0x514 <__udivdi3+0x2ea>
     50a:	08 94       	sec
     50c:	a1 08       	sbc	r10, r1
     50e:	b1 08       	sbc	r11, r1
     510:	c1 08       	sbc	r12, r1
     512:	d1 08       	sbc	r13, r1
     514:	d3 01       	movw	r26, r6
     516:	99 27       	eor	r25, r25
     518:	88 27       	eor	r24, r24
     51a:	86 01       	movw	r16, r12
     51c:	75 01       	movw	r14, r10
     51e:	e8 2a       	or	r14, r24
     520:	f9 2a       	or	r15, r25
     522:	0a 2b       	or	r16, r26
     524:	1b 2b       	or	r17, r27
     526:	e9 aa       	std	Y+49, r14	; 0x31
     528:	fa aa       	std	Y+50, r15	; 0x32
     52a:	0b ab       	std	Y+51, r16	; 0x33
     52c:	1c ab       	std	Y+52, r17	; 0x34
     52e:	cf c4       	rjmp	.+2462   	; 0xece <__stack+0x66f>
     530:	21 14       	cp	r2, r1
     532:	31 04       	cpc	r3, r1
     534:	41 04       	cpc	r4, r1
     536:	51 04       	cpc	r5, r1
     538:	71 f4       	brne	.+28     	; 0x556 <__udivdi3+0x32c>
     53a:	61 e0       	ldi	r22, 0x01	; 1
     53c:	70 e0       	ldi	r23, 0x00	; 0
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	40 e0       	ldi	r20, 0x00	; 0
     548:	50 e0       	ldi	r21, 0x00	; 0
     54a:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     54e:	c9 01       	movw	r24, r18
     550:	da 01       	movw	r26, r20
     552:	1c 01       	movw	r2, r24
     554:	2d 01       	movw	r4, r26
     556:	00 e0       	ldi	r16, 0x00	; 0
     558:	20 16       	cp	r2, r16
     55a:	00 e0       	ldi	r16, 0x00	; 0
     55c:	30 06       	cpc	r3, r16
     55e:	01 e0       	ldi	r16, 0x01	; 1
     560:	40 06       	cpc	r4, r16
     562:	00 e0       	ldi	r16, 0x00	; 0
     564:	50 06       	cpc	r5, r16
     566:	88 f4       	brcc	.+34     	; 0x58a <__udivdi3+0x360>
     568:	1f ef       	ldi	r17, 0xFF	; 255
     56a:	21 16       	cp	r2, r17
     56c:	31 04       	cpc	r3, r1
     56e:	41 04       	cpc	r4, r1
     570:	51 04       	cpc	r5, r1
     572:	31 f0       	breq	.+12     	; 0x580 <__udivdi3+0x356>
     574:	28 f0       	brcs	.+10     	; 0x580 <__udivdi3+0x356>
     576:	48 e0       	ldi	r20, 0x08	; 8
     578:	50 e0       	ldi	r21, 0x00	; 0
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	17 c0       	rjmp	.+46     	; 0x5ae <__udivdi3+0x384>
     580:	40 e0       	ldi	r20, 0x00	; 0
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	70 e0       	ldi	r23, 0x00	; 0
     588:	12 c0       	rjmp	.+36     	; 0x5ae <__udivdi3+0x384>
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	22 16       	cp	r2, r18
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	32 06       	cpc	r3, r18
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	42 06       	cpc	r4, r18
     596:	21 e0       	ldi	r18, 0x01	; 1
     598:	52 06       	cpc	r5, r18
     59a:	28 f0       	brcs	.+10     	; 0x5a6 <__udivdi3+0x37c>
     59c:	48 e1       	ldi	r20, 0x18	; 24
     59e:	50 e0       	ldi	r21, 0x00	; 0
     5a0:	60 e0       	ldi	r22, 0x00	; 0
     5a2:	70 e0       	ldi	r23, 0x00	; 0
     5a4:	04 c0       	rjmp	.+8      	; 0x5ae <__udivdi3+0x384>
     5a6:	40 e1       	ldi	r20, 0x10	; 16
     5a8:	50 e0       	ldi	r21, 0x00	; 0
     5aa:	60 e0       	ldi	r22, 0x00	; 0
     5ac:	70 e0       	ldi	r23, 0x00	; 0
     5ae:	d2 01       	movw	r26, r4
     5b0:	c1 01       	movw	r24, r2
     5b2:	04 2e       	mov	r0, r20
     5b4:	04 c0       	rjmp	.+8      	; 0x5be <__udivdi3+0x394>
     5b6:	b6 95       	lsr	r27
     5b8:	a7 95       	ror	r26
     5ba:	97 95       	ror	r25
     5bc:	87 95       	ror	r24
     5be:	0a 94       	dec	r0
     5c0:	d2 f7       	brpl	.-12     	; 0x5b6 <__udivdi3+0x38c>
     5c2:	8d 58       	subi	r24, 0x8D	; 141
     5c4:	9f 4f       	sbci	r25, 0xFF	; 255
     5c6:	dc 01       	movw	r26, r24
     5c8:	2c 91       	ld	r18, X
     5ca:	e0 e2       	ldi	r30, 0x20	; 32
     5cc:	ee 2e       	mov	r14, r30
     5ce:	f1 2c       	mov	r15, r1
     5d0:	01 2d       	mov	r16, r1
     5d2:	11 2d       	mov	r17, r1
     5d4:	d8 01       	movw	r26, r16
     5d6:	c7 01       	movw	r24, r14
     5d8:	84 1b       	sub	r24, r20
     5da:	95 0b       	sbc	r25, r21
     5dc:	a6 0b       	sbc	r26, r22
     5de:	b7 0b       	sbc	r27, r23
     5e0:	82 1b       	sub	r24, r18
     5e2:	91 09       	sbc	r25, r1
     5e4:	a1 09       	sbc	r26, r1
     5e6:	b1 09       	sbc	r27, r1
     5e8:	00 97       	sbiw	r24, 0x00	; 0
     5ea:	a1 05       	cpc	r26, r1
     5ec:	b1 05       	cpc	r27, r1
     5ee:	61 f4       	brne	.+24     	; 0x608 <__udivdi3+0x3de>
     5f0:	64 01       	movw	r12, r8
     5f2:	53 01       	movw	r10, r6
     5f4:	a2 18       	sub	r10, r2
     5f6:	b3 08       	sbc	r11, r3
     5f8:	c4 08       	sbc	r12, r4
     5fa:	d5 08       	sbc	r13, r5
     5fc:	31 e0       	ldi	r19, 0x01	; 1
     5fe:	63 2e       	mov	r6, r19
     600:	71 2c       	mov	r7, r1
     602:	81 2c       	mov	r8, r1
     604:	91 2c       	mov	r9, r1
     606:	1e c1       	rjmp	.+572    	; 0x844 <__udivdi3+0x61a>
     608:	6f 96       	adiw	r28, 0x1f	; 31
     60a:	8f af       	std	Y+63, r24	; 0x3f
     60c:	6f 97       	sbiw	r28, 0x1f	; 31
     60e:	08 2e       	mov	r0, r24
     610:	04 c0       	rjmp	.+8      	; 0x61a <__udivdi3+0x3f0>
     612:	22 0c       	add	r2, r2
     614:	33 1c       	adc	r3, r3
     616:	44 1c       	adc	r4, r4
     618:	55 1c       	adc	r5, r5
     61a:	0a 94       	dec	r0
     61c:	d2 f7       	brpl	.-12     	; 0x612 <__udivdi3+0x3e8>
     61e:	ee 2d       	mov	r30, r14
     620:	e8 1b       	sub	r30, r24
     622:	64 01       	movw	r12, r8
     624:	53 01       	movw	r10, r6
     626:	0e 2e       	mov	r0, r30
     628:	04 c0       	rjmp	.+8      	; 0x632 <__udivdi3+0x408>
     62a:	d6 94       	lsr	r13
     62c:	c7 94       	ror	r12
     62e:	b7 94       	ror	r11
     630:	a7 94       	ror	r10
     632:	0a 94       	dec	r0
     634:	d2 f7       	brpl	.-12     	; 0x62a <__udivdi3+0x400>
     636:	a4 01       	movw	r20, r8
     638:	93 01       	movw	r18, r6
     63a:	6f 96       	adiw	r28, 0x1f	; 31
     63c:	0f ac       	ldd	r0, Y+63	; 0x3f
     63e:	6f 97       	sbiw	r28, 0x1f	; 31
     640:	04 c0       	rjmp	.+8      	; 0x64a <__udivdi3+0x420>
     642:	22 0f       	add	r18, r18
     644:	33 1f       	adc	r19, r19
     646:	44 1f       	adc	r20, r20
     648:	55 1f       	adc	r21, r21
     64a:	0a 94       	dec	r0
     64c:	d2 f7       	brpl	.-12     	; 0x642 <__udivdi3+0x418>
     64e:	6d a4       	ldd	r6, Y+45	; 0x2d
     650:	7e a4       	ldd	r7, Y+46	; 0x2e
     652:	8f a4       	ldd	r8, Y+47	; 0x2f
     654:	98 a8       	ldd	r9, Y+48	; 0x30
     656:	0e 2e       	mov	r0, r30
     658:	04 c0       	rjmp	.+8      	; 0x662 <__udivdi3+0x438>
     65a:	96 94       	lsr	r9
     65c:	87 94       	ror	r8
     65e:	77 94       	ror	r7
     660:	67 94       	ror	r6
     662:	0a 94       	dec	r0
     664:	d2 f7       	brpl	.-12     	; 0x65a <__udivdi3+0x430>
     666:	84 01       	movw	r16, r8
     668:	73 01       	movw	r14, r6
     66a:	e2 2a       	or	r14, r18
     66c:	f3 2a       	or	r15, r19
     66e:	04 2b       	or	r16, r20
     670:	15 2b       	or	r17, r21
     672:	e9 a6       	std	Y+41, r14	; 0x29
     674:	fa a6       	std	Y+42, r15	; 0x2a
     676:	0b a7       	std	Y+43, r16	; 0x2b
     678:	1c a7       	std	Y+44, r17	; 0x2c
     67a:	32 01       	movw	r6, r4
     67c:	88 24       	eor	r8, r8
     67e:	99 24       	eor	r9, r9
     680:	92 01       	movw	r18, r4
     682:	81 01       	movw	r16, r2
     684:	20 70       	andi	r18, 0x00	; 0
     686:	30 70       	andi	r19, 0x00	; 0
     688:	21 96       	adiw	r28, 0x01	; 1
     68a:	0c af       	std	Y+60, r16	; 0x3c
     68c:	1d af       	std	Y+61, r17	; 0x3d
     68e:	2e af       	std	Y+62, r18	; 0x3e
     690:	3f af       	std	Y+63, r19	; 0x3f
     692:	21 97       	sbiw	r28, 0x01	; 1
     694:	c6 01       	movw	r24, r12
     696:	b5 01       	movw	r22, r10
     698:	a4 01       	movw	r20, r8
     69a:	93 01       	movw	r18, r6
     69c:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     6a0:	7b 01       	movw	r14, r22
     6a2:	8c 01       	movw	r16, r24
     6a4:	c6 01       	movw	r24, r12
     6a6:	b5 01       	movw	r22, r10
     6a8:	a4 01       	movw	r20, r8
     6aa:	93 01       	movw	r18, r6
     6ac:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     6b0:	c9 01       	movw	r24, r18
     6b2:	da 01       	movw	r26, r20
     6b4:	25 96       	adiw	r28, 0x05	; 5
     6b6:	8c af       	std	Y+60, r24	; 0x3c
     6b8:	9d af       	std	Y+61, r25	; 0x3d
     6ba:	ae af       	std	Y+62, r26	; 0x3e
     6bc:	bf af       	std	Y+63, r27	; 0x3f
     6be:	25 97       	sbiw	r28, 0x05	; 5
     6c0:	bc 01       	movw	r22, r24
     6c2:	cd 01       	movw	r24, r26
     6c4:	21 96       	adiw	r28, 0x01	; 1
     6c6:	2c ad       	ldd	r18, Y+60	; 0x3c
     6c8:	3d ad       	ldd	r19, Y+61	; 0x3d
     6ca:	4e ad       	ldd	r20, Y+62	; 0x3e
     6cc:	5f ad       	ldd	r21, Y+63	; 0x3f
     6ce:	21 97       	sbiw	r28, 0x01	; 1
     6d0:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     6d4:	9b 01       	movw	r18, r22
     6d6:	ac 01       	movw	r20, r24
     6d8:	87 01       	movw	r16, r14
     6da:	ff 24       	eor	r15, r15
     6dc:	ee 24       	eor	r14, r14
     6de:	a9 a4       	ldd	r10, Y+41	; 0x29
     6e0:	ba a4       	ldd	r11, Y+42	; 0x2a
     6e2:	cb a4       	ldd	r12, Y+43	; 0x2b
     6e4:	dc a4       	ldd	r13, Y+44	; 0x2c
     6e6:	c6 01       	movw	r24, r12
     6e8:	aa 27       	eor	r26, r26
     6ea:	bb 27       	eor	r27, r27
     6ec:	5c 01       	movw	r10, r24
     6ee:	6d 01       	movw	r12, r26
     6f0:	ae 28       	or	r10, r14
     6f2:	bf 28       	or	r11, r15
     6f4:	c0 2a       	or	r12, r16
     6f6:	d1 2a       	or	r13, r17
     6f8:	a2 16       	cp	r10, r18
     6fa:	b3 06       	cpc	r11, r19
     6fc:	c4 06       	cpc	r12, r20
     6fe:	d5 06       	cpc	r13, r21
     700:	60 f5       	brcc	.+88     	; 0x75a <__udivdi3+0x530>
     702:	25 96       	adiw	r28, 0x05	; 5
     704:	6c ad       	ldd	r22, Y+60	; 0x3c
     706:	7d ad       	ldd	r23, Y+61	; 0x3d
     708:	8e ad       	ldd	r24, Y+62	; 0x3e
     70a:	9f ad       	ldd	r25, Y+63	; 0x3f
     70c:	25 97       	sbiw	r28, 0x05	; 5
     70e:	61 50       	subi	r22, 0x01	; 1
     710:	70 40       	sbci	r23, 0x00	; 0
     712:	80 40       	sbci	r24, 0x00	; 0
     714:	90 40       	sbci	r25, 0x00	; 0
     716:	25 96       	adiw	r28, 0x05	; 5
     718:	6c af       	std	Y+60, r22	; 0x3c
     71a:	7d af       	std	Y+61, r23	; 0x3d
     71c:	8e af       	std	Y+62, r24	; 0x3e
     71e:	9f af       	std	Y+63, r25	; 0x3f
     720:	25 97       	sbiw	r28, 0x05	; 5
     722:	a2 0c       	add	r10, r2
     724:	b3 1c       	adc	r11, r3
     726:	c4 1c       	adc	r12, r4
     728:	d5 1c       	adc	r13, r5
     72a:	a2 14       	cp	r10, r2
     72c:	b3 04       	cpc	r11, r3
     72e:	c4 04       	cpc	r12, r4
     730:	d5 04       	cpc	r13, r5
     732:	98 f0       	brcs	.+38     	; 0x75a <__udivdi3+0x530>
     734:	a2 16       	cp	r10, r18
     736:	b3 06       	cpc	r11, r19
     738:	c4 06       	cpc	r12, r20
     73a:	d5 06       	cpc	r13, r21
     73c:	70 f4       	brcc	.+28     	; 0x75a <__udivdi3+0x530>
     73e:	61 50       	subi	r22, 0x01	; 1
     740:	70 40       	sbci	r23, 0x00	; 0
     742:	80 40       	sbci	r24, 0x00	; 0
     744:	90 40       	sbci	r25, 0x00	; 0
     746:	25 96       	adiw	r28, 0x05	; 5
     748:	6c af       	std	Y+60, r22	; 0x3c
     74a:	7d af       	std	Y+61, r23	; 0x3d
     74c:	8e af       	std	Y+62, r24	; 0x3e
     74e:	9f af       	std	Y+63, r25	; 0x3f
     750:	25 97       	sbiw	r28, 0x05	; 5
     752:	a2 0c       	add	r10, r2
     754:	b3 1c       	adc	r11, r3
     756:	c4 1c       	adc	r12, r4
     758:	d5 1c       	adc	r13, r5
     75a:	a2 1a       	sub	r10, r18
     75c:	b3 0a       	sbc	r11, r19
     75e:	c4 0a       	sbc	r12, r20
     760:	d5 0a       	sbc	r13, r21
     762:	c6 01       	movw	r24, r12
     764:	b5 01       	movw	r22, r10
     766:	a4 01       	movw	r20, r8
     768:	93 01       	movw	r18, r6
     76a:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     76e:	7b 01       	movw	r14, r22
     770:	8c 01       	movw	r16, r24
     772:	c6 01       	movw	r24, r12
     774:	b5 01       	movw	r22, r10
     776:	a4 01       	movw	r20, r8
     778:	93 01       	movw	r18, r6
     77a:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     77e:	c9 01       	movw	r24, r18
     780:	da 01       	movw	r26, r20
     782:	3c 01       	movw	r6, r24
     784:	4d 01       	movw	r8, r26
     786:	c4 01       	movw	r24, r8
     788:	b3 01       	movw	r22, r6
     78a:	21 96       	adiw	r28, 0x01	; 1
     78c:	2c ad       	ldd	r18, Y+60	; 0x3c
     78e:	3d ad       	ldd	r19, Y+61	; 0x3d
     790:	4e ad       	ldd	r20, Y+62	; 0x3e
     792:	5f ad       	ldd	r21, Y+63	; 0x3f
     794:	21 97       	sbiw	r28, 0x01	; 1
     796:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     79a:	9b 01       	movw	r18, r22
     79c:	ac 01       	movw	r20, r24
     79e:	87 01       	movw	r16, r14
     7a0:	ff 24       	eor	r15, r15
     7a2:	ee 24       	eor	r14, r14
     7a4:	89 a5       	ldd	r24, Y+41	; 0x29
     7a6:	9a a5       	ldd	r25, Y+42	; 0x2a
     7a8:	ab a5       	ldd	r26, Y+43	; 0x2b
     7aa:	bc a5       	ldd	r27, Y+44	; 0x2c
     7ac:	a0 70       	andi	r26, 0x00	; 0
     7ae:	b0 70       	andi	r27, 0x00	; 0
     7b0:	57 01       	movw	r10, r14
     7b2:	68 01       	movw	r12, r16
     7b4:	a8 2a       	or	r10, r24
     7b6:	b9 2a       	or	r11, r25
     7b8:	ca 2a       	or	r12, r26
     7ba:	db 2a       	or	r13, r27
     7bc:	a2 16       	cp	r10, r18
     7be:	b3 06       	cpc	r11, r19
     7c0:	c4 06       	cpc	r12, r20
     7c2:	d5 06       	cpc	r13, r21
     7c4:	e0 f4       	brcc	.+56     	; 0x7fe <__udivdi3+0x5d4>
     7c6:	08 94       	sec
     7c8:	61 08       	sbc	r6, r1
     7ca:	71 08       	sbc	r7, r1
     7cc:	81 08       	sbc	r8, r1
     7ce:	91 08       	sbc	r9, r1
     7d0:	a2 0c       	add	r10, r2
     7d2:	b3 1c       	adc	r11, r3
     7d4:	c4 1c       	adc	r12, r4
     7d6:	d5 1c       	adc	r13, r5
     7d8:	a2 14       	cp	r10, r2
     7da:	b3 04       	cpc	r11, r3
     7dc:	c4 04       	cpc	r12, r4
     7de:	d5 04       	cpc	r13, r5
     7e0:	70 f0       	brcs	.+28     	; 0x7fe <__udivdi3+0x5d4>
     7e2:	a2 16       	cp	r10, r18
     7e4:	b3 06       	cpc	r11, r19
     7e6:	c4 06       	cpc	r12, r20
     7e8:	d5 06       	cpc	r13, r21
     7ea:	48 f4       	brcc	.+18     	; 0x7fe <__udivdi3+0x5d4>
     7ec:	08 94       	sec
     7ee:	61 08       	sbc	r6, r1
     7f0:	71 08       	sbc	r7, r1
     7f2:	81 08       	sbc	r8, r1
     7f4:	91 08       	sbc	r9, r1
     7f6:	a2 0c       	add	r10, r2
     7f8:	b3 1c       	adc	r11, r3
     7fa:	c4 1c       	adc	r12, r4
     7fc:	d5 1c       	adc	r13, r5
     7fe:	8d a5       	ldd	r24, Y+45	; 0x2d
     800:	9e a5       	ldd	r25, Y+46	; 0x2e
     802:	af a5       	ldd	r26, Y+47	; 0x2f
     804:	b8 a9       	ldd	r27, Y+48	; 0x30
     806:	6f 96       	adiw	r28, 0x1f	; 31
     808:	0f ac       	ldd	r0, Y+63	; 0x3f
     80a:	6f 97       	sbiw	r28, 0x1f	; 31
     80c:	04 c0       	rjmp	.+8      	; 0x816 <__udivdi3+0x5ec>
     80e:	88 0f       	add	r24, r24
     810:	99 1f       	adc	r25, r25
     812:	aa 1f       	adc	r26, r26
     814:	bb 1f       	adc	r27, r27
     816:	0a 94       	dec	r0
     818:	d2 f7       	brpl	.-12     	; 0x80e <__udivdi3+0x5e4>
     81a:	8d a7       	std	Y+45, r24	; 0x2d
     81c:	9e a7       	std	Y+46, r25	; 0x2e
     81e:	af a7       	std	Y+47, r26	; 0x2f
     820:	b8 ab       	std	Y+48, r27	; 0x30
     822:	a2 1a       	sub	r10, r18
     824:	b3 0a       	sbc	r11, r19
     826:	c4 0a       	sbc	r12, r20
     828:	d5 0a       	sbc	r13, r21
     82a:	25 96       	adiw	r28, 0x05	; 5
     82c:	ec ac       	ldd	r14, Y+60	; 0x3c
     82e:	fd ac       	ldd	r15, Y+61	; 0x3d
     830:	0e ad       	ldd	r16, Y+62	; 0x3e
     832:	1f ad       	ldd	r17, Y+63	; 0x3f
     834:	25 97       	sbiw	r28, 0x05	; 5
     836:	d7 01       	movw	r26, r14
     838:	99 27       	eor	r25, r25
     83a:	88 27       	eor	r24, r24
     83c:	68 2a       	or	r6, r24
     83e:	79 2a       	or	r7, r25
     840:	8a 2a       	or	r8, r26
     842:	9b 2a       	or	r9, r27
     844:	82 01       	movw	r16, r4
     846:	22 27       	eor	r18, r18
     848:	33 27       	eor	r19, r19
     84a:	29 96       	adiw	r28, 0x09	; 9
     84c:	0c af       	std	Y+60, r16	; 0x3c
     84e:	1d af       	std	Y+61, r17	; 0x3d
     850:	2e af       	std	Y+62, r18	; 0x3e
     852:	3f af       	std	Y+63, r19	; 0x3f
     854:	29 97       	sbiw	r28, 0x09	; 9
     856:	a2 01       	movw	r20, r4
     858:	91 01       	movw	r18, r2
     85a:	40 70       	andi	r20, 0x00	; 0
     85c:	50 70       	andi	r21, 0x00	; 0
     85e:	2d 96       	adiw	r28, 0x0d	; 13
     860:	2c af       	std	Y+60, r18	; 0x3c
     862:	3d af       	std	Y+61, r19	; 0x3d
     864:	4e af       	std	Y+62, r20	; 0x3e
     866:	5f af       	std	Y+63, r21	; 0x3f
     868:	2d 97       	sbiw	r28, 0x0d	; 13
     86a:	c6 01       	movw	r24, r12
     86c:	b5 01       	movw	r22, r10
     86e:	29 96       	adiw	r28, 0x09	; 9
     870:	2c ad       	ldd	r18, Y+60	; 0x3c
     872:	3d ad       	ldd	r19, Y+61	; 0x3d
     874:	4e ad       	ldd	r20, Y+62	; 0x3e
     876:	5f ad       	ldd	r21, Y+63	; 0x3f
     878:	29 97       	sbiw	r28, 0x09	; 9
     87a:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     87e:	7b 01       	movw	r14, r22
     880:	8c 01       	movw	r16, r24
     882:	c6 01       	movw	r24, r12
     884:	b5 01       	movw	r22, r10
     886:	29 96       	adiw	r28, 0x09	; 9
     888:	2c ad       	ldd	r18, Y+60	; 0x3c
     88a:	3d ad       	ldd	r19, Y+61	; 0x3d
     88c:	4e ad       	ldd	r20, Y+62	; 0x3e
     88e:	5f ad       	ldd	r21, Y+63	; 0x3f
     890:	29 97       	sbiw	r28, 0x09	; 9
     892:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     896:	c9 01       	movw	r24, r18
     898:	da 01       	movw	r26, r20
     89a:	61 96       	adiw	r28, 0x11	; 17
     89c:	8c af       	std	Y+60, r24	; 0x3c
     89e:	9d af       	std	Y+61, r25	; 0x3d
     8a0:	ae af       	std	Y+62, r26	; 0x3e
     8a2:	bf af       	std	Y+63, r27	; 0x3f
     8a4:	61 97       	sbiw	r28, 0x11	; 17
     8a6:	bc 01       	movw	r22, r24
     8a8:	cd 01       	movw	r24, r26
     8aa:	2d 96       	adiw	r28, 0x0d	; 13
     8ac:	2c ad       	ldd	r18, Y+60	; 0x3c
     8ae:	3d ad       	ldd	r19, Y+61	; 0x3d
     8b0:	4e ad       	ldd	r20, Y+62	; 0x3e
     8b2:	5f ad       	ldd	r21, Y+63	; 0x3f
     8b4:	2d 97       	sbiw	r28, 0x0d	; 13
     8b6:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     8ba:	9b 01       	movw	r18, r22
     8bc:	ac 01       	movw	r20, r24
     8be:	87 01       	movw	r16, r14
     8c0:	ff 24       	eor	r15, r15
     8c2:	ee 24       	eor	r14, r14
     8c4:	ad a4       	ldd	r10, Y+45	; 0x2d
     8c6:	be a4       	ldd	r11, Y+46	; 0x2e
     8c8:	cf a4       	ldd	r12, Y+47	; 0x2f
     8ca:	d8 a8       	ldd	r13, Y+48	; 0x30
     8cc:	c6 01       	movw	r24, r12
     8ce:	aa 27       	eor	r26, r26
     8d0:	bb 27       	eor	r27, r27
     8d2:	57 01       	movw	r10, r14
     8d4:	68 01       	movw	r12, r16
     8d6:	a8 2a       	or	r10, r24
     8d8:	b9 2a       	or	r11, r25
     8da:	ca 2a       	or	r12, r26
     8dc:	db 2a       	or	r13, r27
     8de:	a2 16       	cp	r10, r18
     8e0:	b3 06       	cpc	r11, r19
     8e2:	c4 06       	cpc	r12, r20
     8e4:	d5 06       	cpc	r13, r21
     8e6:	60 f5       	brcc	.+88     	; 0x940 <__stack+0xe1>
     8e8:	61 96       	adiw	r28, 0x11	; 17
     8ea:	6c ad       	ldd	r22, Y+60	; 0x3c
     8ec:	7d ad       	ldd	r23, Y+61	; 0x3d
     8ee:	8e ad       	ldd	r24, Y+62	; 0x3e
     8f0:	9f ad       	ldd	r25, Y+63	; 0x3f
     8f2:	61 97       	sbiw	r28, 0x11	; 17
     8f4:	61 50       	subi	r22, 0x01	; 1
     8f6:	70 40       	sbci	r23, 0x00	; 0
     8f8:	80 40       	sbci	r24, 0x00	; 0
     8fa:	90 40       	sbci	r25, 0x00	; 0
     8fc:	61 96       	adiw	r28, 0x11	; 17
     8fe:	6c af       	std	Y+60, r22	; 0x3c
     900:	7d af       	std	Y+61, r23	; 0x3d
     902:	8e af       	std	Y+62, r24	; 0x3e
     904:	9f af       	std	Y+63, r25	; 0x3f
     906:	61 97       	sbiw	r28, 0x11	; 17
     908:	a2 0c       	add	r10, r2
     90a:	b3 1c       	adc	r11, r3
     90c:	c4 1c       	adc	r12, r4
     90e:	d5 1c       	adc	r13, r5
     910:	a2 14       	cp	r10, r2
     912:	b3 04       	cpc	r11, r3
     914:	c4 04       	cpc	r12, r4
     916:	d5 04       	cpc	r13, r5
     918:	98 f0       	brcs	.+38     	; 0x940 <__stack+0xe1>
     91a:	a2 16       	cp	r10, r18
     91c:	b3 06       	cpc	r11, r19
     91e:	c4 06       	cpc	r12, r20
     920:	d5 06       	cpc	r13, r21
     922:	70 f4       	brcc	.+28     	; 0x940 <__stack+0xe1>
     924:	61 50       	subi	r22, 0x01	; 1
     926:	70 40       	sbci	r23, 0x00	; 0
     928:	80 40       	sbci	r24, 0x00	; 0
     92a:	90 40       	sbci	r25, 0x00	; 0
     92c:	61 96       	adiw	r28, 0x11	; 17
     92e:	6c af       	std	Y+60, r22	; 0x3c
     930:	7d af       	std	Y+61, r23	; 0x3d
     932:	8e af       	std	Y+62, r24	; 0x3e
     934:	9f af       	std	Y+63, r25	; 0x3f
     936:	61 97       	sbiw	r28, 0x11	; 17
     938:	a2 0c       	add	r10, r2
     93a:	b3 1c       	adc	r11, r3
     93c:	c4 1c       	adc	r12, r4
     93e:	d5 1c       	adc	r13, r5
     940:	a2 1a       	sub	r10, r18
     942:	b3 0a       	sbc	r11, r19
     944:	c4 0a       	sbc	r12, r20
     946:	d5 0a       	sbc	r13, r21
     948:	c6 01       	movw	r24, r12
     94a:	b5 01       	movw	r22, r10
     94c:	29 96       	adiw	r28, 0x09	; 9
     94e:	2c ad       	ldd	r18, Y+60	; 0x3c
     950:	3d ad       	ldd	r19, Y+61	; 0x3d
     952:	4e ad       	ldd	r20, Y+62	; 0x3e
     954:	5f ad       	ldd	r21, Y+63	; 0x3f
     956:	29 97       	sbiw	r28, 0x09	; 9
     958:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     95c:	7b 01       	movw	r14, r22
     95e:	8c 01       	movw	r16, r24
     960:	c6 01       	movw	r24, r12
     962:	b5 01       	movw	r22, r10
     964:	29 96       	adiw	r28, 0x09	; 9
     966:	2c ad       	ldd	r18, Y+60	; 0x3c
     968:	3d ad       	ldd	r19, Y+61	; 0x3d
     96a:	4e ad       	ldd	r20, Y+62	; 0x3e
     96c:	5f ad       	ldd	r21, Y+63	; 0x3f
     96e:	29 97       	sbiw	r28, 0x09	; 9
     970:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     974:	c9 01       	movw	r24, r18
     976:	da 01       	movw	r26, r20
     978:	5c 01       	movw	r10, r24
     97a:	6d 01       	movw	r12, r26
     97c:	c6 01       	movw	r24, r12
     97e:	b5 01       	movw	r22, r10
     980:	2d 96       	adiw	r28, 0x0d	; 13
     982:	2c ad       	ldd	r18, Y+60	; 0x3c
     984:	3d ad       	ldd	r19, Y+61	; 0x3d
     986:	4e ad       	ldd	r20, Y+62	; 0x3e
     988:	5f ad       	ldd	r21, Y+63	; 0x3f
     98a:	2d 97       	sbiw	r28, 0x0d	; 13
     98c:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     990:	9b 01       	movw	r18, r22
     992:	ac 01       	movw	r20, r24
     994:	87 01       	movw	r16, r14
     996:	ff 24       	eor	r15, r15
     998:	ee 24       	eor	r14, r14
     99a:	8d a5       	ldd	r24, Y+45	; 0x2d
     99c:	9e a5       	ldd	r25, Y+46	; 0x2e
     99e:	af a5       	ldd	r26, Y+47	; 0x2f
     9a0:	b8 a9       	ldd	r27, Y+48	; 0x30
     9a2:	a0 70       	andi	r26, 0x00	; 0
     9a4:	b0 70       	andi	r27, 0x00	; 0
     9a6:	e8 2a       	or	r14, r24
     9a8:	f9 2a       	or	r15, r25
     9aa:	0a 2b       	or	r16, r26
     9ac:	1b 2b       	or	r17, r27
     9ae:	e2 16       	cp	r14, r18
     9b0:	f3 06       	cpc	r15, r19
     9b2:	04 07       	cpc	r16, r20
     9b4:	15 07       	cpc	r17, r21
     9b6:	c0 f4       	brcc	.+48     	; 0x9e8 <__stack+0x189>
     9b8:	08 94       	sec
     9ba:	a1 08       	sbc	r10, r1
     9bc:	b1 08       	sbc	r11, r1
     9be:	c1 08       	sbc	r12, r1
     9c0:	d1 08       	sbc	r13, r1
     9c2:	e2 0c       	add	r14, r2
     9c4:	f3 1c       	adc	r15, r3
     9c6:	04 1d       	adc	r16, r4
     9c8:	15 1d       	adc	r17, r5
     9ca:	e2 14       	cp	r14, r2
     9cc:	f3 04       	cpc	r15, r3
     9ce:	04 05       	cpc	r16, r4
     9d0:	15 05       	cpc	r17, r5
     9d2:	50 f0       	brcs	.+20     	; 0x9e8 <__stack+0x189>
     9d4:	e2 16       	cp	r14, r18
     9d6:	f3 06       	cpc	r15, r19
     9d8:	04 07       	cpc	r16, r20
     9da:	15 07       	cpc	r17, r21
     9dc:	28 f4       	brcc	.+10     	; 0x9e8 <__stack+0x189>
     9de:	08 94       	sec
     9e0:	a1 08       	sbc	r10, r1
     9e2:	b1 08       	sbc	r11, r1
     9e4:	c1 08       	sbc	r12, r1
     9e6:	d1 08       	sbc	r13, r1
     9e8:	61 96       	adiw	r28, 0x11	; 17
     9ea:	ec ac       	ldd	r14, Y+60	; 0x3c
     9ec:	fd ac       	ldd	r15, Y+61	; 0x3d
     9ee:	0e ad       	ldd	r16, Y+62	; 0x3e
     9f0:	1f ad       	ldd	r17, Y+63	; 0x3f
     9f2:	61 97       	sbiw	r28, 0x11	; 17
     9f4:	d7 01       	movw	r26, r14
     9f6:	99 27       	eor	r25, r25
     9f8:	88 27       	eor	r24, r24
     9fa:	96 01       	movw	r18, r12
     9fc:	85 01       	movw	r16, r10
     9fe:	08 2b       	or	r16, r24
     a00:	19 2b       	or	r17, r25
     a02:	2a 2b       	or	r18, r26
     a04:	3b 2b       	or	r19, r27
     a06:	09 ab       	std	Y+49, r16	; 0x31
     a08:	1a ab       	std	Y+50, r17	; 0x32
     a0a:	2b ab       	std	Y+51, r18	; 0x33
     a0c:	3c ab       	std	Y+52, r19	; 0x34
     a0e:	62 c2       	rjmp	.+1220   	; 0xed4 <__stack+0x675>
     a10:	6e 14       	cp	r6, r14
     a12:	7f 04       	cpc	r7, r15
     a14:	80 06       	cpc	r8, r16
     a16:	91 06       	cpc	r9, r17
     a18:	08 f4       	brcc	.+2      	; 0xa1c <__stack+0x1bd>
     a1a:	51 c2       	rjmp	.+1186   	; 0xebe <__stack+0x65f>
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	e2 16       	cp	r14, r18
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	f2 06       	cpc	r15, r18
     a24:	21 e0       	ldi	r18, 0x01	; 1
     a26:	02 07       	cpc	r16, r18
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	12 07       	cpc	r17, r18
     a2c:	88 f4       	brcc	.+34     	; 0xa50 <__stack+0x1f1>
     a2e:	3f ef       	ldi	r19, 0xFF	; 255
     a30:	e3 16       	cp	r14, r19
     a32:	f1 04       	cpc	r15, r1
     a34:	01 05       	cpc	r16, r1
     a36:	11 05       	cpc	r17, r1
     a38:	31 f0       	breq	.+12     	; 0xa46 <__stack+0x1e7>
     a3a:	28 f0       	brcs	.+10     	; 0xa46 <__stack+0x1e7>
     a3c:	48 e0       	ldi	r20, 0x08	; 8
     a3e:	50 e0       	ldi	r21, 0x00	; 0
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	17 c0       	rjmp	.+46     	; 0xa74 <__stack+0x215>
     a46:	40 e0       	ldi	r20, 0x00	; 0
     a48:	50 e0       	ldi	r21, 0x00	; 0
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	12 c0       	rjmp	.+36     	; 0xa74 <__stack+0x215>
     a50:	40 e0       	ldi	r20, 0x00	; 0
     a52:	e4 16       	cp	r14, r20
     a54:	40 e0       	ldi	r20, 0x00	; 0
     a56:	f4 06       	cpc	r15, r20
     a58:	40 e0       	ldi	r20, 0x00	; 0
     a5a:	04 07       	cpc	r16, r20
     a5c:	41 e0       	ldi	r20, 0x01	; 1
     a5e:	14 07       	cpc	r17, r20
     a60:	28 f0       	brcs	.+10     	; 0xa6c <__stack+0x20d>
     a62:	48 e1       	ldi	r20, 0x18	; 24
     a64:	50 e0       	ldi	r21, 0x00	; 0
     a66:	60 e0       	ldi	r22, 0x00	; 0
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <__stack+0x215>
     a6c:	40 e1       	ldi	r20, 0x10	; 16
     a6e:	50 e0       	ldi	r21, 0x00	; 0
     a70:	60 e0       	ldi	r22, 0x00	; 0
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	d8 01       	movw	r26, r16
     a76:	c7 01       	movw	r24, r14
     a78:	04 2e       	mov	r0, r20
     a7a:	04 c0       	rjmp	.+8      	; 0xa84 <__stack+0x225>
     a7c:	b6 95       	lsr	r27
     a7e:	a7 95       	ror	r26
     a80:	97 95       	ror	r25
     a82:	87 95       	ror	r24
     a84:	0a 94       	dec	r0
     a86:	d2 f7       	brpl	.-12     	; 0xa7c <__stack+0x21d>
     a88:	8d 58       	subi	r24, 0x8D	; 141
     a8a:	9f 4f       	sbci	r25, 0xFF	; 255
     a8c:	dc 01       	movw	r26, r24
     a8e:	2c 91       	ld	r18, X
     a90:	30 e2       	ldi	r19, 0x20	; 32
     a92:	a3 2e       	mov	r10, r19
     a94:	b1 2c       	mov	r11, r1
     a96:	c1 2c       	mov	r12, r1
     a98:	d1 2c       	mov	r13, r1
     a9a:	d6 01       	movw	r26, r12
     a9c:	c5 01       	movw	r24, r10
     a9e:	84 1b       	sub	r24, r20
     aa0:	95 0b       	sbc	r25, r21
     aa2:	a6 0b       	sbc	r26, r22
     aa4:	b7 0b       	sbc	r27, r23
     aa6:	82 1b       	sub	r24, r18
     aa8:	91 09       	sbc	r25, r1
     aaa:	a1 09       	sbc	r26, r1
     aac:	b1 09       	sbc	r27, r1
     aae:	00 97       	sbiw	r24, 0x00	; 0
     ab0:	a1 05       	cpc	r26, r1
     ab2:	b1 05       	cpc	r27, r1
     ab4:	89 f4       	brne	.+34     	; 0xad8 <__stack+0x279>
     ab6:	e6 14       	cp	r14, r6
     ab8:	f7 04       	cpc	r15, r7
     aba:	08 05       	cpc	r16, r8
     abc:	19 05       	cpc	r17, r9
     abe:	08 f4       	brcc	.+2      	; 0xac2 <__stack+0x263>
     ac0:	f2 c1       	rjmp	.+996    	; 0xea6 <__stack+0x647>
     ac2:	6d a4       	ldd	r6, Y+45	; 0x2d
     ac4:	7e a4       	ldd	r7, Y+46	; 0x2e
     ac6:	8f a4       	ldd	r8, Y+47	; 0x2f
     ac8:	98 a8       	ldd	r9, Y+48	; 0x30
     aca:	62 14       	cp	r6, r2
     acc:	73 04       	cpc	r7, r3
     ace:	84 04       	cpc	r8, r4
     ad0:	95 04       	cpc	r9, r5
     ad2:	08 f0       	brcs	.+2      	; 0xad6 <__stack+0x277>
     ad4:	e8 c1       	rjmp	.+976    	; 0xea6 <__stack+0x647>
     ad6:	f3 c1       	rjmp	.+998    	; 0xebe <__stack+0x65f>
     ad8:	6e 96       	adiw	r28, 0x1e	; 30
     ada:	8f af       	std	Y+63, r24	; 0x3f
     adc:	6e 97       	sbiw	r28, 0x1e	; 30
     ade:	08 2e       	mov	r0, r24
     ae0:	04 c0       	rjmp	.+8      	; 0xaea <__stack+0x28b>
     ae2:	ee 0c       	add	r14, r14
     ae4:	ff 1c       	adc	r15, r15
     ae6:	00 1f       	adc	r16, r16
     ae8:	11 1f       	adc	r17, r17
     aea:	0a 94       	dec	r0
     aec:	d2 f7       	brpl	.-12     	; 0xae2 <__stack+0x283>
     aee:	6a 2d       	mov	r22, r10
     af0:	68 1b       	sub	r22, r24
     af2:	d2 01       	movw	r26, r4
     af4:	c1 01       	movw	r24, r2
     af6:	06 2e       	mov	r0, r22
     af8:	04 c0       	rjmp	.+8      	; 0xb02 <__stack+0x2a3>
     afa:	b6 95       	lsr	r27
     afc:	a7 95       	ror	r26
     afe:	97 95       	ror	r25
     b00:	87 95       	ror	r24
     b02:	0a 94       	dec	r0
     b04:	d2 f7       	brpl	.-12     	; 0xafa <__stack+0x29b>
     b06:	5c 01       	movw	r10, r24
     b08:	6d 01       	movw	r12, r26
     b0a:	ae 28       	or	r10, r14
     b0c:	bf 28       	or	r11, r15
     b0e:	c0 2a       	or	r12, r16
     b10:	d1 2a       	or	r13, r17
     b12:	ad a2       	std	Y+37, r10	; 0x25
     b14:	be a2       	std	Y+38, r11	; 0x26
     b16:	cf a2       	std	Y+39, r12	; 0x27
     b18:	d8 a6       	std	Y+40, r13	; 0x28
     b1a:	72 01       	movw	r14, r4
     b1c:	61 01       	movw	r12, r2
     b1e:	6e 96       	adiw	r28, 0x1e	; 30
     b20:	0f ac       	ldd	r0, Y+63	; 0x3f
     b22:	6e 97       	sbiw	r28, 0x1e	; 30
     b24:	04 c0       	rjmp	.+8      	; 0xb2e <__stack+0x2cf>
     b26:	cc 0c       	add	r12, r12
     b28:	dd 1c       	adc	r13, r13
     b2a:	ee 1c       	adc	r14, r14
     b2c:	ff 1c       	adc	r15, r15
     b2e:	0a 94       	dec	r0
     b30:	d2 f7       	brpl	.-12     	; 0xb26 <__stack+0x2c7>
     b32:	c9 a2       	std	Y+33, r12	; 0x21
     b34:	da a2       	std	Y+34, r13	; 0x22
     b36:	eb a2       	std	Y+35, r14	; 0x23
     b38:	fc a2       	std	Y+36, r15	; 0x24
     b3a:	64 01       	movw	r12, r8
     b3c:	53 01       	movw	r10, r6
     b3e:	06 2e       	mov	r0, r22
     b40:	04 c0       	rjmp	.+8      	; 0xb4a <__stack+0x2eb>
     b42:	d6 94       	lsr	r13
     b44:	c7 94       	ror	r12
     b46:	b7 94       	ror	r11
     b48:	a7 94       	ror	r10
     b4a:	0a 94       	dec	r0
     b4c:	d2 f7       	brpl	.-12     	; 0xb42 <__stack+0x2e3>
     b4e:	d4 01       	movw	r26, r8
     b50:	c3 01       	movw	r24, r6
     b52:	6e 96       	adiw	r28, 0x1e	; 30
     b54:	0f ac       	ldd	r0, Y+63	; 0x3f
     b56:	6e 97       	sbiw	r28, 0x1e	; 30
     b58:	04 c0       	rjmp	.+8      	; 0xb62 <__stack+0x303>
     b5a:	88 0f       	add	r24, r24
     b5c:	99 1f       	adc	r25, r25
     b5e:	aa 1f       	adc	r26, r26
     b60:	bb 1f       	adc	r27, r27
     b62:	0a 94       	dec	r0
     b64:	d2 f7       	brpl	.-12     	; 0xb5a <__stack+0x2fb>
     b66:	ed a4       	ldd	r14, Y+45	; 0x2d
     b68:	fe a4       	ldd	r15, Y+46	; 0x2e
     b6a:	0f a5       	ldd	r16, Y+47	; 0x2f
     b6c:	18 a9       	ldd	r17, Y+48	; 0x30
     b6e:	04 c0       	rjmp	.+8      	; 0xb78 <__stack+0x319>
     b70:	16 95       	lsr	r17
     b72:	07 95       	ror	r16
     b74:	f7 94       	ror	r15
     b76:	e7 94       	ror	r14
     b78:	6a 95       	dec	r22
     b7a:	d2 f7       	brpl	.-12     	; 0xb70 <__stack+0x311>
     b7c:	37 01       	movw	r6, r14
     b7e:	48 01       	movw	r8, r16
     b80:	68 2a       	or	r6, r24
     b82:	79 2a       	or	r7, r25
     b84:	8a 2a       	or	r8, r26
     b86:	9b 2a       	or	r9, r27
     b88:	6d 8e       	std	Y+29, r6	; 0x1d
     b8a:	7e 8e       	std	Y+30, r7	; 0x1e
     b8c:	8f 8e       	std	Y+31, r8	; 0x1f
     b8e:	98 a2       	std	Y+32, r9	; 0x20
     b90:	ed a0       	ldd	r14, Y+37	; 0x25
     b92:	fe a0       	ldd	r15, Y+38	; 0x26
     b94:	0f a1       	ldd	r16, Y+39	; 0x27
     b96:	18 a5       	ldd	r17, Y+40	; 0x28
     b98:	38 01       	movw	r6, r16
     b9a:	88 24       	eor	r8, r8
     b9c:	99 24       	eor	r9, r9
     b9e:	98 01       	movw	r18, r16
     ba0:	87 01       	movw	r16, r14
     ba2:	20 70       	andi	r18, 0x00	; 0
     ba4:	30 70       	andi	r19, 0x00	; 0
     ba6:	65 96       	adiw	r28, 0x15	; 21
     ba8:	0c af       	std	Y+60, r16	; 0x3c
     baa:	1d af       	std	Y+61, r17	; 0x3d
     bac:	2e af       	std	Y+62, r18	; 0x3e
     bae:	3f af       	std	Y+63, r19	; 0x3f
     bb0:	65 97       	sbiw	r28, 0x15	; 21
     bb2:	c6 01       	movw	r24, r12
     bb4:	b5 01       	movw	r22, r10
     bb6:	a4 01       	movw	r20, r8
     bb8:	93 01       	movw	r18, r6
     bba:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     bbe:	7b 01       	movw	r14, r22
     bc0:	8c 01       	movw	r16, r24
     bc2:	c6 01       	movw	r24, r12
     bc4:	b5 01       	movw	r22, r10
     bc6:	a4 01       	movw	r20, r8
     bc8:	93 01       	movw	r18, r6
     bca:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     bce:	c9 01       	movw	r24, r18
     bd0:	da 01       	movw	r26, r20
     bd2:	1c 01       	movw	r2, r24
     bd4:	2d 01       	movw	r4, r26
     bd6:	c2 01       	movw	r24, r4
     bd8:	b1 01       	movw	r22, r2
     bda:	65 96       	adiw	r28, 0x15	; 21
     bdc:	2c ad       	ldd	r18, Y+60	; 0x3c
     bde:	3d ad       	ldd	r19, Y+61	; 0x3d
     be0:	4e ad       	ldd	r20, Y+62	; 0x3e
     be2:	5f ad       	ldd	r21, Y+63	; 0x3f
     be4:	65 97       	sbiw	r28, 0x15	; 21
     be6:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     bea:	9b 01       	movw	r18, r22
     bec:	ac 01       	movw	r20, r24
     bee:	87 01       	movw	r16, r14
     bf0:	ff 24       	eor	r15, r15
     bf2:	ee 24       	eor	r14, r14
     bf4:	ad 8c       	ldd	r10, Y+29	; 0x1d
     bf6:	be 8c       	ldd	r11, Y+30	; 0x1e
     bf8:	cf 8c       	ldd	r12, Y+31	; 0x1f
     bfa:	d8 a0       	ldd	r13, Y+32	; 0x20
     bfc:	c6 01       	movw	r24, r12
     bfe:	aa 27       	eor	r26, r26
     c00:	bb 27       	eor	r27, r27
     c02:	57 01       	movw	r10, r14
     c04:	68 01       	movw	r12, r16
     c06:	a8 2a       	or	r10, r24
     c08:	b9 2a       	or	r11, r25
     c0a:	ca 2a       	or	r12, r26
     c0c:	db 2a       	or	r13, r27
     c0e:	a2 16       	cp	r10, r18
     c10:	b3 06       	cpc	r11, r19
     c12:	c4 06       	cpc	r12, r20
     c14:	d5 06       	cpc	r13, r21
     c16:	00 f5       	brcc	.+64     	; 0xc58 <__stack+0x3f9>
     c18:	08 94       	sec
     c1a:	21 08       	sbc	r2, r1
     c1c:	31 08       	sbc	r3, r1
     c1e:	41 08       	sbc	r4, r1
     c20:	51 08       	sbc	r5, r1
     c22:	ed a0       	ldd	r14, Y+37	; 0x25
     c24:	fe a0       	ldd	r15, Y+38	; 0x26
     c26:	0f a1       	ldd	r16, Y+39	; 0x27
     c28:	18 a5       	ldd	r17, Y+40	; 0x28
     c2a:	ae 0c       	add	r10, r14
     c2c:	bf 1c       	adc	r11, r15
     c2e:	c0 1e       	adc	r12, r16
     c30:	d1 1e       	adc	r13, r17
     c32:	ae 14       	cp	r10, r14
     c34:	bf 04       	cpc	r11, r15
     c36:	c0 06       	cpc	r12, r16
     c38:	d1 06       	cpc	r13, r17
     c3a:	70 f0       	brcs	.+28     	; 0xc58 <__stack+0x3f9>
     c3c:	a2 16       	cp	r10, r18
     c3e:	b3 06       	cpc	r11, r19
     c40:	c4 06       	cpc	r12, r20
     c42:	d5 06       	cpc	r13, r21
     c44:	48 f4       	brcc	.+18     	; 0xc58 <__stack+0x3f9>
     c46:	08 94       	sec
     c48:	21 08       	sbc	r2, r1
     c4a:	31 08       	sbc	r3, r1
     c4c:	41 08       	sbc	r4, r1
     c4e:	51 08       	sbc	r5, r1
     c50:	ae 0c       	add	r10, r14
     c52:	bf 1c       	adc	r11, r15
     c54:	c0 1e       	adc	r12, r16
     c56:	d1 1e       	adc	r13, r17
     c58:	a2 1a       	sub	r10, r18
     c5a:	b3 0a       	sbc	r11, r19
     c5c:	c4 0a       	sbc	r12, r20
     c5e:	d5 0a       	sbc	r13, r21
     c60:	c6 01       	movw	r24, r12
     c62:	b5 01       	movw	r22, r10
     c64:	a4 01       	movw	r20, r8
     c66:	93 01       	movw	r18, r6
     c68:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     c6c:	7b 01       	movw	r14, r22
     c6e:	8c 01       	movw	r16, r24
     c70:	c6 01       	movw	r24, r12
     c72:	b5 01       	movw	r22, r10
     c74:	a4 01       	movw	r20, r8
     c76:	93 01       	movw	r18, r6
     c78:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
     c7c:	c9 01       	movw	r24, r18
     c7e:	da 01       	movw	r26, r20
     c80:	3c 01       	movw	r6, r24
     c82:	4d 01       	movw	r8, r26
     c84:	c4 01       	movw	r24, r8
     c86:	b3 01       	movw	r22, r6
     c88:	65 96       	adiw	r28, 0x15	; 21
     c8a:	2c ad       	ldd	r18, Y+60	; 0x3c
     c8c:	3d ad       	ldd	r19, Y+61	; 0x3d
     c8e:	4e ad       	ldd	r20, Y+62	; 0x3e
     c90:	5f ad       	ldd	r21, Y+63	; 0x3f
     c92:	65 97       	sbiw	r28, 0x15	; 21
     c94:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     c98:	9b 01       	movw	r18, r22
     c9a:	ac 01       	movw	r20, r24
     c9c:	87 01       	movw	r16, r14
     c9e:	ff 24       	eor	r15, r15
     ca0:	ee 24       	eor	r14, r14
     ca2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ca4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ca6:	af 8d       	ldd	r26, Y+31	; 0x1f
     ca8:	b8 a1       	ldd	r27, Y+32	; 0x20
     caa:	a0 70       	andi	r26, 0x00	; 0
     cac:	b0 70       	andi	r27, 0x00	; 0
     cae:	57 01       	movw	r10, r14
     cb0:	68 01       	movw	r12, r16
     cb2:	a8 2a       	or	r10, r24
     cb4:	b9 2a       	or	r11, r25
     cb6:	ca 2a       	or	r12, r26
     cb8:	db 2a       	or	r13, r27
     cba:	a2 16       	cp	r10, r18
     cbc:	b3 06       	cpc	r11, r19
     cbe:	c4 06       	cpc	r12, r20
     cc0:	d5 06       	cpc	r13, r21
     cc2:	00 f5       	brcc	.+64     	; 0xd04 <__stack+0x4a5>
     cc4:	08 94       	sec
     cc6:	61 08       	sbc	r6, r1
     cc8:	71 08       	sbc	r7, r1
     cca:	81 08       	sbc	r8, r1
     ccc:	91 08       	sbc	r9, r1
     cce:	6d a1       	ldd	r22, Y+37	; 0x25
     cd0:	7e a1       	ldd	r23, Y+38	; 0x26
     cd2:	8f a1       	ldd	r24, Y+39	; 0x27
     cd4:	98 a5       	ldd	r25, Y+40	; 0x28
     cd6:	a6 0e       	add	r10, r22
     cd8:	b7 1e       	adc	r11, r23
     cda:	c8 1e       	adc	r12, r24
     cdc:	d9 1e       	adc	r13, r25
     cde:	a6 16       	cp	r10, r22
     ce0:	b7 06       	cpc	r11, r23
     ce2:	c8 06       	cpc	r12, r24
     ce4:	d9 06       	cpc	r13, r25
     ce6:	70 f0       	brcs	.+28     	; 0xd04 <__stack+0x4a5>
     ce8:	a2 16       	cp	r10, r18
     cea:	b3 06       	cpc	r11, r19
     cec:	c4 06       	cpc	r12, r20
     cee:	d5 06       	cpc	r13, r21
     cf0:	48 f4       	brcc	.+18     	; 0xd04 <__stack+0x4a5>
     cf2:	08 94       	sec
     cf4:	61 08       	sbc	r6, r1
     cf6:	71 08       	sbc	r7, r1
     cf8:	81 08       	sbc	r8, r1
     cfa:	91 08       	sbc	r9, r1
     cfc:	a6 0e       	add	r10, r22
     cfe:	b7 1e       	adc	r11, r23
     d00:	c8 1e       	adc	r12, r24
     d02:	d9 1e       	adc	r13, r25
     d04:	d6 01       	movw	r26, r12
     d06:	c5 01       	movw	r24, r10
     d08:	82 1b       	sub	r24, r18
     d0a:	93 0b       	sbc	r25, r19
     d0c:	a4 0b       	sbc	r26, r20
     d0e:	b5 0b       	sbc	r27, r21
     d10:	89 8f       	std	Y+25, r24	; 0x19
     d12:	9a 8f       	std	Y+26, r25	; 0x1a
     d14:	ab 8f       	std	Y+27, r26	; 0x1b
     d16:	bc 8f       	std	Y+28, r27	; 0x1c
     d18:	d1 01       	movw	r26, r2
     d1a:	99 27       	eor	r25, r25
     d1c:	88 27       	eor	r24, r24
     d1e:	64 01       	movw	r12, r8
     d20:	53 01       	movw	r10, r6
     d22:	a8 2a       	or	r10, r24
     d24:	b9 2a       	or	r11, r25
     d26:	ca 2a       	or	r12, r26
     d28:	db 2a       	or	r13, r27
     d2a:	a9 aa       	std	Y+49, r10	; 0x31
     d2c:	ba aa       	std	Y+50, r11	; 0x32
     d2e:	cb aa       	std	Y+51, r12	; 0x33
     d30:	dc aa       	std	Y+52, r13	; 0x34
     d32:	86 01       	movw	r16, r12
     d34:	75 01       	movw	r14, r10
     d36:	2f ef       	ldi	r18, 0xFF	; 255
     d38:	3f ef       	ldi	r19, 0xFF	; 255
     d3a:	40 e0       	ldi	r20, 0x00	; 0
     d3c:	50 e0       	ldi	r21, 0x00	; 0
     d3e:	e2 22       	and	r14, r18
     d40:	f3 22       	and	r15, r19
     d42:	04 23       	and	r16, r20
     d44:	15 23       	and	r17, r21
     d46:	a6 01       	movw	r20, r12
     d48:	66 27       	eor	r22, r22
     d4a:	77 27       	eor	r23, r23
     d4c:	6d 96       	adiw	r28, 0x1d	; 29
     d4e:	4c af       	std	Y+60, r20	; 0x3c
     d50:	5d af       	std	Y+61, r21	; 0x3d
     d52:	6e af       	std	Y+62, r22	; 0x3e
     d54:	7f af       	std	Y+63, r23	; 0x3f
     d56:	6d 97       	sbiw	r28, 0x1d	; 29
     d58:	a9 a0       	ldd	r10, Y+33	; 0x21
     d5a:	ba a0       	ldd	r11, Y+34	; 0x22
     d5c:	cb a0       	ldd	r12, Y+35	; 0x23
     d5e:	dc a0       	ldd	r13, Y+36	; 0x24
     d60:	6f ef       	ldi	r22, 0xFF	; 255
     d62:	7f ef       	ldi	r23, 0xFF	; 255
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	a6 22       	and	r10, r22
     d6a:	b7 22       	and	r11, r23
     d6c:	c8 22       	and	r12, r24
     d6e:	d9 22       	and	r13, r25
     d70:	89 a1       	ldd	r24, Y+33	; 0x21
     d72:	9a a1       	ldd	r25, Y+34	; 0x22
     d74:	ab a1       	ldd	r26, Y+35	; 0x23
     d76:	bc a1       	ldd	r27, Y+36	; 0x24
     d78:	1d 01       	movw	r2, r26
     d7a:	44 24       	eor	r4, r4
     d7c:	55 24       	eor	r5, r5
     d7e:	c8 01       	movw	r24, r16
     d80:	b7 01       	movw	r22, r14
     d82:	a6 01       	movw	r20, r12
     d84:	95 01       	movw	r18, r10
     d86:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     d8a:	69 96       	adiw	r28, 0x19	; 25
     d8c:	6c af       	std	Y+60, r22	; 0x3c
     d8e:	7d af       	std	Y+61, r23	; 0x3d
     d90:	8e af       	std	Y+62, r24	; 0x3e
     d92:	9f af       	std	Y+63, r25	; 0x3f
     d94:	69 97       	sbiw	r28, 0x19	; 25
     d96:	c8 01       	movw	r24, r16
     d98:	b7 01       	movw	r22, r14
     d9a:	a2 01       	movw	r20, r4
     d9c:	91 01       	movw	r18, r2
     d9e:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     da2:	3b 01       	movw	r6, r22
     da4:	4c 01       	movw	r8, r24
     da6:	6d 96       	adiw	r28, 0x1d	; 29
     da8:	6c ad       	ldd	r22, Y+60	; 0x3c
     daa:	7d ad       	ldd	r23, Y+61	; 0x3d
     dac:	8e ad       	ldd	r24, Y+62	; 0x3e
     dae:	9f ad       	ldd	r25, Y+63	; 0x3f
     db0:	6d 97       	sbiw	r28, 0x1d	; 29
     db2:	a6 01       	movw	r20, r12
     db4:	95 01       	movw	r18, r10
     db6:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     dba:	7b 01       	movw	r14, r22
     dbc:	8c 01       	movw	r16, r24
     dbe:	6d 96       	adiw	r28, 0x1d	; 29
     dc0:	6c ad       	ldd	r22, Y+60	; 0x3c
     dc2:	7d ad       	ldd	r23, Y+61	; 0x3d
     dc4:	8e ad       	ldd	r24, Y+62	; 0x3e
     dc6:	9f ad       	ldd	r25, Y+63	; 0x3f
     dc8:	6d 97       	sbiw	r28, 0x1d	; 29
     dca:	a2 01       	movw	r20, r4
     dcc:	91 01       	movw	r18, r2
     dce:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
     dd2:	5b 01       	movw	r10, r22
     dd4:	6c 01       	movw	r12, r24
     dd6:	a8 01       	movw	r20, r16
     dd8:	97 01       	movw	r18, r14
     dda:	26 0d       	add	r18, r6
     ddc:	37 1d       	adc	r19, r7
     dde:	48 1d       	adc	r20, r8
     de0:	59 1d       	adc	r21, r9
     de2:	69 96       	adiw	r28, 0x19	; 25
     de4:	6c ac       	ldd	r6, Y+60	; 0x3c
     de6:	7d ac       	ldd	r7, Y+61	; 0x3d
     de8:	8e ac       	ldd	r8, Y+62	; 0x3e
     dea:	9f ac       	ldd	r9, Y+63	; 0x3f
     dec:	69 97       	sbiw	r28, 0x19	; 25
     dee:	c4 01       	movw	r24, r8
     df0:	aa 27       	eor	r26, r26
     df2:	bb 27       	eor	r27, r27
     df4:	28 0f       	add	r18, r24
     df6:	39 1f       	adc	r19, r25
     df8:	4a 1f       	adc	r20, r26
     dfa:	5b 1f       	adc	r21, r27
     dfc:	2e 15       	cp	r18, r14
     dfe:	3f 05       	cpc	r19, r15
     e00:	40 07       	cpc	r20, r16
     e02:	51 07       	cpc	r21, r17
     e04:	48 f4       	brcc	.+18     	; 0xe18 <__stack+0x5b9>
     e06:	e1 2c       	mov	r14, r1
     e08:	f1 2c       	mov	r15, r1
     e0a:	61 e0       	ldi	r22, 0x01	; 1
     e0c:	06 2f       	mov	r16, r22
     e0e:	11 2d       	mov	r17, r1
     e10:	ae 0c       	add	r10, r14
     e12:	bf 1c       	adc	r11, r15
     e14:	c0 1e       	adc	r12, r16
     e16:	d1 1e       	adc	r13, r17
     e18:	ca 01       	movw	r24, r20
     e1a:	aa 27       	eor	r26, r26
     e1c:	bb 27       	eor	r27, r27
     e1e:	bc 01       	movw	r22, r24
     e20:	cd 01       	movw	r24, r26
     e22:	6a 0d       	add	r22, r10
     e24:	7b 1d       	adc	r23, r11
     e26:	8c 1d       	adc	r24, r12
     e28:	9d 1d       	adc	r25, r13
     e2a:	69 8c       	ldd	r6, Y+25	; 0x19
     e2c:	7a 8c       	ldd	r7, Y+26	; 0x1a
     e2e:	8b 8c       	ldd	r8, Y+27	; 0x1b
     e30:	9c 8c       	ldd	r9, Y+28	; 0x1c
     e32:	66 16       	cp	r6, r22
     e34:	77 06       	cpc	r7, r23
     e36:	88 06       	cpc	r8, r24
     e38:	99 06       	cpc	r9, r25
     e3a:	40 f1       	brcs	.+80     	; 0xe8c <__stack+0x62d>
     e3c:	66 15       	cp	r22, r6
     e3e:	77 05       	cpc	r23, r7
     e40:	88 05       	cpc	r24, r8
     e42:	99 05       	cpc	r25, r9
     e44:	09 f0       	breq	.+2      	; 0xe48 <__stack+0x5e9>
     e46:	43 c0       	rjmp	.+134    	; 0xece <__stack+0x66f>
     e48:	d9 01       	movw	r26, r18
     e4a:	99 27       	eor	r25, r25
     e4c:	88 27       	eor	r24, r24
     e4e:	69 96       	adiw	r28, 0x19	; 25
     e50:	2c ad       	ldd	r18, Y+60	; 0x3c
     e52:	3d ad       	ldd	r19, Y+61	; 0x3d
     e54:	4e ad       	ldd	r20, Y+62	; 0x3e
     e56:	5f ad       	ldd	r21, Y+63	; 0x3f
     e58:	69 97       	sbiw	r28, 0x19	; 25
     e5a:	40 70       	andi	r20, 0x00	; 0
     e5c:	50 70       	andi	r21, 0x00	; 0
     e5e:	82 0f       	add	r24, r18
     e60:	93 1f       	adc	r25, r19
     e62:	a4 1f       	adc	r26, r20
     e64:	b5 1f       	adc	r27, r21
     e66:	2d a5       	ldd	r18, Y+45	; 0x2d
     e68:	3e a5       	ldd	r19, Y+46	; 0x2e
     e6a:	4f a5       	ldd	r20, Y+47	; 0x2f
     e6c:	58 a9       	ldd	r21, Y+48	; 0x30
     e6e:	6e 96       	adiw	r28, 0x1e	; 30
     e70:	0f ac       	ldd	r0, Y+63	; 0x3f
     e72:	6e 97       	sbiw	r28, 0x1e	; 30
     e74:	04 c0       	rjmp	.+8      	; 0xe7e <__stack+0x61f>
     e76:	22 0f       	add	r18, r18
     e78:	33 1f       	adc	r19, r19
     e7a:	44 1f       	adc	r20, r20
     e7c:	55 1f       	adc	r21, r21
     e7e:	0a 94       	dec	r0
     e80:	d2 f7       	brpl	.-12     	; 0xe76 <__stack+0x617>
     e82:	28 17       	cp	r18, r24
     e84:	39 07       	cpc	r19, r25
     e86:	4a 07       	cpc	r20, r26
     e88:	5b 07       	cpc	r21, r27
     e8a:	08 f5       	brcc	.+66     	; 0xece <__stack+0x66f>
     e8c:	09 a9       	ldd	r16, Y+49	; 0x31
     e8e:	1a a9       	ldd	r17, Y+50	; 0x32
     e90:	2b a9       	ldd	r18, Y+51	; 0x33
     e92:	3c a9       	ldd	r19, Y+52	; 0x34
     e94:	01 50       	subi	r16, 0x01	; 1
     e96:	10 40       	sbci	r17, 0x00	; 0
     e98:	20 40       	sbci	r18, 0x00	; 0
     e9a:	30 40       	sbci	r19, 0x00	; 0
     e9c:	09 ab       	std	Y+49, r16	; 0x31
     e9e:	1a ab       	std	Y+50, r17	; 0x32
     ea0:	2b ab       	std	Y+51, r18	; 0x33
     ea2:	3c ab       	std	Y+52, r19	; 0x34
     ea4:	14 c0       	rjmp	.+40     	; 0xece <__stack+0x66f>
     ea6:	66 24       	eor	r6, r6
     ea8:	77 24       	eor	r7, r7
     eaa:	43 01       	movw	r8, r6
     eac:	21 e0       	ldi	r18, 0x01	; 1
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	29 ab       	std	Y+49, r18	; 0x31
     eb6:	3a ab       	std	Y+50, r19	; 0x32
     eb8:	4b ab       	std	Y+51, r20	; 0x33
     eba:	5c ab       	std	Y+52, r21	; 0x34
     ebc:	0b c0       	rjmp	.+22     	; 0xed4 <__stack+0x675>
     ebe:	66 24       	eor	r6, r6
     ec0:	77 24       	eor	r7, r7
     ec2:	43 01       	movw	r8, r6
     ec4:	19 aa       	std	Y+49, r1	; 0x31
     ec6:	1a aa       	std	Y+50, r1	; 0x32
     ec8:	1b aa       	std	Y+51, r1	; 0x33
     eca:	1c aa       	std	Y+52, r1	; 0x34
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <__stack+0x675>
     ece:	66 24       	eor	r6, r6
     ed0:	77 24       	eor	r7, r7
     ed2:	43 01       	movw	r8, r6
     ed4:	fe 01       	movw	r30, r28
     ed6:	71 96       	adiw	r30, 0x11	; 17
     ed8:	88 e0       	ldi	r24, 0x08	; 8
     eda:	df 01       	movw	r26, r30
     edc:	1d 92       	st	X+, r1
     ede:	8a 95       	dec	r24
     ee0:	e9 f7       	brne	.-6      	; 0xedc <__stack+0x67d>
     ee2:	a9 a8       	ldd	r10, Y+49	; 0x31
     ee4:	ba a8       	ldd	r11, Y+50	; 0x32
     ee6:	cb a8       	ldd	r12, Y+51	; 0x33
     ee8:	dc a8       	ldd	r13, Y+52	; 0x34
     eea:	a9 8a       	std	Y+17, r10	; 0x11
     eec:	ba 8a       	std	Y+18, r11	; 0x12
     eee:	cb 8a       	std	Y+19, r12	; 0x13
     ef0:	dc 8a       	std	Y+20, r13	; 0x14
     ef2:	6d 8a       	std	Y+21, r6	; 0x15
     ef4:	7e 8a       	std	Y+22, r7	; 0x16
     ef6:	8f 8a       	std	Y+23, r8	; 0x17
     ef8:	98 8e       	std	Y+24, r9	; 0x18
     efa:	29 a9       	ldd	r18, Y+49	; 0x31
     efc:	3a 89       	ldd	r19, Y+18	; 0x12
     efe:	4b 89       	ldd	r20, Y+19	; 0x13
     f00:	5c 89       	ldd	r21, Y+20	; 0x14
     f02:	66 2d       	mov	r22, r6
     f04:	7e 89       	ldd	r23, Y+22	; 0x16
     f06:	8f 89       	ldd	r24, Y+23	; 0x17
     f08:	98 8d       	ldd	r25, Y+24	; 0x18
     f0a:	c2 5a       	subi	r28, 0xA2	; 162
     f0c:	df 4f       	sbci	r29, 0xFF	; 255
     f0e:	e2 e1       	ldi	r30, 0x12	; 18
     f10:	0c 94 d8 28 	jmp	0x51b0	; 0x51b0 <__epilogue_restores__>

00000f14 <__umoddi3>:
     f14:	ab e5       	ldi	r26, 0x5B	; 91
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	e0 e9       	ldi	r30, 0x90	; 144
     f1a:	f7 e0       	ldi	r31, 0x07	; 7
     f1c:	0c 94 bc 28 	jmp	0x5178	; 0x5178 <__prologue_saves__>
     f20:	a8 e0       	ldi	r26, 0x08	; 8
     f22:	4e 01       	movw	r8, r28
     f24:	08 94       	sec
     f26:	81 1c       	adc	r8, r1
     f28:	91 1c       	adc	r9, r1
     f2a:	f4 01       	movw	r30, r8
     f2c:	6a 2e       	mov	r6, r26
     f2e:	11 92       	st	Z+, r1
     f30:	6a 94       	dec	r6
     f32:	e9 f7       	brne	.-6      	; 0xf2e <__umoddi3+0x1a>
     f34:	29 83       	std	Y+1, r18	; 0x01
     f36:	3a 83       	std	Y+2, r19	; 0x02
     f38:	4b 83       	std	Y+3, r20	; 0x03
     f3a:	5c 83       	std	Y+4, r21	; 0x04
     f3c:	6d 83       	std	Y+5, r22	; 0x05
     f3e:	7e 83       	std	Y+6, r23	; 0x06
     f40:	8f 83       	std	Y+7, r24	; 0x07
     f42:	98 87       	std	Y+8, r25	; 0x08
     f44:	ce 01       	movw	r24, r28
     f46:	09 96       	adiw	r24, 0x09	; 9
     f48:	fc 01       	movw	r30, r24
     f4a:	11 92       	st	Z+, r1
     f4c:	aa 95       	dec	r26
     f4e:	e9 f7       	brne	.-6      	; 0xf4a <__umoddi3+0x36>
     f50:	a9 86       	std	Y+9, r10	; 0x09
     f52:	ba 86       	std	Y+10, r11	; 0x0a
     f54:	cb 86       	std	Y+11, r12	; 0x0b
     f56:	dc 86       	std	Y+12, r13	; 0x0c
     f58:	ed 86       	std	Y+13, r14	; 0x0d
     f5a:	fe 86       	std	Y+14, r15	; 0x0e
     f5c:	0f 87       	std	Y+15, r16	; 0x0f
     f5e:	18 8b       	std	Y+16, r17	; 0x10
     f60:	29 84       	ldd	r2, Y+9	; 0x09
     f62:	3a 84       	ldd	r3, Y+10	; 0x0a
     f64:	4b 84       	ldd	r4, Y+11	; 0x0b
     f66:	5c 84       	ldd	r5, Y+12	; 0x0c
     f68:	ad 84       	ldd	r10, Y+13	; 0x0d
     f6a:	be 84       	ldd	r11, Y+14	; 0x0e
     f6c:	cf 84       	ldd	r12, Y+15	; 0x0f
     f6e:	d8 88       	ldd	r13, Y+16	; 0x10
     f70:	29 81       	ldd	r18, Y+1	; 0x01
     f72:	3a 81       	ldd	r19, Y+2	; 0x02
     f74:	4b 81       	ldd	r20, Y+3	; 0x03
     f76:	5c 81       	ldd	r21, Y+4	; 0x04
     f78:	69 96       	adiw	r28, 0x19	; 25
     f7a:	2f af       	std	Y+63, r18	; 0x3f
     f7c:	69 97       	sbiw	r28, 0x19	; 25
     f7e:	6a 96       	adiw	r28, 0x1a	; 26
     f80:	3f af       	std	Y+63, r19	; 0x3f
     f82:	6a 97       	sbiw	r28, 0x1a	; 26
     f84:	6b 96       	adiw	r28, 0x1b	; 27
     f86:	4f af       	std	Y+63, r20	; 0x3f
     f88:	6b 97       	sbiw	r28, 0x1b	; 27
     f8a:	6c 96       	adiw	r28, 0x1c	; 28
     f8c:	5f af       	std	Y+63, r21	; 0x3f
     f8e:	6c 97       	sbiw	r28, 0x1c	; 28
     f90:	6c 96       	adiw	r28, 0x1c	; 28
     f92:	6c ac       	ldd	r6, Y+60	; 0x3c
     f94:	7d ac       	ldd	r7, Y+61	; 0x3d
     f96:	8e ac       	ldd	r8, Y+62	; 0x3e
     f98:	9f ac       	ldd	r9, Y+63	; 0x3f
     f9a:	6c 97       	sbiw	r28, 0x1c	; 28
     f9c:	69 aa       	std	Y+49, r6	; 0x31
     f9e:	7a aa       	std	Y+50, r7	; 0x32
     fa0:	8b aa       	std	Y+51, r8	; 0x33
     fa2:	9c aa       	std	Y+52, r9	; 0x34
     fa4:	6d 81       	ldd	r22, Y+5	; 0x05
     fa6:	7e 81       	ldd	r23, Y+6	; 0x06
     fa8:	8f 81       	ldd	r24, Y+7	; 0x07
     faa:	98 85       	ldd	r25, Y+8	; 0x08
     fac:	3b 01       	movw	r6, r22
     fae:	4c 01       	movw	r8, r24
     fb0:	6d aa       	std	Y+53, r6	; 0x35
     fb2:	7e aa       	std	Y+54, r7	; 0x36
     fb4:	8f aa       	std	Y+55, r8	; 0x37
     fb6:	98 ae       	std	Y+56, r9	; 0x38
     fb8:	a1 14       	cp	r10, r1
     fba:	b1 04       	cpc	r11, r1
     fbc:	c1 04       	cpc	r12, r1
     fbe:	d1 04       	cpc	r13, r1
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <__umoddi3+0xb0>
     fc2:	04 c3       	rjmp	.+1544   	; 0x15cc <__umoddi3+0x6b8>
     fc4:	62 14       	cp	r6, r2
     fc6:	73 04       	cpc	r7, r3
     fc8:	84 04       	cpc	r8, r4
     fca:	95 04       	cpc	r9, r5
     fcc:	08 f0       	brcs	.+2      	; 0xfd0 <__umoddi3+0xbc>
     fce:	00 c1       	rjmp	.+512    	; 0x11d0 <__umoddi3+0x2bc>
     fd0:	00 e0       	ldi	r16, 0x00	; 0
     fd2:	20 16       	cp	r2, r16
     fd4:	00 e0       	ldi	r16, 0x00	; 0
     fd6:	30 06       	cpc	r3, r16
     fd8:	01 e0       	ldi	r16, 0x01	; 1
     fda:	40 06       	cpc	r4, r16
     fdc:	00 e0       	ldi	r16, 0x00	; 0
     fde:	50 06       	cpc	r5, r16
     fe0:	88 f4       	brcc	.+34     	; 0x1004 <__umoddi3+0xf0>
     fe2:	1f ef       	ldi	r17, 0xFF	; 255
     fe4:	21 16       	cp	r2, r17
     fe6:	31 04       	cpc	r3, r1
     fe8:	41 04       	cpc	r4, r1
     fea:	51 04       	cpc	r5, r1
     fec:	39 f0       	breq	.+14     	; 0xffc <__umoddi3+0xe8>
     fee:	30 f0       	brcs	.+12     	; 0xffc <__umoddi3+0xe8>
     ff0:	88 e0       	ldi	r24, 0x08	; 8
     ff2:	e8 2e       	mov	r14, r24
     ff4:	f1 2c       	mov	r15, r1
     ff6:	01 2d       	mov	r16, r1
     ff8:	11 2d       	mov	r17, r1
     ffa:	18 c0       	rjmp	.+48     	; 0x102c <__umoddi3+0x118>
     ffc:	ee 24       	eor	r14, r14
     ffe:	ff 24       	eor	r15, r15
    1000:	87 01       	movw	r16, r14
    1002:	14 c0       	rjmp	.+40     	; 0x102c <__umoddi3+0x118>
    1004:	40 e0       	ldi	r20, 0x00	; 0
    1006:	24 16       	cp	r2, r20
    1008:	40 e0       	ldi	r20, 0x00	; 0
    100a:	34 06       	cpc	r3, r20
    100c:	40 e0       	ldi	r20, 0x00	; 0
    100e:	44 06       	cpc	r4, r20
    1010:	41 e0       	ldi	r20, 0x01	; 1
    1012:	54 06       	cpc	r5, r20
    1014:	30 f0       	brcs	.+12     	; 0x1022 <__umoddi3+0x10e>
    1016:	b8 e1       	ldi	r27, 0x18	; 24
    1018:	eb 2e       	mov	r14, r27
    101a:	f1 2c       	mov	r15, r1
    101c:	01 2d       	mov	r16, r1
    101e:	11 2d       	mov	r17, r1
    1020:	05 c0       	rjmp	.+10     	; 0x102c <__umoddi3+0x118>
    1022:	a0 e1       	ldi	r26, 0x10	; 16
    1024:	ea 2e       	mov	r14, r26
    1026:	f1 2c       	mov	r15, r1
    1028:	01 2d       	mov	r16, r1
    102a:	11 2d       	mov	r17, r1
    102c:	d2 01       	movw	r26, r4
    102e:	c1 01       	movw	r24, r2
    1030:	0e 2c       	mov	r0, r14
    1032:	04 c0       	rjmp	.+8      	; 0x103c <__umoddi3+0x128>
    1034:	b6 95       	lsr	r27
    1036:	a7 95       	ror	r26
    1038:	97 95       	ror	r25
    103a:	87 95       	ror	r24
    103c:	0a 94       	dec	r0
    103e:	d2 f7       	brpl	.-12     	; 0x1034 <__umoddi3+0x120>
    1040:	8d 58       	subi	r24, 0x8D	; 141
    1042:	9f 4f       	sbci	r25, 0xFF	; 255
    1044:	dc 01       	movw	r26, r24
    1046:	2c 91       	ld	r18, X
    1048:	80 e2       	ldi	r24, 0x20	; 32
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	a0 e0       	ldi	r26, 0x00	; 0
    104e:	b0 e0       	ldi	r27, 0x00	; 0
    1050:	8e 19       	sub	r24, r14
    1052:	9f 09       	sbc	r25, r15
    1054:	a0 0b       	sbc	r26, r16
    1056:	b1 0b       	sbc	r27, r17
    1058:	5c 01       	movw	r10, r24
    105a:	6d 01       	movw	r12, r26
    105c:	a2 1a       	sub	r10, r18
    105e:	b1 08       	sbc	r11, r1
    1060:	c1 08       	sbc	r12, r1
    1062:	d1 08       	sbc	r13, r1
    1064:	a9 ae       	std	Y+57, r10	; 0x39
    1066:	ba ae       	std	Y+58, r11	; 0x3a
    1068:	cb ae       	std	Y+59, r12	; 0x3b
    106a:	dc ae       	std	Y+60, r13	; 0x3c
    106c:	a1 14       	cp	r10, r1
    106e:	b1 04       	cpc	r11, r1
    1070:	c1 04       	cpc	r12, r1
    1072:	d1 04       	cpc	r13, r1
    1074:	09 f4       	brne	.+2      	; 0x1078 <__umoddi3+0x164>
    1076:	3f c0       	rjmp	.+126    	; 0x10f6 <__umoddi3+0x1e2>
    1078:	69 ad       	ldd	r22, Y+57	; 0x39
    107a:	06 2e       	mov	r0, r22
    107c:	04 c0       	rjmp	.+8      	; 0x1086 <__umoddi3+0x172>
    107e:	22 0c       	add	r2, r2
    1080:	33 1c       	adc	r3, r3
    1082:	44 1c       	adc	r4, r4
    1084:	55 1c       	adc	r5, r5
    1086:	0a 94       	dec	r0
    1088:	d2 f7       	brpl	.-12     	; 0x107e <__umoddi3+0x16a>
    108a:	a4 01       	movw	r20, r8
    108c:	93 01       	movw	r18, r6
    108e:	06 2e       	mov	r0, r22
    1090:	04 c0       	rjmp	.+8      	; 0x109a <__umoddi3+0x186>
    1092:	22 0f       	add	r18, r18
    1094:	33 1f       	adc	r19, r19
    1096:	44 1f       	adc	r20, r20
    1098:	55 1f       	adc	r21, r21
    109a:	0a 94       	dec	r0
    109c:	d2 f7       	brpl	.-12     	; 0x1092 <__umoddi3+0x17e>
    109e:	80 e2       	ldi	r24, 0x20	; 32
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	8a 19       	sub	r24, r10
    10a4:	9b 09       	sbc	r25, r11
    10a6:	6c 96       	adiw	r28, 0x1c	; 28
    10a8:	cc ac       	ldd	r12, Y+60	; 0x3c
    10aa:	dd ac       	ldd	r13, Y+61	; 0x3d
    10ac:	ee ac       	ldd	r14, Y+62	; 0x3e
    10ae:	ff ac       	ldd	r15, Y+63	; 0x3f
    10b0:	6c 97       	sbiw	r28, 0x1c	; 28
    10b2:	04 c0       	rjmp	.+8      	; 0x10bc <__umoddi3+0x1a8>
    10b4:	f6 94       	lsr	r15
    10b6:	e7 94       	ror	r14
    10b8:	d7 94       	ror	r13
    10ba:	c7 94       	ror	r12
    10bc:	8a 95       	dec	r24
    10be:	d2 f7       	brpl	.-12     	; 0x10b4 <__umoddi3+0x1a0>
    10c0:	87 01       	movw	r16, r14
    10c2:	76 01       	movw	r14, r12
    10c4:	e2 2a       	or	r14, r18
    10c6:	f3 2a       	or	r15, r19
    10c8:	04 2b       	or	r16, r20
    10ca:	15 2b       	or	r17, r21
    10cc:	ed aa       	std	Y+53, r14	; 0x35
    10ce:	fe aa       	std	Y+54, r15	; 0x36
    10d0:	0f ab       	std	Y+55, r16	; 0x37
    10d2:	18 af       	std	Y+56, r17	; 0x38
    10d4:	6c 96       	adiw	r28, 0x1c	; 28
    10d6:	8c ad       	ldd	r24, Y+60	; 0x3c
    10d8:	9d ad       	ldd	r25, Y+61	; 0x3d
    10da:	ae ad       	ldd	r26, Y+62	; 0x3e
    10dc:	bf ad       	ldd	r27, Y+63	; 0x3f
    10de:	6c 97       	sbiw	r28, 0x1c	; 28
    10e0:	04 c0       	rjmp	.+8      	; 0x10ea <__umoddi3+0x1d6>
    10e2:	88 0f       	add	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	aa 1f       	adc	r26, r26
    10e8:	bb 1f       	adc	r27, r27
    10ea:	6a 95       	dec	r22
    10ec:	d2 f7       	brpl	.-12     	; 0x10e2 <__umoddi3+0x1ce>
    10ee:	89 ab       	std	Y+49, r24	; 0x31
    10f0:	9a ab       	std	Y+50, r25	; 0x32
    10f2:	ab ab       	std	Y+51, r26	; 0x33
    10f4:	bc ab       	std	Y+52, r27	; 0x34
    10f6:	32 01       	movw	r6, r4
    10f8:	88 24       	eor	r8, r8
    10fa:	99 24       	eor	r9, r9
    10fc:	b2 01       	movw	r22, r4
    10fe:	a1 01       	movw	r20, r2
    1100:	60 70       	andi	r22, 0x00	; 0
    1102:	70 70       	andi	r23, 0x00	; 0
    1104:	21 96       	adiw	r28, 0x01	; 1
    1106:	4c af       	std	Y+60, r20	; 0x3c
    1108:	5d af       	std	Y+61, r21	; 0x3d
    110a:	6e af       	std	Y+62, r22	; 0x3e
    110c:	7f af       	std	Y+63, r23	; 0x3f
    110e:	21 97       	sbiw	r28, 0x01	; 1
    1110:	6d a9       	ldd	r22, Y+53	; 0x35
    1112:	7e a9       	ldd	r23, Y+54	; 0x36
    1114:	8f a9       	ldd	r24, Y+55	; 0x37
    1116:	98 ad       	ldd	r25, Y+56	; 0x38
    1118:	a4 01       	movw	r20, r8
    111a:	93 01       	movw	r18, r6
    111c:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1120:	7b 01       	movw	r14, r22
    1122:	8c 01       	movw	r16, r24
    1124:	6d a9       	ldd	r22, Y+53	; 0x35
    1126:	7e a9       	ldd	r23, Y+54	; 0x36
    1128:	8f a9       	ldd	r24, Y+55	; 0x37
    112a:	98 ad       	ldd	r25, Y+56	; 0x38
    112c:	a4 01       	movw	r20, r8
    112e:	93 01       	movw	r18, r6
    1130:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1134:	ca 01       	movw	r24, r20
    1136:	b9 01       	movw	r22, r18
    1138:	21 96       	adiw	r28, 0x01	; 1
    113a:	2c ad       	ldd	r18, Y+60	; 0x3c
    113c:	3d ad       	ldd	r19, Y+61	; 0x3d
    113e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1140:	5f ad       	ldd	r21, Y+63	; 0x3f
    1142:	21 97       	sbiw	r28, 0x01	; 1
    1144:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    1148:	9b 01       	movw	r18, r22
    114a:	ac 01       	movw	r20, r24
    114c:	87 01       	movw	r16, r14
    114e:	ff 24       	eor	r15, r15
    1150:	ee 24       	eor	r14, r14
    1152:	a9 a8       	ldd	r10, Y+49	; 0x31
    1154:	ba a8       	ldd	r11, Y+50	; 0x32
    1156:	cb a8       	ldd	r12, Y+51	; 0x33
    1158:	dc a8       	ldd	r13, Y+52	; 0x34
    115a:	c6 01       	movw	r24, r12
    115c:	aa 27       	eor	r26, r26
    115e:	bb 27       	eor	r27, r27
    1160:	57 01       	movw	r10, r14
    1162:	68 01       	movw	r12, r16
    1164:	a8 2a       	or	r10, r24
    1166:	b9 2a       	or	r11, r25
    1168:	ca 2a       	or	r12, r26
    116a:	db 2a       	or	r13, r27
    116c:	a2 16       	cp	r10, r18
    116e:	b3 06       	cpc	r11, r19
    1170:	c4 06       	cpc	r12, r20
    1172:	d5 06       	cpc	r13, r21
    1174:	90 f4       	brcc	.+36     	; 0x119a <__umoddi3+0x286>
    1176:	a2 0c       	add	r10, r2
    1178:	b3 1c       	adc	r11, r3
    117a:	c4 1c       	adc	r12, r4
    117c:	d5 1c       	adc	r13, r5
    117e:	a2 14       	cp	r10, r2
    1180:	b3 04       	cpc	r11, r3
    1182:	c4 04       	cpc	r12, r4
    1184:	d5 04       	cpc	r13, r5
    1186:	48 f0       	brcs	.+18     	; 0x119a <__umoddi3+0x286>
    1188:	a2 16       	cp	r10, r18
    118a:	b3 06       	cpc	r11, r19
    118c:	c4 06       	cpc	r12, r20
    118e:	d5 06       	cpc	r13, r21
    1190:	20 f4       	brcc	.+8      	; 0x119a <__umoddi3+0x286>
    1192:	a2 0c       	add	r10, r2
    1194:	b3 1c       	adc	r11, r3
    1196:	c4 1c       	adc	r12, r4
    1198:	d5 1c       	adc	r13, r5
    119a:	a2 1a       	sub	r10, r18
    119c:	b3 0a       	sbc	r11, r19
    119e:	c4 0a       	sbc	r12, r20
    11a0:	d5 0a       	sbc	r13, r21
    11a2:	c6 01       	movw	r24, r12
    11a4:	b5 01       	movw	r22, r10
    11a6:	a4 01       	movw	r20, r8
    11a8:	93 01       	movw	r18, r6
    11aa:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    11ae:	7b 01       	movw	r14, r22
    11b0:	8c 01       	movw	r16, r24
    11b2:	c6 01       	movw	r24, r12
    11b4:	b5 01       	movw	r22, r10
    11b6:	a4 01       	movw	r20, r8
    11b8:	93 01       	movw	r18, r6
    11ba:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    11be:	ca 01       	movw	r24, r20
    11c0:	b9 01       	movw	r22, r18
    11c2:	21 96       	adiw	r28, 0x01	; 1
    11c4:	2c ad       	ldd	r18, Y+60	; 0x3c
    11c6:	3d ad       	ldd	r19, Y+61	; 0x3d
    11c8:	4e ad       	ldd	r20, Y+62	; 0x3e
    11ca:	5f ad       	ldd	r21, Y+63	; 0x3f
    11cc:	21 97       	sbiw	r28, 0x01	; 1
    11ce:	ba c1       	rjmp	.+884    	; 0x1544 <__umoddi3+0x630>
    11d0:	21 14       	cp	r2, r1
    11d2:	31 04       	cpc	r3, r1
    11d4:	41 04       	cpc	r4, r1
    11d6:	51 04       	cpc	r5, r1
    11d8:	71 f4       	brne	.+28     	; 0x11f6 <__umoddi3+0x2e2>
    11da:	61 e0       	ldi	r22, 0x01	; 1
    11dc:	70 e0       	ldi	r23, 0x00	; 0
    11de:	80 e0       	ldi	r24, 0x00	; 0
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	40 e0       	ldi	r20, 0x00	; 0
    11e8:	50 e0       	ldi	r21, 0x00	; 0
    11ea:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    11ee:	c9 01       	movw	r24, r18
    11f0:	da 01       	movw	r26, r20
    11f2:	1c 01       	movw	r2, r24
    11f4:	2d 01       	movw	r4, r26
    11f6:	00 e0       	ldi	r16, 0x00	; 0
    11f8:	20 16       	cp	r2, r16
    11fa:	00 e0       	ldi	r16, 0x00	; 0
    11fc:	30 06       	cpc	r3, r16
    11fe:	01 e0       	ldi	r16, 0x01	; 1
    1200:	40 06       	cpc	r4, r16
    1202:	00 e0       	ldi	r16, 0x00	; 0
    1204:	50 06       	cpc	r5, r16
    1206:	88 f4       	brcc	.+34     	; 0x122a <__umoddi3+0x316>
    1208:	1f ef       	ldi	r17, 0xFF	; 255
    120a:	21 16       	cp	r2, r17
    120c:	31 04       	cpc	r3, r1
    120e:	41 04       	cpc	r4, r1
    1210:	51 04       	cpc	r5, r1
    1212:	39 f0       	breq	.+14     	; 0x1222 <__umoddi3+0x30e>
    1214:	30 f0       	brcs	.+12     	; 0x1222 <__umoddi3+0x30e>
    1216:	68 e0       	ldi	r22, 0x08	; 8
    1218:	e6 2e       	mov	r14, r22
    121a:	f1 2c       	mov	r15, r1
    121c:	01 2d       	mov	r16, r1
    121e:	11 2d       	mov	r17, r1
    1220:	18 c0       	rjmp	.+48     	; 0x1252 <__umoddi3+0x33e>
    1222:	ee 24       	eor	r14, r14
    1224:	ff 24       	eor	r15, r15
    1226:	87 01       	movw	r16, r14
    1228:	14 c0       	rjmp	.+40     	; 0x1252 <__umoddi3+0x33e>
    122a:	40 e0       	ldi	r20, 0x00	; 0
    122c:	24 16       	cp	r2, r20
    122e:	40 e0       	ldi	r20, 0x00	; 0
    1230:	34 06       	cpc	r3, r20
    1232:	40 e0       	ldi	r20, 0x00	; 0
    1234:	44 06       	cpc	r4, r20
    1236:	41 e0       	ldi	r20, 0x01	; 1
    1238:	54 06       	cpc	r5, r20
    123a:	30 f0       	brcs	.+12     	; 0x1248 <__umoddi3+0x334>
    123c:	58 e1       	ldi	r21, 0x18	; 24
    123e:	e5 2e       	mov	r14, r21
    1240:	f1 2c       	mov	r15, r1
    1242:	01 2d       	mov	r16, r1
    1244:	11 2d       	mov	r17, r1
    1246:	05 c0       	rjmp	.+10     	; 0x1252 <__umoddi3+0x33e>
    1248:	40 e1       	ldi	r20, 0x10	; 16
    124a:	e4 2e       	mov	r14, r20
    124c:	f1 2c       	mov	r15, r1
    124e:	01 2d       	mov	r16, r1
    1250:	11 2d       	mov	r17, r1
    1252:	d2 01       	movw	r26, r4
    1254:	c1 01       	movw	r24, r2
    1256:	0e 2c       	mov	r0, r14
    1258:	04 c0       	rjmp	.+8      	; 0x1262 <__umoddi3+0x34e>
    125a:	b6 95       	lsr	r27
    125c:	a7 95       	ror	r26
    125e:	97 95       	ror	r25
    1260:	87 95       	ror	r24
    1262:	0a 94       	dec	r0
    1264:	d2 f7       	brpl	.-12     	; 0x125a <__umoddi3+0x346>
    1266:	8d 58       	subi	r24, 0x8D	; 141
    1268:	9f 4f       	sbci	r25, 0xFF	; 255
    126a:	dc 01       	movw	r26, r24
    126c:	2c 91       	ld	r18, X
    126e:	30 e2       	ldi	r19, 0x20	; 32
    1270:	a3 2e       	mov	r10, r19
    1272:	b1 2c       	mov	r11, r1
    1274:	c1 2c       	mov	r12, r1
    1276:	d1 2c       	mov	r13, r1
    1278:	d6 01       	movw	r26, r12
    127a:	c5 01       	movw	r24, r10
    127c:	8e 19       	sub	r24, r14
    127e:	9f 09       	sbc	r25, r15
    1280:	a0 0b       	sbc	r26, r16
    1282:	b1 0b       	sbc	r27, r17
    1284:	7c 01       	movw	r14, r24
    1286:	8d 01       	movw	r16, r26
    1288:	e2 1a       	sub	r14, r18
    128a:	f1 08       	sbc	r15, r1
    128c:	01 09       	sbc	r16, r1
    128e:	11 09       	sbc	r17, r1
    1290:	e9 ae       	std	Y+57, r14	; 0x39
    1292:	fa ae       	std	Y+58, r15	; 0x3a
    1294:	0b af       	std	Y+59, r16	; 0x3b
    1296:	1c af       	std	Y+60, r17	; 0x3c
    1298:	e1 14       	cp	r14, r1
    129a:	f1 04       	cpc	r15, r1
    129c:	01 05       	cpc	r16, r1
    129e:	11 05       	cpc	r17, r1
    12a0:	39 f4       	brne	.+14     	; 0x12b0 <__umoddi3+0x39c>
    12a2:	64 01       	movw	r12, r8
    12a4:	53 01       	movw	r10, r6
    12a6:	a2 18       	sub	r10, r2
    12a8:	b3 08       	sbc	r11, r3
    12aa:	c4 08       	sbc	r12, r4
    12ac:	d5 08       	sbc	r13, r5
    12ae:	e2 c0       	rjmp	.+452    	; 0x1474 <__umoddi3+0x560>
    12b0:	f9 ac       	ldd	r15, Y+57	; 0x39
    12b2:	68 96       	adiw	r28, 0x18	; 24
    12b4:	ff ae       	std	Y+63, r15	; 0x3f
    12b6:	68 97       	sbiw	r28, 0x18	; 24
    12b8:	0f 2c       	mov	r0, r15
    12ba:	04 c0       	rjmp	.+8      	; 0x12c4 <__umoddi3+0x3b0>
    12bc:	22 0c       	add	r2, r2
    12be:	33 1c       	adc	r3, r3
    12c0:	44 1c       	adc	r4, r4
    12c2:	55 1c       	adc	r5, r5
    12c4:	0a 94       	dec	r0
    12c6:	d2 f7       	brpl	.-12     	; 0x12bc <__umoddi3+0x3a8>
    12c8:	8a 2d       	mov	r24, r10
    12ca:	8f 19       	sub	r24, r15
    12cc:	64 01       	movw	r12, r8
    12ce:	53 01       	movw	r10, r6
    12d0:	08 2e       	mov	r0, r24
    12d2:	04 c0       	rjmp	.+8      	; 0x12dc <__umoddi3+0x3c8>
    12d4:	d6 94       	lsr	r13
    12d6:	c7 94       	ror	r12
    12d8:	b7 94       	ror	r11
    12da:	a7 94       	ror	r10
    12dc:	0a 94       	dec	r0
    12de:	d2 f7       	brpl	.-12     	; 0x12d4 <__umoddi3+0x3c0>
    12e0:	a4 01       	movw	r20, r8
    12e2:	93 01       	movw	r18, r6
    12e4:	04 c0       	rjmp	.+8      	; 0x12ee <__umoddi3+0x3da>
    12e6:	22 0f       	add	r18, r18
    12e8:	33 1f       	adc	r19, r19
    12ea:	44 1f       	adc	r20, r20
    12ec:	55 1f       	adc	r21, r21
    12ee:	fa 94       	dec	r15
    12f0:	d2 f7       	brpl	.-12     	; 0x12e6 <__umoddi3+0x3d2>
    12f2:	6c 96       	adiw	r28, 0x1c	; 28
    12f4:	6c ac       	ldd	r6, Y+60	; 0x3c
    12f6:	7d ac       	ldd	r7, Y+61	; 0x3d
    12f8:	8e ac       	ldd	r8, Y+62	; 0x3e
    12fa:	9f ac       	ldd	r9, Y+63	; 0x3f
    12fc:	6c 97       	sbiw	r28, 0x1c	; 28
    12fe:	04 c0       	rjmp	.+8      	; 0x1308 <__umoddi3+0x3f4>
    1300:	96 94       	lsr	r9
    1302:	87 94       	ror	r8
    1304:	77 94       	ror	r7
    1306:	67 94       	ror	r6
    1308:	8a 95       	dec	r24
    130a:	d2 f7       	brpl	.-12     	; 0x1300 <__umoddi3+0x3ec>
    130c:	84 01       	movw	r16, r8
    130e:	73 01       	movw	r14, r6
    1310:	e2 2a       	or	r14, r18
    1312:	f3 2a       	or	r15, r19
    1314:	04 2b       	or	r16, r20
    1316:	15 2b       	or	r17, r21
    1318:	ed a6       	std	Y+45, r14	; 0x2d
    131a:	fe a6       	std	Y+46, r15	; 0x2e
    131c:	0f a7       	std	Y+47, r16	; 0x2f
    131e:	18 ab       	std	Y+48, r17	; 0x30
    1320:	32 01       	movw	r6, r4
    1322:	88 24       	eor	r8, r8
    1324:	99 24       	eor	r9, r9
    1326:	b2 01       	movw	r22, r4
    1328:	a1 01       	movw	r20, r2
    132a:	60 70       	andi	r22, 0x00	; 0
    132c:	70 70       	andi	r23, 0x00	; 0
    132e:	25 96       	adiw	r28, 0x05	; 5
    1330:	4c af       	std	Y+60, r20	; 0x3c
    1332:	5d af       	std	Y+61, r21	; 0x3d
    1334:	6e af       	std	Y+62, r22	; 0x3e
    1336:	7f af       	std	Y+63, r23	; 0x3f
    1338:	25 97       	sbiw	r28, 0x05	; 5
    133a:	c6 01       	movw	r24, r12
    133c:	b5 01       	movw	r22, r10
    133e:	a4 01       	movw	r20, r8
    1340:	93 01       	movw	r18, r6
    1342:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1346:	7b 01       	movw	r14, r22
    1348:	8c 01       	movw	r16, r24
    134a:	c6 01       	movw	r24, r12
    134c:	b5 01       	movw	r22, r10
    134e:	a4 01       	movw	r20, r8
    1350:	93 01       	movw	r18, r6
    1352:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1356:	ca 01       	movw	r24, r20
    1358:	b9 01       	movw	r22, r18
    135a:	25 96       	adiw	r28, 0x05	; 5
    135c:	2c ad       	ldd	r18, Y+60	; 0x3c
    135e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1360:	4e ad       	ldd	r20, Y+62	; 0x3e
    1362:	5f ad       	ldd	r21, Y+63	; 0x3f
    1364:	25 97       	sbiw	r28, 0x05	; 5
    1366:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    136a:	9b 01       	movw	r18, r22
    136c:	ac 01       	movw	r20, r24
    136e:	87 01       	movw	r16, r14
    1370:	ff 24       	eor	r15, r15
    1372:	ee 24       	eor	r14, r14
    1374:	ad a4       	ldd	r10, Y+45	; 0x2d
    1376:	be a4       	ldd	r11, Y+46	; 0x2e
    1378:	cf a4       	ldd	r12, Y+47	; 0x2f
    137a:	d8 a8       	ldd	r13, Y+48	; 0x30
    137c:	c6 01       	movw	r24, r12
    137e:	aa 27       	eor	r26, r26
    1380:	bb 27       	eor	r27, r27
    1382:	5c 01       	movw	r10, r24
    1384:	6d 01       	movw	r12, r26
    1386:	ae 28       	or	r10, r14
    1388:	bf 28       	or	r11, r15
    138a:	c0 2a       	or	r12, r16
    138c:	d1 2a       	or	r13, r17
    138e:	a2 16       	cp	r10, r18
    1390:	b3 06       	cpc	r11, r19
    1392:	c4 06       	cpc	r12, r20
    1394:	d5 06       	cpc	r13, r21
    1396:	90 f4       	brcc	.+36     	; 0x13bc <__umoddi3+0x4a8>
    1398:	a2 0c       	add	r10, r2
    139a:	b3 1c       	adc	r11, r3
    139c:	c4 1c       	adc	r12, r4
    139e:	d5 1c       	adc	r13, r5
    13a0:	a2 14       	cp	r10, r2
    13a2:	b3 04       	cpc	r11, r3
    13a4:	c4 04       	cpc	r12, r4
    13a6:	d5 04       	cpc	r13, r5
    13a8:	48 f0       	brcs	.+18     	; 0x13bc <__umoddi3+0x4a8>
    13aa:	a2 16       	cp	r10, r18
    13ac:	b3 06       	cpc	r11, r19
    13ae:	c4 06       	cpc	r12, r20
    13b0:	d5 06       	cpc	r13, r21
    13b2:	20 f4       	brcc	.+8      	; 0x13bc <__umoddi3+0x4a8>
    13b4:	a2 0c       	add	r10, r2
    13b6:	b3 1c       	adc	r11, r3
    13b8:	c4 1c       	adc	r12, r4
    13ba:	d5 1c       	adc	r13, r5
    13bc:	a2 1a       	sub	r10, r18
    13be:	b3 0a       	sbc	r11, r19
    13c0:	c4 0a       	sbc	r12, r20
    13c2:	d5 0a       	sbc	r13, r21
    13c4:	c6 01       	movw	r24, r12
    13c6:	b5 01       	movw	r22, r10
    13c8:	a4 01       	movw	r20, r8
    13ca:	93 01       	movw	r18, r6
    13cc:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    13d0:	7b 01       	movw	r14, r22
    13d2:	8c 01       	movw	r16, r24
    13d4:	c6 01       	movw	r24, r12
    13d6:	b5 01       	movw	r22, r10
    13d8:	a4 01       	movw	r20, r8
    13da:	93 01       	movw	r18, r6
    13dc:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    13e0:	ca 01       	movw	r24, r20
    13e2:	b9 01       	movw	r22, r18
    13e4:	25 96       	adiw	r28, 0x05	; 5
    13e6:	2c ad       	ldd	r18, Y+60	; 0x3c
    13e8:	3d ad       	ldd	r19, Y+61	; 0x3d
    13ea:	4e ad       	ldd	r20, Y+62	; 0x3e
    13ec:	5f ad       	ldd	r21, Y+63	; 0x3f
    13ee:	25 97       	sbiw	r28, 0x05	; 5
    13f0:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    13f4:	9b 01       	movw	r18, r22
    13f6:	ac 01       	movw	r20, r24
    13f8:	87 01       	movw	r16, r14
    13fa:	ff 24       	eor	r15, r15
    13fc:	ee 24       	eor	r14, r14
    13fe:	8d a5       	ldd	r24, Y+45	; 0x2d
    1400:	9e a5       	ldd	r25, Y+46	; 0x2e
    1402:	af a5       	ldd	r26, Y+47	; 0x2f
    1404:	b8 a9       	ldd	r27, Y+48	; 0x30
    1406:	a0 70       	andi	r26, 0x00	; 0
    1408:	b0 70       	andi	r27, 0x00	; 0
    140a:	57 01       	movw	r10, r14
    140c:	68 01       	movw	r12, r16
    140e:	a8 2a       	or	r10, r24
    1410:	b9 2a       	or	r11, r25
    1412:	ca 2a       	or	r12, r26
    1414:	db 2a       	or	r13, r27
    1416:	a2 16       	cp	r10, r18
    1418:	b3 06       	cpc	r11, r19
    141a:	c4 06       	cpc	r12, r20
    141c:	d5 06       	cpc	r13, r21
    141e:	90 f4       	brcc	.+36     	; 0x1444 <__umoddi3+0x530>
    1420:	a2 0c       	add	r10, r2
    1422:	b3 1c       	adc	r11, r3
    1424:	c4 1c       	adc	r12, r4
    1426:	d5 1c       	adc	r13, r5
    1428:	a2 14       	cp	r10, r2
    142a:	b3 04       	cpc	r11, r3
    142c:	c4 04       	cpc	r12, r4
    142e:	d5 04       	cpc	r13, r5
    1430:	48 f0       	brcs	.+18     	; 0x1444 <__umoddi3+0x530>
    1432:	a2 16       	cp	r10, r18
    1434:	b3 06       	cpc	r11, r19
    1436:	c4 06       	cpc	r12, r20
    1438:	d5 06       	cpc	r13, r21
    143a:	20 f4       	brcc	.+8      	; 0x1444 <__umoddi3+0x530>
    143c:	a2 0c       	add	r10, r2
    143e:	b3 1c       	adc	r11, r3
    1440:	c4 1c       	adc	r12, r4
    1442:	d5 1c       	adc	r13, r5
    1444:	6c 96       	adiw	r28, 0x1c	; 28
    1446:	ec ac       	ldd	r14, Y+60	; 0x3c
    1448:	fd ac       	ldd	r15, Y+61	; 0x3d
    144a:	0e ad       	ldd	r16, Y+62	; 0x3e
    144c:	1f ad       	ldd	r17, Y+63	; 0x3f
    144e:	6c 97       	sbiw	r28, 0x1c	; 28
    1450:	68 96       	adiw	r28, 0x18	; 24
    1452:	0f ac       	ldd	r0, Y+63	; 0x3f
    1454:	68 97       	sbiw	r28, 0x18	; 24
    1456:	04 c0       	rjmp	.+8      	; 0x1460 <__umoddi3+0x54c>
    1458:	ee 0c       	add	r14, r14
    145a:	ff 1c       	adc	r15, r15
    145c:	00 1f       	adc	r16, r16
    145e:	11 1f       	adc	r17, r17
    1460:	0a 94       	dec	r0
    1462:	d2 f7       	brpl	.-12     	; 0x1458 <__umoddi3+0x544>
    1464:	e9 aa       	std	Y+49, r14	; 0x31
    1466:	fa aa       	std	Y+50, r15	; 0x32
    1468:	0b ab       	std	Y+51, r16	; 0x33
    146a:	1c ab       	std	Y+52, r17	; 0x34
    146c:	a2 1a       	sub	r10, r18
    146e:	b3 0a       	sbc	r11, r19
    1470:	c4 0a       	sbc	r12, r20
    1472:	d5 0a       	sbc	r13, r21
    1474:	32 01       	movw	r6, r4
    1476:	88 24       	eor	r8, r8
    1478:	99 24       	eor	r9, r9
    147a:	b2 01       	movw	r22, r4
    147c:	a1 01       	movw	r20, r2
    147e:	60 70       	andi	r22, 0x00	; 0
    1480:	70 70       	andi	r23, 0x00	; 0
    1482:	29 96       	adiw	r28, 0x09	; 9
    1484:	4c af       	std	Y+60, r20	; 0x3c
    1486:	5d af       	std	Y+61, r21	; 0x3d
    1488:	6e af       	std	Y+62, r22	; 0x3e
    148a:	7f af       	std	Y+63, r23	; 0x3f
    148c:	29 97       	sbiw	r28, 0x09	; 9
    148e:	c6 01       	movw	r24, r12
    1490:	b5 01       	movw	r22, r10
    1492:	a4 01       	movw	r20, r8
    1494:	93 01       	movw	r18, r6
    1496:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    149a:	7b 01       	movw	r14, r22
    149c:	8c 01       	movw	r16, r24
    149e:	c6 01       	movw	r24, r12
    14a0:	b5 01       	movw	r22, r10
    14a2:	a4 01       	movw	r20, r8
    14a4:	93 01       	movw	r18, r6
    14a6:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    14aa:	ca 01       	movw	r24, r20
    14ac:	b9 01       	movw	r22, r18
    14ae:	29 96       	adiw	r28, 0x09	; 9
    14b0:	2c ad       	ldd	r18, Y+60	; 0x3c
    14b2:	3d ad       	ldd	r19, Y+61	; 0x3d
    14b4:	4e ad       	ldd	r20, Y+62	; 0x3e
    14b6:	5f ad       	ldd	r21, Y+63	; 0x3f
    14b8:	29 97       	sbiw	r28, 0x09	; 9
    14ba:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    14be:	9b 01       	movw	r18, r22
    14c0:	ac 01       	movw	r20, r24
    14c2:	87 01       	movw	r16, r14
    14c4:	ff 24       	eor	r15, r15
    14c6:	ee 24       	eor	r14, r14
    14c8:	a9 a8       	ldd	r10, Y+49	; 0x31
    14ca:	ba a8       	ldd	r11, Y+50	; 0x32
    14cc:	cb a8       	ldd	r12, Y+51	; 0x33
    14ce:	dc a8       	ldd	r13, Y+52	; 0x34
    14d0:	c6 01       	movw	r24, r12
    14d2:	aa 27       	eor	r26, r26
    14d4:	bb 27       	eor	r27, r27
    14d6:	57 01       	movw	r10, r14
    14d8:	68 01       	movw	r12, r16
    14da:	a8 2a       	or	r10, r24
    14dc:	b9 2a       	or	r11, r25
    14de:	ca 2a       	or	r12, r26
    14e0:	db 2a       	or	r13, r27
    14e2:	a2 16       	cp	r10, r18
    14e4:	b3 06       	cpc	r11, r19
    14e6:	c4 06       	cpc	r12, r20
    14e8:	d5 06       	cpc	r13, r21
    14ea:	90 f4       	brcc	.+36     	; 0x1510 <__umoddi3+0x5fc>
    14ec:	a2 0c       	add	r10, r2
    14ee:	b3 1c       	adc	r11, r3
    14f0:	c4 1c       	adc	r12, r4
    14f2:	d5 1c       	adc	r13, r5
    14f4:	a2 14       	cp	r10, r2
    14f6:	b3 04       	cpc	r11, r3
    14f8:	c4 04       	cpc	r12, r4
    14fa:	d5 04       	cpc	r13, r5
    14fc:	48 f0       	brcs	.+18     	; 0x1510 <__umoddi3+0x5fc>
    14fe:	a2 16       	cp	r10, r18
    1500:	b3 06       	cpc	r11, r19
    1502:	c4 06       	cpc	r12, r20
    1504:	d5 06       	cpc	r13, r21
    1506:	20 f4       	brcc	.+8      	; 0x1510 <__umoddi3+0x5fc>
    1508:	a2 0c       	add	r10, r2
    150a:	b3 1c       	adc	r11, r3
    150c:	c4 1c       	adc	r12, r4
    150e:	d5 1c       	adc	r13, r5
    1510:	a2 1a       	sub	r10, r18
    1512:	b3 0a       	sbc	r11, r19
    1514:	c4 0a       	sbc	r12, r20
    1516:	d5 0a       	sbc	r13, r21
    1518:	c6 01       	movw	r24, r12
    151a:	b5 01       	movw	r22, r10
    151c:	a4 01       	movw	r20, r8
    151e:	93 01       	movw	r18, r6
    1520:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1524:	7b 01       	movw	r14, r22
    1526:	8c 01       	movw	r16, r24
    1528:	c6 01       	movw	r24, r12
    152a:	b5 01       	movw	r22, r10
    152c:	a4 01       	movw	r20, r8
    152e:	93 01       	movw	r18, r6
    1530:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1534:	ca 01       	movw	r24, r20
    1536:	b9 01       	movw	r22, r18
    1538:	29 96       	adiw	r28, 0x09	; 9
    153a:	2c ad       	ldd	r18, Y+60	; 0x3c
    153c:	3d ad       	ldd	r19, Y+61	; 0x3d
    153e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1540:	5f ad       	ldd	r21, Y+63	; 0x3f
    1542:	29 97       	sbiw	r28, 0x09	; 9
    1544:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    1548:	9b 01       	movw	r18, r22
    154a:	ac 01       	movw	r20, r24
    154c:	87 01       	movw	r16, r14
    154e:	ff 24       	eor	r15, r15
    1550:	ee 24       	eor	r14, r14
    1552:	89 a9       	ldd	r24, Y+49	; 0x31
    1554:	9a a9       	ldd	r25, Y+50	; 0x32
    1556:	ab a9       	ldd	r26, Y+51	; 0x33
    1558:	bc a9       	ldd	r27, Y+52	; 0x34
    155a:	a0 70       	andi	r26, 0x00	; 0
    155c:	b0 70       	andi	r27, 0x00	; 0
    155e:	e8 2a       	or	r14, r24
    1560:	f9 2a       	or	r15, r25
    1562:	0a 2b       	or	r16, r26
    1564:	1b 2b       	or	r17, r27
    1566:	e2 16       	cp	r14, r18
    1568:	f3 06       	cpc	r15, r19
    156a:	04 07       	cpc	r16, r20
    156c:	15 07       	cpc	r17, r21
    156e:	90 f4       	brcc	.+36     	; 0x1594 <__umoddi3+0x680>
    1570:	e2 0c       	add	r14, r2
    1572:	f3 1c       	adc	r15, r3
    1574:	04 1d       	adc	r16, r4
    1576:	15 1d       	adc	r17, r5
    1578:	e2 14       	cp	r14, r2
    157a:	f3 04       	cpc	r15, r3
    157c:	04 05       	cpc	r16, r4
    157e:	15 05       	cpc	r17, r5
    1580:	48 f0       	brcs	.+18     	; 0x1594 <__umoddi3+0x680>
    1582:	e2 16       	cp	r14, r18
    1584:	f3 06       	cpc	r15, r19
    1586:	04 07       	cpc	r16, r20
    1588:	15 07       	cpc	r17, r21
    158a:	20 f4       	brcc	.+8      	; 0x1594 <__umoddi3+0x680>
    158c:	e2 0c       	add	r14, r2
    158e:	f3 1c       	adc	r15, r3
    1590:	04 1d       	adc	r16, r4
    1592:	15 1d       	adc	r17, r5
    1594:	e2 1a       	sub	r14, r18
    1596:	f3 0a       	sbc	r15, r19
    1598:	04 0b       	sbc	r16, r20
    159a:	15 0b       	sbc	r17, r21
    159c:	d8 01       	movw	r26, r16
    159e:	c7 01       	movw	r24, r14
    15a0:	09 ac       	ldd	r0, Y+57	; 0x39
    15a2:	04 c0       	rjmp	.+8      	; 0x15ac <__umoddi3+0x698>
    15a4:	b6 95       	lsr	r27
    15a6:	a7 95       	ror	r26
    15a8:	97 95       	ror	r25
    15aa:	87 95       	ror	r24
    15ac:	0a 94       	dec	r0
    15ae:	d2 f7       	brpl	.-12     	; 0x15a4 <__umoddi3+0x690>
    15b0:	89 8b       	std	Y+17, r24	; 0x11
    15b2:	9a 8b       	std	Y+18, r25	; 0x12
    15b4:	ab 8b       	std	Y+19, r26	; 0x13
    15b6:	bc 8b       	std	Y+20, r27	; 0x14
    15b8:	1d 8a       	std	Y+21, r1	; 0x15
    15ba:	1e 8a       	std	Y+22, r1	; 0x16
    15bc:	1f 8a       	std	Y+23, r1	; 0x17
    15be:	18 8e       	std	Y+24, r1	; 0x18
    15c0:	28 2f       	mov	r18, r24
    15c2:	3a 89       	ldd	r19, Y+18	; 0x12
    15c4:	4b 89       	ldd	r20, Y+19	; 0x13
    15c6:	5c 89       	ldd	r21, Y+20	; 0x14
    15c8:	6d 89       	ldd	r22, Y+21	; 0x15
    15ca:	0c c3       	rjmp	.+1560   	; 0x1be4 <__umoddi3+0xcd0>
    15cc:	6a 14       	cp	r6, r10
    15ce:	7b 04       	cpc	r7, r11
    15d0:	8c 04       	cpc	r8, r12
    15d2:	9d 04       	cpc	r9, r13
    15d4:	08 f4       	brcc	.+2      	; 0x15d8 <__umoddi3+0x6c4>
    15d6:	09 c3       	rjmp	.+1554   	; 0x1bea <__umoddi3+0xcd6>
    15d8:	00 e0       	ldi	r16, 0x00	; 0
    15da:	a0 16       	cp	r10, r16
    15dc:	00 e0       	ldi	r16, 0x00	; 0
    15de:	b0 06       	cpc	r11, r16
    15e0:	01 e0       	ldi	r16, 0x01	; 1
    15e2:	c0 06       	cpc	r12, r16
    15e4:	00 e0       	ldi	r16, 0x00	; 0
    15e6:	d0 06       	cpc	r13, r16
    15e8:	88 f4       	brcc	.+34     	; 0x160c <__umoddi3+0x6f8>
    15ea:	1f ef       	ldi	r17, 0xFF	; 255
    15ec:	a1 16       	cp	r10, r17
    15ee:	b1 04       	cpc	r11, r1
    15f0:	c1 04       	cpc	r12, r1
    15f2:	d1 04       	cpc	r13, r1
    15f4:	39 f0       	breq	.+14     	; 0x1604 <__umoddi3+0x6f0>
    15f6:	30 f0       	brcs	.+12     	; 0x1604 <__umoddi3+0x6f0>
    15f8:	28 e0       	ldi	r18, 0x08	; 8
    15fa:	e2 2e       	mov	r14, r18
    15fc:	f1 2c       	mov	r15, r1
    15fe:	01 2d       	mov	r16, r1
    1600:	11 2d       	mov	r17, r1
    1602:	18 c0       	rjmp	.+48     	; 0x1634 <__umoddi3+0x720>
    1604:	ee 24       	eor	r14, r14
    1606:	ff 24       	eor	r15, r15
    1608:	87 01       	movw	r16, r14
    160a:	14 c0       	rjmp	.+40     	; 0x1634 <__umoddi3+0x720>
    160c:	40 e0       	ldi	r20, 0x00	; 0
    160e:	a4 16       	cp	r10, r20
    1610:	40 e0       	ldi	r20, 0x00	; 0
    1612:	b4 06       	cpc	r11, r20
    1614:	40 e0       	ldi	r20, 0x00	; 0
    1616:	c4 06       	cpc	r12, r20
    1618:	41 e0       	ldi	r20, 0x01	; 1
    161a:	d4 06       	cpc	r13, r20
    161c:	30 f0       	brcs	.+12     	; 0x162a <__umoddi3+0x716>
    161e:	98 e1       	ldi	r25, 0x18	; 24
    1620:	e9 2e       	mov	r14, r25
    1622:	f1 2c       	mov	r15, r1
    1624:	01 2d       	mov	r16, r1
    1626:	11 2d       	mov	r17, r1
    1628:	05 c0       	rjmp	.+10     	; 0x1634 <__umoddi3+0x720>
    162a:	80 e1       	ldi	r24, 0x10	; 16
    162c:	e8 2e       	mov	r14, r24
    162e:	f1 2c       	mov	r15, r1
    1630:	01 2d       	mov	r16, r1
    1632:	11 2d       	mov	r17, r1
    1634:	d6 01       	movw	r26, r12
    1636:	c5 01       	movw	r24, r10
    1638:	0e 2c       	mov	r0, r14
    163a:	04 c0       	rjmp	.+8      	; 0x1644 <__umoddi3+0x730>
    163c:	b6 95       	lsr	r27
    163e:	a7 95       	ror	r26
    1640:	97 95       	ror	r25
    1642:	87 95       	ror	r24
    1644:	0a 94       	dec	r0
    1646:	d2 f7       	brpl	.-12     	; 0x163c <__umoddi3+0x728>
    1648:	8d 58       	subi	r24, 0x8D	; 141
    164a:	9f 4f       	sbci	r25, 0xFF	; 255
    164c:	dc 01       	movw	r26, r24
    164e:	2c 91       	ld	r18, X
    1650:	80 e2       	ldi	r24, 0x20	; 32
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	a0 e0       	ldi	r26, 0x00	; 0
    1656:	b0 e0       	ldi	r27, 0x00	; 0
    1658:	8e 19       	sub	r24, r14
    165a:	9f 09       	sbc	r25, r15
    165c:	a0 0b       	sbc	r26, r16
    165e:	b1 0b       	sbc	r27, r17
    1660:	82 1b       	sub	r24, r18
    1662:	91 09       	sbc	r25, r1
    1664:	a1 09       	sbc	r26, r1
    1666:	b1 09       	sbc	r27, r1
    1668:	00 97       	sbiw	r24, 0x00	; 0
    166a:	a1 05       	cpc	r26, r1
    166c:	b1 05       	cpc	r27, r1
    166e:	09 f0       	breq	.+2      	; 0x1672 <__umoddi3+0x75e>
    1670:	4f c0       	rjmp	.+158    	; 0x1710 <__umoddi3+0x7fc>
    1672:	a6 14       	cp	r10, r6
    1674:	b7 04       	cpc	r11, r7
    1676:	c8 04       	cpc	r12, r8
    1678:	d9 04       	cpc	r13, r9
    167a:	58 f0       	brcs	.+22     	; 0x1692 <__umoddi3+0x77e>
    167c:	6c 96       	adiw	r28, 0x1c	; 28
    167e:	ec ac       	ldd	r14, Y+60	; 0x3c
    1680:	fd ac       	ldd	r15, Y+61	; 0x3d
    1682:	0e ad       	ldd	r16, Y+62	; 0x3e
    1684:	1f ad       	ldd	r17, Y+63	; 0x3f
    1686:	6c 97       	sbiw	r28, 0x1c	; 28
    1688:	e2 14       	cp	r14, r2
    168a:	f3 04       	cpc	r15, r3
    168c:	04 05       	cpc	r16, r4
    168e:	15 05       	cpc	r17, r5
    1690:	68 f1       	brcs	.+90     	; 0x16ec <__umoddi3+0x7d8>
    1692:	6c 96       	adiw	r28, 0x1c	; 28
    1694:	ec ac       	ldd	r14, Y+60	; 0x3c
    1696:	fd ac       	ldd	r15, Y+61	; 0x3d
    1698:	0e ad       	ldd	r16, Y+62	; 0x3e
    169a:	1f ad       	ldd	r17, Y+63	; 0x3f
    169c:	6c 97       	sbiw	r28, 0x1c	; 28
    169e:	e2 18       	sub	r14, r2
    16a0:	f3 08       	sbc	r15, r3
    16a2:	04 09       	sbc	r16, r4
    16a4:	15 09       	sbc	r17, r5
    16a6:	a4 01       	movw	r20, r8
    16a8:	93 01       	movw	r18, r6
    16aa:	2a 19       	sub	r18, r10
    16ac:	3b 09       	sbc	r19, r11
    16ae:	4c 09       	sbc	r20, r12
    16b0:	5d 09       	sbc	r21, r13
    16b2:	aa 24       	eor	r10, r10
    16b4:	bb 24       	eor	r11, r11
    16b6:	65 01       	movw	r12, r10
    16b8:	6c 96       	adiw	r28, 0x1c	; 28
    16ba:	6c ad       	ldd	r22, Y+60	; 0x3c
    16bc:	7d ad       	ldd	r23, Y+61	; 0x3d
    16be:	8e ad       	ldd	r24, Y+62	; 0x3e
    16c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    16c2:	6c 97       	sbiw	r28, 0x1c	; 28
    16c4:	6e 15       	cp	r22, r14
    16c6:	7f 05       	cpc	r23, r15
    16c8:	80 07       	cpc	r24, r16
    16ca:	91 07       	cpc	r25, r17
    16cc:	28 f4       	brcc	.+10     	; 0x16d8 <__umoddi3+0x7c4>
    16ce:	b1 e0       	ldi	r27, 0x01	; 1
    16d0:	ab 2e       	mov	r10, r27
    16d2:	b1 2c       	mov	r11, r1
    16d4:	c1 2c       	mov	r12, r1
    16d6:	d1 2c       	mov	r13, r1
    16d8:	da 01       	movw	r26, r20
    16da:	c9 01       	movw	r24, r18
    16dc:	8a 19       	sub	r24, r10
    16de:	9b 09       	sbc	r25, r11
    16e0:	ac 09       	sbc	r26, r12
    16e2:	bd 09       	sbc	r27, r13
    16e4:	8d ab       	std	Y+53, r24	; 0x35
    16e6:	9e ab       	std	Y+54, r25	; 0x36
    16e8:	af ab       	std	Y+55, r26	; 0x37
    16ea:	b8 af       	std	Y+56, r27	; 0x38
    16ec:	e9 8a       	std	Y+17, r14	; 0x11
    16ee:	fa 8a       	std	Y+18, r15	; 0x12
    16f0:	0b 8b       	std	Y+19, r16	; 0x13
    16f2:	1c 8b       	std	Y+20, r17	; 0x14
    16f4:	6d a8       	ldd	r6, Y+53	; 0x35
    16f6:	7e a8       	ldd	r7, Y+54	; 0x36
    16f8:	8f a8       	ldd	r8, Y+55	; 0x37
    16fa:	98 ac       	ldd	r9, Y+56	; 0x38
    16fc:	6d 8a       	std	Y+21, r6	; 0x15
    16fe:	7e 8a       	std	Y+22, r7	; 0x16
    1700:	8f 8a       	std	Y+23, r8	; 0x17
    1702:	98 8e       	std	Y+24, r9	; 0x18
    1704:	2e 2d       	mov	r18, r14
    1706:	3a 89       	ldd	r19, Y+18	; 0x12
    1708:	4b 89       	ldd	r20, Y+19	; 0x13
    170a:	5c 89       	ldd	r21, Y+20	; 0x14
    170c:	6d a9       	ldd	r22, Y+53	; 0x35
    170e:	6a c2       	rjmp	.+1236   	; 0x1be4 <__umoddi3+0xcd0>
    1710:	67 96       	adiw	r28, 0x17	; 23
    1712:	8f af       	std	Y+63, r24	; 0x3f
    1714:	67 97       	sbiw	r28, 0x17	; 23
    1716:	a6 01       	movw	r20, r12
    1718:	95 01       	movw	r18, r10
    171a:	08 2e       	mov	r0, r24
    171c:	04 c0       	rjmp	.+8      	; 0x1726 <__umoddi3+0x812>
    171e:	22 0f       	add	r18, r18
    1720:	33 1f       	adc	r19, r19
    1722:	44 1f       	adc	r20, r20
    1724:	55 1f       	adc	r21, r21
    1726:	0a 94       	dec	r0
    1728:	d2 f7       	brpl	.-12     	; 0x171e <__umoddi3+0x80a>
    172a:	a0 e2       	ldi	r26, 0x20	; 32
    172c:	aa 2e       	mov	r10, r26
    172e:	a8 1a       	sub	r10, r24
    1730:	66 96       	adiw	r28, 0x16	; 22
    1732:	af ae       	std	Y+63, r10	; 0x3f
    1734:	66 97       	sbiw	r28, 0x16	; 22
    1736:	d2 01       	movw	r26, r4
    1738:	c1 01       	movw	r24, r2
    173a:	04 c0       	rjmp	.+8      	; 0x1744 <__umoddi3+0x830>
    173c:	b6 95       	lsr	r27
    173e:	a7 95       	ror	r26
    1740:	97 95       	ror	r25
    1742:	87 95       	ror	r24
    1744:	aa 94       	dec	r10
    1746:	d2 f7       	brpl	.-12     	; 0x173c <__umoddi3+0x828>
    1748:	6c 01       	movw	r12, r24
    174a:	7d 01       	movw	r14, r26
    174c:	c2 2a       	or	r12, r18
    174e:	d3 2a       	or	r13, r19
    1750:	e4 2a       	or	r14, r20
    1752:	f5 2a       	or	r15, r21
    1754:	c9 a6       	std	Y+41, r12	; 0x29
    1756:	da a6       	std	Y+42, r13	; 0x2a
    1758:	eb a6       	std	Y+43, r14	; 0x2b
    175a:	fc a6       	std	Y+44, r15	; 0x2c
    175c:	82 01       	movw	r16, r4
    175e:	71 01       	movw	r14, r2
    1760:	67 96       	adiw	r28, 0x17	; 23
    1762:	0f ac       	ldd	r0, Y+63	; 0x3f
    1764:	67 97       	sbiw	r28, 0x17	; 23
    1766:	04 c0       	rjmp	.+8      	; 0x1770 <__umoddi3+0x85c>
    1768:	ee 0c       	add	r14, r14
    176a:	ff 1c       	adc	r15, r15
    176c:	00 1f       	adc	r16, r16
    176e:	11 1f       	adc	r17, r17
    1770:	0a 94       	dec	r0
    1772:	d2 f7       	brpl	.-12     	; 0x1768 <__umoddi3+0x854>
    1774:	ed a2       	std	Y+37, r14	; 0x25
    1776:	fe a2       	std	Y+38, r15	; 0x26
    1778:	0f a3       	std	Y+39, r16	; 0x27
    177a:	18 a7       	std	Y+40, r17	; 0x28
    177c:	64 01       	movw	r12, r8
    177e:	53 01       	movw	r10, r6
    1780:	66 96       	adiw	r28, 0x16	; 22
    1782:	0f ac       	ldd	r0, Y+63	; 0x3f
    1784:	66 97       	sbiw	r28, 0x16	; 22
    1786:	04 c0       	rjmp	.+8      	; 0x1790 <__umoddi3+0x87c>
    1788:	d6 94       	lsr	r13
    178a:	c7 94       	ror	r12
    178c:	b7 94       	ror	r11
    178e:	a7 94       	ror	r10
    1790:	0a 94       	dec	r0
    1792:	d2 f7       	brpl	.-12     	; 0x1788 <__umoddi3+0x874>
    1794:	a4 01       	movw	r20, r8
    1796:	93 01       	movw	r18, r6
    1798:	67 96       	adiw	r28, 0x17	; 23
    179a:	0f ac       	ldd	r0, Y+63	; 0x3f
    179c:	67 97       	sbiw	r28, 0x17	; 23
    179e:	04 c0       	rjmp	.+8      	; 0x17a8 <__umoddi3+0x894>
    17a0:	22 0f       	add	r18, r18
    17a2:	33 1f       	adc	r19, r19
    17a4:	44 1f       	adc	r20, r20
    17a6:	55 1f       	adc	r21, r21
    17a8:	0a 94       	dec	r0
    17aa:	d2 f7       	brpl	.-12     	; 0x17a0 <__umoddi3+0x88c>
    17ac:	6c 96       	adiw	r28, 0x1c	; 28
    17ae:	8c ad       	ldd	r24, Y+60	; 0x3c
    17b0:	9d ad       	ldd	r25, Y+61	; 0x3d
    17b2:	ae ad       	ldd	r26, Y+62	; 0x3e
    17b4:	bf ad       	ldd	r27, Y+63	; 0x3f
    17b6:	6c 97       	sbiw	r28, 0x1c	; 28
    17b8:	66 96       	adiw	r28, 0x16	; 22
    17ba:	0f ac       	ldd	r0, Y+63	; 0x3f
    17bc:	66 97       	sbiw	r28, 0x16	; 22
    17be:	04 c0       	rjmp	.+8      	; 0x17c8 <__umoddi3+0x8b4>
    17c0:	b6 95       	lsr	r27
    17c2:	a7 95       	ror	r26
    17c4:	97 95       	ror	r25
    17c6:	87 95       	ror	r24
    17c8:	0a 94       	dec	r0
    17ca:	d2 f7       	brpl	.-12     	; 0x17c0 <__umoddi3+0x8ac>
    17cc:	3c 01       	movw	r6, r24
    17ce:	4d 01       	movw	r8, r26
    17d0:	62 2a       	or	r6, r18
    17d2:	73 2a       	or	r7, r19
    17d4:	84 2a       	or	r8, r20
    17d6:	95 2a       	or	r9, r21
    17d8:	69 a2       	std	Y+33, r6	; 0x21
    17da:	7a a2       	std	Y+34, r7	; 0x22
    17dc:	8b a2       	std	Y+35, r8	; 0x23
    17de:	9c a2       	std	Y+36, r9	; 0x24
    17e0:	6c 96       	adiw	r28, 0x1c	; 28
    17e2:	ec ac       	ldd	r14, Y+60	; 0x3c
    17e4:	fd ac       	ldd	r15, Y+61	; 0x3d
    17e6:	0e ad       	ldd	r16, Y+62	; 0x3e
    17e8:	1f ad       	ldd	r17, Y+63	; 0x3f
    17ea:	6c 97       	sbiw	r28, 0x1c	; 28
    17ec:	67 96       	adiw	r28, 0x17	; 23
    17ee:	0f ac       	ldd	r0, Y+63	; 0x3f
    17f0:	67 97       	sbiw	r28, 0x17	; 23
    17f2:	04 c0       	rjmp	.+8      	; 0x17fc <__umoddi3+0x8e8>
    17f4:	ee 0c       	add	r14, r14
    17f6:	ff 1c       	adc	r15, r15
    17f8:	00 1f       	adc	r16, r16
    17fa:	11 1f       	adc	r17, r17
    17fc:	0a 94       	dec	r0
    17fe:	d2 f7       	brpl	.-12     	; 0x17f4 <__umoddi3+0x8e0>
    1800:	ed 8e       	std	Y+29, r14	; 0x1d
    1802:	fe 8e       	std	Y+30, r15	; 0x1e
    1804:	0f 8f       	std	Y+31, r16	; 0x1f
    1806:	18 a3       	std	Y+32, r17	; 0x20
    1808:	49 a5       	ldd	r20, Y+41	; 0x29
    180a:	5a a5       	ldd	r21, Y+42	; 0x2a
    180c:	6b a5       	ldd	r22, Y+43	; 0x2b
    180e:	7c a5       	ldd	r23, Y+44	; 0x2c
    1810:	3b 01       	movw	r6, r22
    1812:	88 24       	eor	r8, r8
    1814:	99 24       	eor	r9, r9
    1816:	60 70       	andi	r22, 0x00	; 0
    1818:	70 70       	andi	r23, 0x00	; 0
    181a:	2d 96       	adiw	r28, 0x0d	; 13
    181c:	4c af       	std	Y+60, r20	; 0x3c
    181e:	5d af       	std	Y+61, r21	; 0x3d
    1820:	6e af       	std	Y+62, r22	; 0x3e
    1822:	7f af       	std	Y+63, r23	; 0x3f
    1824:	2d 97       	sbiw	r28, 0x0d	; 13
    1826:	c6 01       	movw	r24, r12
    1828:	b5 01       	movw	r22, r10
    182a:	a4 01       	movw	r20, r8
    182c:	93 01       	movw	r18, r6
    182e:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1832:	7b 01       	movw	r14, r22
    1834:	8c 01       	movw	r16, r24
    1836:	c6 01       	movw	r24, r12
    1838:	b5 01       	movw	r22, r10
    183a:	a4 01       	movw	r20, r8
    183c:	93 01       	movw	r18, r6
    183e:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    1842:	c9 01       	movw	r24, r18
    1844:	da 01       	movw	r26, r20
    1846:	1c 01       	movw	r2, r24
    1848:	2d 01       	movw	r4, r26
    184a:	c2 01       	movw	r24, r4
    184c:	b1 01       	movw	r22, r2
    184e:	2d 96       	adiw	r28, 0x0d	; 13
    1850:	2c ad       	ldd	r18, Y+60	; 0x3c
    1852:	3d ad       	ldd	r19, Y+61	; 0x3d
    1854:	4e ad       	ldd	r20, Y+62	; 0x3e
    1856:	5f ad       	ldd	r21, Y+63	; 0x3f
    1858:	2d 97       	sbiw	r28, 0x0d	; 13
    185a:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    185e:	9b 01       	movw	r18, r22
    1860:	ac 01       	movw	r20, r24
    1862:	87 01       	movw	r16, r14
    1864:	ff 24       	eor	r15, r15
    1866:	ee 24       	eor	r14, r14
    1868:	a9 a0       	ldd	r10, Y+33	; 0x21
    186a:	ba a0       	ldd	r11, Y+34	; 0x22
    186c:	cb a0       	ldd	r12, Y+35	; 0x23
    186e:	dc a0       	ldd	r13, Y+36	; 0x24
    1870:	c6 01       	movw	r24, r12
    1872:	aa 27       	eor	r26, r26
    1874:	bb 27       	eor	r27, r27
    1876:	57 01       	movw	r10, r14
    1878:	68 01       	movw	r12, r16
    187a:	a8 2a       	or	r10, r24
    187c:	b9 2a       	or	r11, r25
    187e:	ca 2a       	or	r12, r26
    1880:	db 2a       	or	r13, r27
    1882:	a2 16       	cp	r10, r18
    1884:	b3 06       	cpc	r11, r19
    1886:	c4 06       	cpc	r12, r20
    1888:	d5 06       	cpc	r13, r21
    188a:	00 f5       	brcc	.+64     	; 0x18cc <__umoddi3+0x9b8>
    188c:	08 94       	sec
    188e:	21 08       	sbc	r2, r1
    1890:	31 08       	sbc	r3, r1
    1892:	41 08       	sbc	r4, r1
    1894:	51 08       	sbc	r5, r1
    1896:	e9 a4       	ldd	r14, Y+41	; 0x29
    1898:	fa a4       	ldd	r15, Y+42	; 0x2a
    189a:	0b a5       	ldd	r16, Y+43	; 0x2b
    189c:	1c a5       	ldd	r17, Y+44	; 0x2c
    189e:	ae 0c       	add	r10, r14
    18a0:	bf 1c       	adc	r11, r15
    18a2:	c0 1e       	adc	r12, r16
    18a4:	d1 1e       	adc	r13, r17
    18a6:	ae 14       	cp	r10, r14
    18a8:	bf 04       	cpc	r11, r15
    18aa:	c0 06       	cpc	r12, r16
    18ac:	d1 06       	cpc	r13, r17
    18ae:	70 f0       	brcs	.+28     	; 0x18cc <__umoddi3+0x9b8>
    18b0:	a2 16       	cp	r10, r18
    18b2:	b3 06       	cpc	r11, r19
    18b4:	c4 06       	cpc	r12, r20
    18b6:	d5 06       	cpc	r13, r21
    18b8:	48 f4       	brcc	.+18     	; 0x18cc <__umoddi3+0x9b8>
    18ba:	08 94       	sec
    18bc:	21 08       	sbc	r2, r1
    18be:	31 08       	sbc	r3, r1
    18c0:	41 08       	sbc	r4, r1
    18c2:	51 08       	sbc	r5, r1
    18c4:	ae 0c       	add	r10, r14
    18c6:	bf 1c       	adc	r11, r15
    18c8:	c0 1e       	adc	r12, r16
    18ca:	d1 1e       	adc	r13, r17
    18cc:	a2 1a       	sub	r10, r18
    18ce:	b3 0a       	sbc	r11, r19
    18d0:	c4 0a       	sbc	r12, r20
    18d2:	d5 0a       	sbc	r13, r21
    18d4:	c6 01       	movw	r24, r12
    18d6:	b5 01       	movw	r22, r10
    18d8:	a4 01       	movw	r20, r8
    18da:	93 01       	movw	r18, r6
    18dc:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    18e0:	7b 01       	movw	r14, r22
    18e2:	8c 01       	movw	r16, r24
    18e4:	c6 01       	movw	r24, r12
    18e6:	b5 01       	movw	r22, r10
    18e8:	a4 01       	movw	r20, r8
    18ea:	93 01       	movw	r18, r6
    18ec:	0e 94 9a 28 	call	0x5134	; 0x5134 <__udivmodsi4>
    18f0:	c9 01       	movw	r24, r18
    18f2:	da 01       	movw	r26, r20
    18f4:	3c 01       	movw	r6, r24
    18f6:	4d 01       	movw	r8, r26
    18f8:	c4 01       	movw	r24, r8
    18fa:	b3 01       	movw	r22, r6
    18fc:	2d 96       	adiw	r28, 0x0d	; 13
    18fe:	2c ad       	ldd	r18, Y+60	; 0x3c
    1900:	3d ad       	ldd	r19, Y+61	; 0x3d
    1902:	4e ad       	ldd	r20, Y+62	; 0x3e
    1904:	5f ad       	ldd	r21, Y+63	; 0x3f
    1906:	2d 97       	sbiw	r28, 0x0d	; 13
    1908:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    190c:	9b 01       	movw	r18, r22
    190e:	ac 01       	movw	r20, r24
    1910:	87 01       	movw	r16, r14
    1912:	ff 24       	eor	r15, r15
    1914:	ee 24       	eor	r14, r14
    1916:	89 a1       	ldd	r24, Y+33	; 0x21
    1918:	9a a1       	ldd	r25, Y+34	; 0x22
    191a:	ab a1       	ldd	r26, Y+35	; 0x23
    191c:	bc a1       	ldd	r27, Y+36	; 0x24
    191e:	a0 70       	andi	r26, 0x00	; 0
    1920:	b0 70       	andi	r27, 0x00	; 0
    1922:	57 01       	movw	r10, r14
    1924:	68 01       	movw	r12, r16
    1926:	a8 2a       	or	r10, r24
    1928:	b9 2a       	or	r11, r25
    192a:	ca 2a       	or	r12, r26
    192c:	db 2a       	or	r13, r27
    192e:	a2 16       	cp	r10, r18
    1930:	b3 06       	cpc	r11, r19
    1932:	c4 06       	cpc	r12, r20
    1934:	d5 06       	cpc	r13, r21
    1936:	00 f5       	brcc	.+64     	; 0x1978 <__umoddi3+0xa64>
    1938:	08 94       	sec
    193a:	61 08       	sbc	r6, r1
    193c:	71 08       	sbc	r7, r1
    193e:	81 08       	sbc	r8, r1
    1940:	91 08       	sbc	r9, r1
    1942:	69 a5       	ldd	r22, Y+41	; 0x29
    1944:	7a a5       	ldd	r23, Y+42	; 0x2a
    1946:	8b a5       	ldd	r24, Y+43	; 0x2b
    1948:	9c a5       	ldd	r25, Y+44	; 0x2c
    194a:	a6 0e       	add	r10, r22
    194c:	b7 1e       	adc	r11, r23
    194e:	c8 1e       	adc	r12, r24
    1950:	d9 1e       	adc	r13, r25
    1952:	a6 16       	cp	r10, r22
    1954:	b7 06       	cpc	r11, r23
    1956:	c8 06       	cpc	r12, r24
    1958:	d9 06       	cpc	r13, r25
    195a:	70 f0       	brcs	.+28     	; 0x1978 <__umoddi3+0xa64>
    195c:	a2 16       	cp	r10, r18
    195e:	b3 06       	cpc	r11, r19
    1960:	c4 06       	cpc	r12, r20
    1962:	d5 06       	cpc	r13, r21
    1964:	48 f4       	brcc	.+18     	; 0x1978 <__umoddi3+0xa64>
    1966:	08 94       	sec
    1968:	61 08       	sbc	r6, r1
    196a:	71 08       	sbc	r7, r1
    196c:	81 08       	sbc	r8, r1
    196e:	91 08       	sbc	r9, r1
    1970:	a6 0e       	add	r10, r22
    1972:	b7 1e       	adc	r11, r23
    1974:	c8 1e       	adc	r12, r24
    1976:	d9 1e       	adc	r13, r25
    1978:	d6 01       	movw	r26, r12
    197a:	c5 01       	movw	r24, r10
    197c:	82 1b       	sub	r24, r18
    197e:	93 0b       	sbc	r25, r19
    1980:	a4 0b       	sbc	r26, r20
    1982:	b5 0b       	sbc	r27, r21
    1984:	89 8f       	std	Y+25, r24	; 0x19
    1986:	9a 8f       	std	Y+26, r25	; 0x1a
    1988:	ab 8f       	std	Y+27, r26	; 0x1b
    198a:	bc 8f       	std	Y+28, r27	; 0x1c
    198c:	d1 01       	movw	r26, r2
    198e:	99 27       	eor	r25, r25
    1990:	88 27       	eor	r24, r24
    1992:	84 01       	movw	r16, r8
    1994:	73 01       	movw	r14, r6
    1996:	e8 2a       	or	r14, r24
    1998:	f9 2a       	or	r15, r25
    199a:	0a 2b       	or	r16, r26
    199c:	1b 2b       	or	r17, r27
    199e:	4f ef       	ldi	r20, 0xFF	; 255
    19a0:	a4 2e       	mov	r10, r20
    19a2:	4f ef       	ldi	r20, 0xFF	; 255
    19a4:	b4 2e       	mov	r11, r20
    19a6:	c1 2c       	mov	r12, r1
    19a8:	d1 2c       	mov	r13, r1
    19aa:	ae 20       	and	r10, r14
    19ac:	bf 20       	and	r11, r15
    19ae:	c0 22       	and	r12, r16
    19b0:	d1 22       	and	r13, r17
    19b2:	78 01       	movw	r14, r16
    19b4:	00 27       	eor	r16, r16
    19b6:	11 27       	eor	r17, r17
    19b8:	6d a0       	ldd	r6, Y+37	; 0x25
    19ba:	7e a0       	ldd	r7, Y+38	; 0x26
    19bc:	8f a0       	ldd	r8, Y+39	; 0x27
    19be:	98 a4       	ldd	r9, Y+40	; 0x28
    19c0:	4f ef       	ldi	r20, 0xFF	; 255
    19c2:	5f ef       	ldi	r21, 0xFF	; 255
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	64 22       	and	r6, r20
    19ca:	75 22       	and	r7, r21
    19cc:	86 22       	and	r8, r22
    19ce:	97 22       	and	r9, r23
    19d0:	8d a1       	ldd	r24, Y+37	; 0x25
    19d2:	9e a1       	ldd	r25, Y+38	; 0x26
    19d4:	af a1       	ldd	r26, Y+39	; 0x27
    19d6:	b8 a5       	ldd	r27, Y+40	; 0x28
    19d8:	bd 01       	movw	r22, r26
    19da:	88 27       	eor	r24, r24
    19dc:	99 27       	eor	r25, r25
    19de:	65 96       	adiw	r28, 0x15	; 21
    19e0:	6c af       	std	Y+60, r22	; 0x3c
    19e2:	7d af       	std	Y+61, r23	; 0x3d
    19e4:	8e af       	std	Y+62, r24	; 0x3e
    19e6:	9f af       	std	Y+63, r25	; 0x3f
    19e8:	65 97       	sbiw	r28, 0x15	; 21
    19ea:	c6 01       	movw	r24, r12
    19ec:	b5 01       	movw	r22, r10
    19ee:	a4 01       	movw	r20, r8
    19f0:	93 01       	movw	r18, r6
    19f2:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    19f6:	61 96       	adiw	r28, 0x11	; 17
    19f8:	6c af       	std	Y+60, r22	; 0x3c
    19fa:	7d af       	std	Y+61, r23	; 0x3d
    19fc:	8e af       	std	Y+62, r24	; 0x3e
    19fe:	9f af       	std	Y+63, r25	; 0x3f
    1a00:	61 97       	sbiw	r28, 0x11	; 17
    1a02:	c6 01       	movw	r24, r12
    1a04:	b5 01       	movw	r22, r10
    1a06:	65 96       	adiw	r28, 0x15	; 21
    1a08:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a0a:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a0c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a0e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a10:	65 97       	sbiw	r28, 0x15	; 21
    1a12:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    1a16:	1b 01       	movw	r2, r22
    1a18:	2c 01       	movw	r4, r24
    1a1a:	c8 01       	movw	r24, r16
    1a1c:	b7 01       	movw	r22, r14
    1a1e:	a4 01       	movw	r20, r8
    1a20:	93 01       	movw	r18, r6
    1a22:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    1a26:	5b 01       	movw	r10, r22
    1a28:	6c 01       	movw	r12, r24
    1a2a:	c8 01       	movw	r24, r16
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	65 96       	adiw	r28, 0x15	; 21
    1a30:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a32:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a34:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a36:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a38:	65 97       	sbiw	r28, 0x15	; 21
    1a3a:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    1a3e:	7b 01       	movw	r14, r22
    1a40:	8c 01       	movw	r16, r24
    1a42:	a6 01       	movw	r20, r12
    1a44:	95 01       	movw	r18, r10
    1a46:	22 0d       	add	r18, r2
    1a48:	33 1d       	adc	r19, r3
    1a4a:	44 1d       	adc	r20, r4
    1a4c:	55 1d       	adc	r21, r5
    1a4e:	61 96       	adiw	r28, 0x11	; 17
    1a50:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a52:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a54:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a56:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a58:	61 97       	sbiw	r28, 0x11	; 17
    1a5a:	c4 01       	movw	r24, r8
    1a5c:	aa 27       	eor	r26, r26
    1a5e:	bb 27       	eor	r27, r27
    1a60:	28 0f       	add	r18, r24
    1a62:	39 1f       	adc	r19, r25
    1a64:	4a 1f       	adc	r20, r26
    1a66:	5b 1f       	adc	r21, r27
    1a68:	2a 15       	cp	r18, r10
    1a6a:	3b 05       	cpc	r19, r11
    1a6c:	4c 05       	cpc	r20, r12
    1a6e:	5d 05       	cpc	r21, r13
    1a70:	48 f4       	brcc	.+18     	; 0x1a84 <__umoddi3+0xb70>
    1a72:	81 2c       	mov	r8, r1
    1a74:	91 2c       	mov	r9, r1
    1a76:	e1 e0       	ldi	r30, 0x01	; 1
    1a78:	ae 2e       	mov	r10, r30
    1a7a:	b1 2c       	mov	r11, r1
    1a7c:	e8 0c       	add	r14, r8
    1a7e:	f9 1c       	adc	r15, r9
    1a80:	0a 1d       	adc	r16, r10
    1a82:	1b 1d       	adc	r17, r11
    1a84:	ca 01       	movw	r24, r20
    1a86:	aa 27       	eor	r26, r26
    1a88:	bb 27       	eor	r27, r27
    1a8a:	57 01       	movw	r10, r14
    1a8c:	68 01       	movw	r12, r16
    1a8e:	a8 0e       	add	r10, r24
    1a90:	b9 1e       	adc	r11, r25
    1a92:	ca 1e       	adc	r12, r26
    1a94:	db 1e       	adc	r13, r27
    1a96:	a9 01       	movw	r20, r18
    1a98:	33 27       	eor	r19, r19
    1a9a:	22 27       	eor	r18, r18
    1a9c:	61 96       	adiw	r28, 0x11	; 17
    1a9e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1aa0:	9d ad       	ldd	r25, Y+61	; 0x3d
    1aa2:	ae ad       	ldd	r26, Y+62	; 0x3e
    1aa4:	bf ad       	ldd	r27, Y+63	; 0x3f
    1aa6:	61 97       	sbiw	r28, 0x11	; 17
    1aa8:	a0 70       	andi	r26, 0x00	; 0
    1aaa:	b0 70       	andi	r27, 0x00	; 0
    1aac:	28 0f       	add	r18, r24
    1aae:	39 1f       	adc	r19, r25
    1ab0:	4a 1f       	adc	r20, r26
    1ab2:	5b 1f       	adc	r21, r27
    1ab4:	e9 8c       	ldd	r14, Y+25	; 0x19
    1ab6:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1ab8:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1aba:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1abc:	ea 14       	cp	r14, r10
    1abe:	fb 04       	cpc	r15, r11
    1ac0:	0c 05       	cpc	r16, r12
    1ac2:	1d 05       	cpc	r17, r13
    1ac4:	70 f0       	brcs	.+28     	; 0x1ae2 <__umoddi3+0xbce>
    1ac6:	ae 14       	cp	r10, r14
    1ac8:	bf 04       	cpc	r11, r15
    1aca:	c0 06       	cpc	r12, r16
    1acc:	d1 06       	cpc	r13, r17
    1ace:	69 f5       	brne	.+90     	; 0x1b2a <__umoddi3+0xc16>
    1ad0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1ad2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1ad4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ad6:	98 a1       	ldd	r25, Y+32	; 0x20
    1ad8:	62 17       	cp	r22, r18
    1ada:	73 07       	cpc	r23, r19
    1adc:	84 07       	cpc	r24, r20
    1ade:	95 07       	cpc	r25, r21
    1ae0:	20 f5       	brcc	.+72     	; 0x1b2a <__umoddi3+0xc16>
    1ae2:	da 01       	movw	r26, r20
    1ae4:	c9 01       	movw	r24, r18
    1ae6:	6d a0       	ldd	r6, Y+37	; 0x25
    1ae8:	7e a0       	ldd	r7, Y+38	; 0x26
    1aea:	8f a0       	ldd	r8, Y+39	; 0x27
    1aec:	98 a4       	ldd	r9, Y+40	; 0x28
    1aee:	86 19       	sub	r24, r6
    1af0:	97 09       	sbc	r25, r7
    1af2:	a8 09       	sbc	r26, r8
    1af4:	b9 09       	sbc	r27, r9
    1af6:	e9 a4       	ldd	r14, Y+41	; 0x29
    1af8:	fa a4       	ldd	r15, Y+42	; 0x2a
    1afa:	0b a5       	ldd	r16, Y+43	; 0x2b
    1afc:	1c a5       	ldd	r17, Y+44	; 0x2c
    1afe:	ae 18       	sub	r10, r14
    1b00:	bf 08       	sbc	r11, r15
    1b02:	c0 0a       	sbc	r12, r16
    1b04:	d1 0a       	sbc	r13, r17
    1b06:	ee 24       	eor	r14, r14
    1b08:	ff 24       	eor	r15, r15
    1b0a:	87 01       	movw	r16, r14
    1b0c:	28 17       	cp	r18, r24
    1b0e:	39 07       	cpc	r19, r25
    1b10:	4a 07       	cpc	r20, r26
    1b12:	5b 07       	cpc	r21, r27
    1b14:	28 f4       	brcc	.+10     	; 0x1b20 <__umoddi3+0xc0c>
    1b16:	21 e0       	ldi	r18, 0x01	; 1
    1b18:	e2 2e       	mov	r14, r18
    1b1a:	f1 2c       	mov	r15, r1
    1b1c:	01 2d       	mov	r16, r1
    1b1e:	11 2d       	mov	r17, r1
    1b20:	ae 18       	sub	r10, r14
    1b22:	bf 08       	sbc	r11, r15
    1b24:	c0 0a       	sbc	r12, r16
    1b26:	d1 0a       	sbc	r13, r17
    1b28:	02 c0       	rjmp	.+4      	; 0x1b2e <__umoddi3+0xc1a>
    1b2a:	da 01       	movw	r26, r20
    1b2c:	c9 01       	movw	r24, r18
    1b2e:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1b30:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1b32:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1b34:	98 a0       	ldd	r9, Y+32	; 0x20
    1b36:	68 1a       	sub	r6, r24
    1b38:	79 0a       	sbc	r7, r25
    1b3a:	8a 0a       	sbc	r8, r26
    1b3c:	9b 0a       	sbc	r9, r27
    1b3e:	49 8d       	ldd	r20, Y+25	; 0x19
    1b40:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b42:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b44:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b46:	4a 19       	sub	r20, r10
    1b48:	5b 09       	sbc	r21, r11
    1b4a:	6c 09       	sbc	r22, r12
    1b4c:	7d 09       	sbc	r23, r13
    1b4e:	5a 01       	movw	r10, r20
    1b50:	6b 01       	movw	r12, r22
    1b52:	22 24       	eor	r2, r2
    1b54:	33 24       	eor	r3, r3
    1b56:	21 01       	movw	r4, r2
    1b58:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b5a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b5c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b5e:	98 a1       	ldd	r25, Y+32	; 0x20
    1b60:	66 15       	cp	r22, r6
    1b62:	77 05       	cpc	r23, r7
    1b64:	88 05       	cpc	r24, r8
    1b66:	99 05       	cpc	r25, r9
    1b68:	28 f4       	brcc	.+10     	; 0x1b74 <__umoddi3+0xc60>
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	28 2e       	mov	r2, r24
    1b6e:	31 2c       	mov	r3, r1
    1b70:	41 2c       	mov	r4, r1
    1b72:	51 2c       	mov	r5, r1
    1b74:	86 01       	movw	r16, r12
    1b76:	75 01       	movw	r14, r10
    1b78:	e2 18       	sub	r14, r2
    1b7a:	f3 08       	sbc	r15, r3
    1b7c:	04 09       	sbc	r16, r4
    1b7e:	15 09       	sbc	r17, r5
    1b80:	a8 01       	movw	r20, r16
    1b82:	97 01       	movw	r18, r14
    1b84:	66 96       	adiw	r28, 0x16	; 22
    1b86:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b88:	66 97       	sbiw	r28, 0x16	; 22
    1b8a:	04 c0       	rjmp	.+8      	; 0x1b94 <__umoddi3+0xc80>
    1b8c:	22 0f       	add	r18, r18
    1b8e:	33 1f       	adc	r19, r19
    1b90:	44 1f       	adc	r20, r20
    1b92:	55 1f       	adc	r21, r21
    1b94:	0a 94       	dec	r0
    1b96:	d2 f7       	brpl	.-12     	; 0x1b8c <__umoddi3+0xc78>
    1b98:	d4 01       	movw	r26, r8
    1b9a:	c3 01       	movw	r24, r6
    1b9c:	67 96       	adiw	r28, 0x17	; 23
    1b9e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1ba0:	67 97       	sbiw	r28, 0x17	; 23
    1ba2:	04 c0       	rjmp	.+8      	; 0x1bac <__umoddi3+0xc98>
    1ba4:	b6 95       	lsr	r27
    1ba6:	a7 95       	ror	r26
    1ba8:	97 95       	ror	r25
    1baa:	87 95       	ror	r24
    1bac:	0a 94       	dec	r0
    1bae:	d2 f7       	brpl	.-12     	; 0x1ba4 <__umoddi3+0xc90>
    1bb0:	28 2b       	or	r18, r24
    1bb2:	39 2b       	or	r19, r25
    1bb4:	4a 2b       	or	r20, r26
    1bb6:	5b 2b       	or	r21, r27
    1bb8:	29 8b       	std	Y+17, r18	; 0x11
    1bba:	3a 8b       	std	Y+18, r19	; 0x12
    1bbc:	4b 8b       	std	Y+19, r20	; 0x13
    1bbe:	5c 8b       	std	Y+20, r21	; 0x14
    1bc0:	67 96       	adiw	r28, 0x17	; 23
    1bc2:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bc4:	67 97       	sbiw	r28, 0x17	; 23
    1bc6:	04 c0       	rjmp	.+8      	; 0x1bd0 <__umoddi3+0xcbc>
    1bc8:	16 95       	lsr	r17
    1bca:	07 95       	ror	r16
    1bcc:	f7 94       	ror	r15
    1bce:	e7 94       	ror	r14
    1bd0:	0a 94       	dec	r0
    1bd2:	d2 f7       	brpl	.-12     	; 0x1bc8 <__umoddi3+0xcb4>
    1bd4:	ed 8a       	std	Y+21, r14	; 0x15
    1bd6:	fe 8a       	std	Y+22, r15	; 0x16
    1bd8:	0f 8b       	std	Y+23, r16	; 0x17
    1bda:	18 8f       	std	Y+24, r17	; 0x18
    1bdc:	3a 89       	ldd	r19, Y+18	; 0x12
    1bde:	4b 89       	ldd	r20, Y+19	; 0x13
    1be0:	5c 89       	ldd	r21, Y+20	; 0x14
    1be2:	6e 2d       	mov	r22, r14
    1be4:	7e 89       	ldd	r23, Y+22	; 0x16
    1be6:	8f 89       	ldd	r24, Y+23	; 0x17
    1be8:	98 8d       	ldd	r25, Y+24	; 0x18
    1bea:	c5 5a       	subi	r28, 0xA5	; 165
    1bec:	df 4f       	sbci	r29, 0xFF	; 255
    1bee:	e2 e1       	ldi	r30, 0x12	; 18
    1bf0:	0c 94 d8 28 	jmp	0x51b0	; 0x51b0 <__epilogue_restores__>

00001bf4 <_fpadd_parts>:
    1bf4:	a0 e0       	ldi	r26, 0x00	; 0
    1bf6:	b0 e0       	ldi	r27, 0x00	; 0
    1bf8:	e0 e0       	ldi	r30, 0x00	; 0
    1bfa:	fe e0       	ldi	r31, 0x0E	; 14
    1bfc:	0c 94 bc 28 	jmp	0x5178	; 0x5178 <__prologue_saves__>
    1c00:	dc 01       	movw	r26, r24
    1c02:	2b 01       	movw	r4, r22
    1c04:	fa 01       	movw	r30, r20
    1c06:	9c 91       	ld	r25, X
    1c08:	92 30       	cpi	r25, 0x02	; 2
    1c0a:	08 f4       	brcc	.+2      	; 0x1c0e <_fpadd_parts+0x1a>
    1c0c:	39 c1       	rjmp	.+626    	; 0x1e80 <_fpadd_parts+0x28c>
    1c0e:	eb 01       	movw	r28, r22
    1c10:	88 81       	ld	r24, Y
    1c12:	82 30       	cpi	r24, 0x02	; 2
    1c14:	08 f4       	brcc	.+2      	; 0x1c18 <_fpadd_parts+0x24>
    1c16:	33 c1       	rjmp	.+614    	; 0x1e7e <_fpadd_parts+0x28a>
    1c18:	94 30       	cpi	r25, 0x04	; 4
    1c1a:	69 f4       	brne	.+26     	; 0x1c36 <_fpadd_parts+0x42>
    1c1c:	84 30       	cpi	r24, 0x04	; 4
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <_fpadd_parts+0x2e>
    1c20:	2f c1       	rjmp	.+606    	; 0x1e80 <_fpadd_parts+0x28c>
    1c22:	11 96       	adiw	r26, 0x01	; 1
    1c24:	9c 91       	ld	r25, X
    1c26:	11 97       	sbiw	r26, 0x01	; 1
    1c28:	89 81       	ldd	r24, Y+1	; 0x01
    1c2a:	98 17       	cp	r25, r24
    1c2c:	09 f4       	brne	.+2      	; 0x1c30 <_fpadd_parts+0x3c>
    1c2e:	28 c1       	rjmp	.+592    	; 0x1e80 <_fpadd_parts+0x28c>
    1c30:	ab e6       	ldi	r26, 0x6B	; 107
    1c32:	b0 e0       	ldi	r27, 0x00	; 0
    1c34:	25 c1       	rjmp	.+586    	; 0x1e80 <_fpadd_parts+0x28c>
    1c36:	84 30       	cpi	r24, 0x04	; 4
    1c38:	09 f4       	brne	.+2      	; 0x1c3c <_fpadd_parts+0x48>
    1c3a:	21 c1       	rjmp	.+578    	; 0x1e7e <_fpadd_parts+0x28a>
    1c3c:	82 30       	cpi	r24, 0x02	; 2
    1c3e:	a9 f4       	brne	.+42     	; 0x1c6a <_fpadd_parts+0x76>
    1c40:	92 30       	cpi	r25, 0x02	; 2
    1c42:	09 f0       	breq	.+2      	; 0x1c46 <_fpadd_parts+0x52>
    1c44:	1d c1       	rjmp	.+570    	; 0x1e80 <_fpadd_parts+0x28c>
    1c46:	9a 01       	movw	r18, r20
    1c48:	ad 01       	movw	r20, r26
    1c4a:	88 e0       	ldi	r24, 0x08	; 8
    1c4c:	ea 01       	movw	r28, r20
    1c4e:	09 90       	ld	r0, Y+
    1c50:	ae 01       	movw	r20, r28
    1c52:	e9 01       	movw	r28, r18
    1c54:	09 92       	st	Y+, r0
    1c56:	9e 01       	movw	r18, r28
    1c58:	81 50       	subi	r24, 0x01	; 1
    1c5a:	c1 f7       	brne	.-16     	; 0x1c4c <_fpadd_parts+0x58>
    1c5c:	e2 01       	movw	r28, r4
    1c5e:	89 81       	ldd	r24, Y+1	; 0x01
    1c60:	11 96       	adiw	r26, 0x01	; 1
    1c62:	9c 91       	ld	r25, X
    1c64:	89 23       	and	r24, r25
    1c66:	81 83       	std	Z+1, r24	; 0x01
    1c68:	08 c1       	rjmp	.+528    	; 0x1e7a <_fpadd_parts+0x286>
    1c6a:	92 30       	cpi	r25, 0x02	; 2
    1c6c:	09 f4       	brne	.+2      	; 0x1c70 <_fpadd_parts+0x7c>
    1c6e:	07 c1       	rjmp	.+526    	; 0x1e7e <_fpadd_parts+0x28a>
    1c70:	12 96       	adiw	r26, 0x02	; 2
    1c72:	2d 90       	ld	r2, X+
    1c74:	3c 90       	ld	r3, X
    1c76:	13 97       	sbiw	r26, 0x03	; 3
    1c78:	eb 01       	movw	r28, r22
    1c7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c7c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c7e:	14 96       	adiw	r26, 0x04	; 4
    1c80:	ad 90       	ld	r10, X+
    1c82:	bd 90       	ld	r11, X+
    1c84:	cd 90       	ld	r12, X+
    1c86:	dc 90       	ld	r13, X
    1c88:	17 97       	sbiw	r26, 0x07	; 7
    1c8a:	ec 80       	ldd	r14, Y+4	; 0x04
    1c8c:	fd 80       	ldd	r15, Y+5	; 0x05
    1c8e:	0e 81       	ldd	r16, Y+6	; 0x06
    1c90:	1f 81       	ldd	r17, Y+7	; 0x07
    1c92:	91 01       	movw	r18, r2
    1c94:	28 1b       	sub	r18, r24
    1c96:	39 0b       	sbc	r19, r25
    1c98:	b9 01       	movw	r22, r18
    1c9a:	37 ff       	sbrs	r19, 7
    1c9c:	04 c0       	rjmp	.+8      	; 0x1ca6 <_fpadd_parts+0xb2>
    1c9e:	66 27       	eor	r22, r22
    1ca0:	77 27       	eor	r23, r23
    1ca2:	62 1b       	sub	r22, r18
    1ca4:	73 0b       	sbc	r23, r19
    1ca6:	60 32       	cpi	r22, 0x20	; 32
    1ca8:	71 05       	cpc	r23, r1
    1caa:	0c f0       	brlt	.+2      	; 0x1cae <_fpadd_parts+0xba>
    1cac:	61 c0       	rjmp	.+194    	; 0x1d70 <_fpadd_parts+0x17c>
    1cae:	12 16       	cp	r1, r18
    1cb0:	13 06       	cpc	r1, r19
    1cb2:	6c f5       	brge	.+90     	; 0x1d0e <_fpadd_parts+0x11a>
    1cb4:	37 01       	movw	r6, r14
    1cb6:	48 01       	movw	r8, r16
    1cb8:	06 2e       	mov	r0, r22
    1cba:	04 c0       	rjmp	.+8      	; 0x1cc4 <_fpadd_parts+0xd0>
    1cbc:	96 94       	lsr	r9
    1cbe:	87 94       	ror	r8
    1cc0:	77 94       	ror	r7
    1cc2:	67 94       	ror	r6
    1cc4:	0a 94       	dec	r0
    1cc6:	d2 f7       	brpl	.-12     	; 0x1cbc <_fpadd_parts+0xc8>
    1cc8:	21 e0       	ldi	r18, 0x01	; 1
    1cca:	30 e0       	ldi	r19, 0x00	; 0
    1ccc:	40 e0       	ldi	r20, 0x00	; 0
    1cce:	50 e0       	ldi	r21, 0x00	; 0
    1cd0:	04 c0       	rjmp	.+8      	; 0x1cda <_fpadd_parts+0xe6>
    1cd2:	22 0f       	add	r18, r18
    1cd4:	33 1f       	adc	r19, r19
    1cd6:	44 1f       	adc	r20, r20
    1cd8:	55 1f       	adc	r21, r21
    1cda:	6a 95       	dec	r22
    1cdc:	d2 f7       	brpl	.-12     	; 0x1cd2 <_fpadd_parts+0xde>
    1cde:	21 50       	subi	r18, 0x01	; 1
    1ce0:	30 40       	sbci	r19, 0x00	; 0
    1ce2:	40 40       	sbci	r20, 0x00	; 0
    1ce4:	50 40       	sbci	r21, 0x00	; 0
    1ce6:	2e 21       	and	r18, r14
    1ce8:	3f 21       	and	r19, r15
    1cea:	40 23       	and	r20, r16
    1cec:	51 23       	and	r21, r17
    1cee:	21 15       	cp	r18, r1
    1cf0:	31 05       	cpc	r19, r1
    1cf2:	41 05       	cpc	r20, r1
    1cf4:	51 05       	cpc	r21, r1
    1cf6:	21 f0       	breq	.+8      	; 0x1d00 <_fpadd_parts+0x10c>
    1cf8:	21 e0       	ldi	r18, 0x01	; 1
    1cfa:	30 e0       	ldi	r19, 0x00	; 0
    1cfc:	40 e0       	ldi	r20, 0x00	; 0
    1cfe:	50 e0       	ldi	r21, 0x00	; 0
    1d00:	79 01       	movw	r14, r18
    1d02:	8a 01       	movw	r16, r20
    1d04:	e6 28       	or	r14, r6
    1d06:	f7 28       	or	r15, r7
    1d08:	08 29       	or	r16, r8
    1d0a:	19 29       	or	r17, r9
    1d0c:	3c c0       	rjmp	.+120    	; 0x1d86 <_fpadd_parts+0x192>
    1d0e:	23 2b       	or	r18, r19
    1d10:	d1 f1       	breq	.+116    	; 0x1d86 <_fpadd_parts+0x192>
    1d12:	26 0e       	add	r2, r22
    1d14:	37 1e       	adc	r3, r23
    1d16:	35 01       	movw	r6, r10
    1d18:	46 01       	movw	r8, r12
    1d1a:	06 2e       	mov	r0, r22
    1d1c:	04 c0       	rjmp	.+8      	; 0x1d26 <_fpadd_parts+0x132>
    1d1e:	96 94       	lsr	r9
    1d20:	87 94       	ror	r8
    1d22:	77 94       	ror	r7
    1d24:	67 94       	ror	r6
    1d26:	0a 94       	dec	r0
    1d28:	d2 f7       	brpl	.-12     	; 0x1d1e <_fpadd_parts+0x12a>
    1d2a:	21 e0       	ldi	r18, 0x01	; 1
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	40 e0       	ldi	r20, 0x00	; 0
    1d30:	50 e0       	ldi	r21, 0x00	; 0
    1d32:	04 c0       	rjmp	.+8      	; 0x1d3c <_fpadd_parts+0x148>
    1d34:	22 0f       	add	r18, r18
    1d36:	33 1f       	adc	r19, r19
    1d38:	44 1f       	adc	r20, r20
    1d3a:	55 1f       	adc	r21, r21
    1d3c:	6a 95       	dec	r22
    1d3e:	d2 f7       	brpl	.-12     	; 0x1d34 <_fpadd_parts+0x140>
    1d40:	21 50       	subi	r18, 0x01	; 1
    1d42:	30 40       	sbci	r19, 0x00	; 0
    1d44:	40 40       	sbci	r20, 0x00	; 0
    1d46:	50 40       	sbci	r21, 0x00	; 0
    1d48:	2a 21       	and	r18, r10
    1d4a:	3b 21       	and	r19, r11
    1d4c:	4c 21       	and	r20, r12
    1d4e:	5d 21       	and	r21, r13
    1d50:	21 15       	cp	r18, r1
    1d52:	31 05       	cpc	r19, r1
    1d54:	41 05       	cpc	r20, r1
    1d56:	51 05       	cpc	r21, r1
    1d58:	21 f0       	breq	.+8      	; 0x1d62 <_fpadd_parts+0x16e>
    1d5a:	21 e0       	ldi	r18, 0x01	; 1
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	40 e0       	ldi	r20, 0x00	; 0
    1d60:	50 e0       	ldi	r21, 0x00	; 0
    1d62:	59 01       	movw	r10, r18
    1d64:	6a 01       	movw	r12, r20
    1d66:	a6 28       	or	r10, r6
    1d68:	b7 28       	or	r11, r7
    1d6a:	c8 28       	or	r12, r8
    1d6c:	d9 28       	or	r13, r9
    1d6e:	0b c0       	rjmp	.+22     	; 0x1d86 <_fpadd_parts+0x192>
    1d70:	82 15       	cp	r24, r2
    1d72:	93 05       	cpc	r25, r3
    1d74:	2c f0       	brlt	.+10     	; 0x1d80 <_fpadd_parts+0x18c>
    1d76:	1c 01       	movw	r2, r24
    1d78:	aa 24       	eor	r10, r10
    1d7a:	bb 24       	eor	r11, r11
    1d7c:	65 01       	movw	r12, r10
    1d7e:	03 c0       	rjmp	.+6      	; 0x1d86 <_fpadd_parts+0x192>
    1d80:	ee 24       	eor	r14, r14
    1d82:	ff 24       	eor	r15, r15
    1d84:	87 01       	movw	r16, r14
    1d86:	11 96       	adiw	r26, 0x01	; 1
    1d88:	9c 91       	ld	r25, X
    1d8a:	d2 01       	movw	r26, r4
    1d8c:	11 96       	adiw	r26, 0x01	; 1
    1d8e:	8c 91       	ld	r24, X
    1d90:	98 17       	cp	r25, r24
    1d92:	09 f4       	brne	.+2      	; 0x1d96 <_fpadd_parts+0x1a2>
    1d94:	45 c0       	rjmp	.+138    	; 0x1e20 <_fpadd_parts+0x22c>
    1d96:	99 23       	and	r25, r25
    1d98:	39 f0       	breq	.+14     	; 0x1da8 <_fpadd_parts+0x1b4>
    1d9a:	a8 01       	movw	r20, r16
    1d9c:	97 01       	movw	r18, r14
    1d9e:	2a 19       	sub	r18, r10
    1da0:	3b 09       	sbc	r19, r11
    1da2:	4c 09       	sbc	r20, r12
    1da4:	5d 09       	sbc	r21, r13
    1da6:	06 c0       	rjmp	.+12     	; 0x1db4 <_fpadd_parts+0x1c0>
    1da8:	a6 01       	movw	r20, r12
    1daa:	95 01       	movw	r18, r10
    1dac:	2e 19       	sub	r18, r14
    1dae:	3f 09       	sbc	r19, r15
    1db0:	40 0b       	sbc	r20, r16
    1db2:	51 0b       	sbc	r21, r17
    1db4:	57 fd       	sbrc	r21, 7
    1db6:	08 c0       	rjmp	.+16     	; 0x1dc8 <_fpadd_parts+0x1d4>
    1db8:	11 82       	std	Z+1, r1	; 0x01
    1dba:	33 82       	std	Z+3, r3	; 0x03
    1dbc:	22 82       	std	Z+2, r2	; 0x02
    1dbe:	24 83       	std	Z+4, r18	; 0x04
    1dc0:	35 83       	std	Z+5, r19	; 0x05
    1dc2:	46 83       	std	Z+6, r20	; 0x06
    1dc4:	57 83       	std	Z+7, r21	; 0x07
    1dc6:	1d c0       	rjmp	.+58     	; 0x1e02 <_fpadd_parts+0x20e>
    1dc8:	81 e0       	ldi	r24, 0x01	; 1
    1dca:	81 83       	std	Z+1, r24	; 0x01
    1dcc:	33 82       	std	Z+3, r3	; 0x03
    1dce:	22 82       	std	Z+2, r2	; 0x02
    1dd0:	88 27       	eor	r24, r24
    1dd2:	99 27       	eor	r25, r25
    1dd4:	dc 01       	movw	r26, r24
    1dd6:	82 1b       	sub	r24, r18
    1dd8:	93 0b       	sbc	r25, r19
    1dda:	a4 0b       	sbc	r26, r20
    1ddc:	b5 0b       	sbc	r27, r21
    1dde:	84 83       	std	Z+4, r24	; 0x04
    1de0:	95 83       	std	Z+5, r25	; 0x05
    1de2:	a6 83       	std	Z+6, r26	; 0x06
    1de4:	b7 83       	std	Z+7, r27	; 0x07
    1de6:	0d c0       	rjmp	.+26     	; 0x1e02 <_fpadd_parts+0x20e>
    1de8:	22 0f       	add	r18, r18
    1dea:	33 1f       	adc	r19, r19
    1dec:	44 1f       	adc	r20, r20
    1dee:	55 1f       	adc	r21, r21
    1df0:	24 83       	std	Z+4, r18	; 0x04
    1df2:	35 83       	std	Z+5, r19	; 0x05
    1df4:	46 83       	std	Z+6, r20	; 0x06
    1df6:	57 83       	std	Z+7, r21	; 0x07
    1df8:	82 81       	ldd	r24, Z+2	; 0x02
    1dfa:	93 81       	ldd	r25, Z+3	; 0x03
    1dfc:	01 97       	sbiw	r24, 0x01	; 1
    1dfe:	93 83       	std	Z+3, r25	; 0x03
    1e00:	82 83       	std	Z+2, r24	; 0x02
    1e02:	24 81       	ldd	r18, Z+4	; 0x04
    1e04:	35 81       	ldd	r19, Z+5	; 0x05
    1e06:	46 81       	ldd	r20, Z+6	; 0x06
    1e08:	57 81       	ldd	r21, Z+7	; 0x07
    1e0a:	da 01       	movw	r26, r20
    1e0c:	c9 01       	movw	r24, r18
    1e0e:	01 97       	sbiw	r24, 0x01	; 1
    1e10:	a1 09       	sbc	r26, r1
    1e12:	b1 09       	sbc	r27, r1
    1e14:	8f 5f       	subi	r24, 0xFF	; 255
    1e16:	9f 4f       	sbci	r25, 0xFF	; 255
    1e18:	af 4f       	sbci	r26, 0xFF	; 255
    1e1a:	bf 43       	sbci	r27, 0x3F	; 63
    1e1c:	28 f3       	brcs	.-54     	; 0x1de8 <_fpadd_parts+0x1f4>
    1e1e:	0b c0       	rjmp	.+22     	; 0x1e36 <_fpadd_parts+0x242>
    1e20:	91 83       	std	Z+1, r25	; 0x01
    1e22:	33 82       	std	Z+3, r3	; 0x03
    1e24:	22 82       	std	Z+2, r2	; 0x02
    1e26:	ea 0c       	add	r14, r10
    1e28:	fb 1c       	adc	r15, r11
    1e2a:	0c 1d       	adc	r16, r12
    1e2c:	1d 1d       	adc	r17, r13
    1e2e:	e4 82       	std	Z+4, r14	; 0x04
    1e30:	f5 82       	std	Z+5, r15	; 0x05
    1e32:	06 83       	std	Z+6, r16	; 0x06
    1e34:	17 83       	std	Z+7, r17	; 0x07
    1e36:	83 e0       	ldi	r24, 0x03	; 3
    1e38:	80 83       	st	Z, r24
    1e3a:	24 81       	ldd	r18, Z+4	; 0x04
    1e3c:	35 81       	ldd	r19, Z+5	; 0x05
    1e3e:	46 81       	ldd	r20, Z+6	; 0x06
    1e40:	57 81       	ldd	r21, Z+7	; 0x07
    1e42:	57 ff       	sbrs	r21, 7
    1e44:	1a c0       	rjmp	.+52     	; 0x1e7a <_fpadd_parts+0x286>
    1e46:	c9 01       	movw	r24, r18
    1e48:	aa 27       	eor	r26, r26
    1e4a:	97 fd       	sbrc	r25, 7
    1e4c:	a0 95       	com	r26
    1e4e:	ba 2f       	mov	r27, r26
    1e50:	81 70       	andi	r24, 0x01	; 1
    1e52:	90 70       	andi	r25, 0x00	; 0
    1e54:	a0 70       	andi	r26, 0x00	; 0
    1e56:	b0 70       	andi	r27, 0x00	; 0
    1e58:	56 95       	lsr	r21
    1e5a:	47 95       	ror	r20
    1e5c:	37 95       	ror	r19
    1e5e:	27 95       	ror	r18
    1e60:	82 2b       	or	r24, r18
    1e62:	93 2b       	or	r25, r19
    1e64:	a4 2b       	or	r26, r20
    1e66:	b5 2b       	or	r27, r21
    1e68:	84 83       	std	Z+4, r24	; 0x04
    1e6a:	95 83       	std	Z+5, r25	; 0x05
    1e6c:	a6 83       	std	Z+6, r26	; 0x06
    1e6e:	b7 83       	std	Z+7, r27	; 0x07
    1e70:	82 81       	ldd	r24, Z+2	; 0x02
    1e72:	93 81       	ldd	r25, Z+3	; 0x03
    1e74:	01 96       	adiw	r24, 0x01	; 1
    1e76:	93 83       	std	Z+3, r25	; 0x03
    1e78:	82 83       	std	Z+2, r24	; 0x02
    1e7a:	df 01       	movw	r26, r30
    1e7c:	01 c0       	rjmp	.+2      	; 0x1e80 <_fpadd_parts+0x28c>
    1e7e:	d2 01       	movw	r26, r4
    1e80:	cd 01       	movw	r24, r26
    1e82:	cd b7       	in	r28, 0x3d	; 61
    1e84:	de b7       	in	r29, 0x3e	; 62
    1e86:	e2 e1       	ldi	r30, 0x12	; 18
    1e88:	0c 94 d8 28 	jmp	0x51b0	; 0x51b0 <__epilogue_restores__>

00001e8c <__subsf3>:
    1e8c:	a0 e2       	ldi	r26, 0x20	; 32
    1e8e:	b0 e0       	ldi	r27, 0x00	; 0
    1e90:	ec e4       	ldi	r30, 0x4C	; 76
    1e92:	ff e0       	ldi	r31, 0x0F	; 15
    1e94:	0c 94 c8 28 	jmp	0x5190	; 0x5190 <__prologue_saves__+0x18>
    1e98:	69 83       	std	Y+1, r22	; 0x01
    1e9a:	7a 83       	std	Y+2, r23	; 0x02
    1e9c:	8b 83       	std	Y+3, r24	; 0x03
    1e9e:	9c 83       	std	Y+4, r25	; 0x04
    1ea0:	2d 83       	std	Y+5, r18	; 0x05
    1ea2:	3e 83       	std	Y+6, r19	; 0x06
    1ea4:	4f 83       	std	Y+7, r20	; 0x07
    1ea6:	58 87       	std	Y+8, r21	; 0x08
    1ea8:	e9 e0       	ldi	r30, 0x09	; 9
    1eaa:	ee 2e       	mov	r14, r30
    1eac:	f1 2c       	mov	r15, r1
    1eae:	ec 0e       	add	r14, r28
    1eb0:	fd 1e       	adc	r15, r29
    1eb2:	ce 01       	movw	r24, r28
    1eb4:	01 96       	adiw	r24, 0x01	; 1
    1eb6:	b7 01       	movw	r22, r14
    1eb8:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    1ebc:	8e 01       	movw	r16, r28
    1ebe:	0f 5e       	subi	r16, 0xEF	; 239
    1ec0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ec2:	ce 01       	movw	r24, r28
    1ec4:	05 96       	adiw	r24, 0x05	; 5
    1ec6:	b8 01       	movw	r22, r16
    1ec8:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    1ecc:	8a 89       	ldd	r24, Y+18	; 0x12
    1ece:	91 e0       	ldi	r25, 0x01	; 1
    1ed0:	89 27       	eor	r24, r25
    1ed2:	8a 8b       	std	Y+18, r24	; 0x12
    1ed4:	c7 01       	movw	r24, r14
    1ed6:	b8 01       	movw	r22, r16
    1ed8:	ae 01       	movw	r20, r28
    1eda:	47 5e       	subi	r20, 0xE7	; 231
    1edc:	5f 4f       	sbci	r21, 0xFF	; 255
    1ede:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <_fpadd_parts>
    1ee2:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__pack_f>
    1ee6:	a0 96       	adiw	r28, 0x20	; 32
    1ee8:	e6 e0       	ldi	r30, 0x06	; 6
    1eea:	0c 94 e4 28 	jmp	0x51c8	; 0x51c8 <__epilogue_restores__+0x18>

00001eee <__addsf3>:
    1eee:	a0 e2       	ldi	r26, 0x20	; 32
    1ef0:	b0 e0       	ldi	r27, 0x00	; 0
    1ef2:	ed e7       	ldi	r30, 0x7D	; 125
    1ef4:	ff e0       	ldi	r31, 0x0F	; 15
    1ef6:	0c 94 c8 28 	jmp	0x5190	; 0x5190 <__prologue_saves__+0x18>
    1efa:	69 83       	std	Y+1, r22	; 0x01
    1efc:	7a 83       	std	Y+2, r23	; 0x02
    1efe:	8b 83       	std	Y+3, r24	; 0x03
    1f00:	9c 83       	std	Y+4, r25	; 0x04
    1f02:	2d 83       	std	Y+5, r18	; 0x05
    1f04:	3e 83       	std	Y+6, r19	; 0x06
    1f06:	4f 83       	std	Y+7, r20	; 0x07
    1f08:	58 87       	std	Y+8, r21	; 0x08
    1f0a:	f9 e0       	ldi	r31, 0x09	; 9
    1f0c:	ef 2e       	mov	r14, r31
    1f0e:	f1 2c       	mov	r15, r1
    1f10:	ec 0e       	add	r14, r28
    1f12:	fd 1e       	adc	r15, r29
    1f14:	ce 01       	movw	r24, r28
    1f16:	01 96       	adiw	r24, 0x01	; 1
    1f18:	b7 01       	movw	r22, r14
    1f1a:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    1f1e:	8e 01       	movw	r16, r28
    1f20:	0f 5e       	subi	r16, 0xEF	; 239
    1f22:	1f 4f       	sbci	r17, 0xFF	; 255
    1f24:	ce 01       	movw	r24, r28
    1f26:	05 96       	adiw	r24, 0x05	; 5
    1f28:	b8 01       	movw	r22, r16
    1f2a:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    1f2e:	c7 01       	movw	r24, r14
    1f30:	b8 01       	movw	r22, r16
    1f32:	ae 01       	movw	r20, r28
    1f34:	47 5e       	subi	r20, 0xE7	; 231
    1f36:	5f 4f       	sbci	r21, 0xFF	; 255
    1f38:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <_fpadd_parts>
    1f3c:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__pack_f>
    1f40:	a0 96       	adiw	r28, 0x20	; 32
    1f42:	e6 e0       	ldi	r30, 0x06	; 6
    1f44:	0c 94 e4 28 	jmp	0x51c8	; 0x51c8 <__epilogue_restores__+0x18>

00001f48 <__mulsf3>:
    1f48:	a0 e2       	ldi	r26, 0x20	; 32
    1f4a:	b0 e0       	ldi	r27, 0x00	; 0
    1f4c:	ea ea       	ldi	r30, 0xAA	; 170
    1f4e:	ff e0       	ldi	r31, 0x0F	; 15
    1f50:	0c 94 bc 28 	jmp	0x5178	; 0x5178 <__prologue_saves__>
    1f54:	69 83       	std	Y+1, r22	; 0x01
    1f56:	7a 83       	std	Y+2, r23	; 0x02
    1f58:	8b 83       	std	Y+3, r24	; 0x03
    1f5a:	9c 83       	std	Y+4, r25	; 0x04
    1f5c:	2d 83       	std	Y+5, r18	; 0x05
    1f5e:	3e 83       	std	Y+6, r19	; 0x06
    1f60:	4f 83       	std	Y+7, r20	; 0x07
    1f62:	58 87       	std	Y+8, r21	; 0x08
    1f64:	ce 01       	movw	r24, r28
    1f66:	01 96       	adiw	r24, 0x01	; 1
    1f68:	be 01       	movw	r22, r28
    1f6a:	67 5f       	subi	r22, 0xF7	; 247
    1f6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f6e:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    1f72:	ce 01       	movw	r24, r28
    1f74:	05 96       	adiw	r24, 0x05	; 5
    1f76:	be 01       	movw	r22, r28
    1f78:	6f 5e       	subi	r22, 0xEF	; 239
    1f7a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f7c:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    1f80:	99 85       	ldd	r25, Y+9	; 0x09
    1f82:	92 30       	cpi	r25, 0x02	; 2
    1f84:	88 f0       	brcs	.+34     	; 0x1fa8 <__mulsf3+0x60>
    1f86:	89 89       	ldd	r24, Y+17	; 0x11
    1f88:	82 30       	cpi	r24, 0x02	; 2
    1f8a:	c8 f0       	brcs	.+50     	; 0x1fbe <__mulsf3+0x76>
    1f8c:	94 30       	cpi	r25, 0x04	; 4
    1f8e:	19 f4       	brne	.+6      	; 0x1f96 <__mulsf3+0x4e>
    1f90:	82 30       	cpi	r24, 0x02	; 2
    1f92:	51 f4       	brne	.+20     	; 0x1fa8 <__mulsf3+0x60>
    1f94:	04 c0       	rjmp	.+8      	; 0x1f9e <__mulsf3+0x56>
    1f96:	84 30       	cpi	r24, 0x04	; 4
    1f98:	29 f4       	brne	.+10     	; 0x1fa4 <__mulsf3+0x5c>
    1f9a:	92 30       	cpi	r25, 0x02	; 2
    1f9c:	81 f4       	brne	.+32     	; 0x1fbe <__mulsf3+0x76>
    1f9e:	8b e6       	ldi	r24, 0x6B	; 107
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	c6 c0       	rjmp	.+396    	; 0x2130 <__mulsf3+0x1e8>
    1fa4:	92 30       	cpi	r25, 0x02	; 2
    1fa6:	49 f4       	brne	.+18     	; 0x1fba <__mulsf3+0x72>
    1fa8:	20 e0       	ldi	r18, 0x00	; 0
    1faa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fac:	8a 89       	ldd	r24, Y+18	; 0x12
    1fae:	98 13       	cpse	r25, r24
    1fb0:	21 e0       	ldi	r18, 0x01	; 1
    1fb2:	2a 87       	std	Y+10, r18	; 0x0a
    1fb4:	ce 01       	movw	r24, r28
    1fb6:	09 96       	adiw	r24, 0x09	; 9
    1fb8:	bb c0       	rjmp	.+374    	; 0x2130 <__mulsf3+0x1e8>
    1fba:	82 30       	cpi	r24, 0x02	; 2
    1fbc:	49 f4       	brne	.+18     	; 0x1fd0 <__mulsf3+0x88>
    1fbe:	20 e0       	ldi	r18, 0x00	; 0
    1fc0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fc2:	8a 89       	ldd	r24, Y+18	; 0x12
    1fc4:	98 13       	cpse	r25, r24
    1fc6:	21 e0       	ldi	r18, 0x01	; 1
    1fc8:	2a 8b       	std	Y+18, r18	; 0x12
    1fca:	ce 01       	movw	r24, r28
    1fcc:	41 96       	adiw	r24, 0x11	; 17
    1fce:	b0 c0       	rjmp	.+352    	; 0x2130 <__mulsf3+0x1e8>
    1fd0:	2d 84       	ldd	r2, Y+13	; 0x0d
    1fd2:	3e 84       	ldd	r3, Y+14	; 0x0e
    1fd4:	4f 84       	ldd	r4, Y+15	; 0x0f
    1fd6:	58 88       	ldd	r5, Y+16	; 0x10
    1fd8:	6d 88       	ldd	r6, Y+21	; 0x15
    1fda:	7e 88       	ldd	r7, Y+22	; 0x16
    1fdc:	8f 88       	ldd	r8, Y+23	; 0x17
    1fde:	98 8c       	ldd	r9, Y+24	; 0x18
    1fe0:	ee 24       	eor	r14, r14
    1fe2:	ff 24       	eor	r15, r15
    1fe4:	87 01       	movw	r16, r14
    1fe6:	aa 24       	eor	r10, r10
    1fe8:	bb 24       	eor	r11, r11
    1fea:	65 01       	movw	r12, r10
    1fec:	40 e0       	ldi	r20, 0x00	; 0
    1fee:	50 e0       	ldi	r21, 0x00	; 0
    1ff0:	60 e0       	ldi	r22, 0x00	; 0
    1ff2:	70 e0       	ldi	r23, 0x00	; 0
    1ff4:	e0 e0       	ldi	r30, 0x00	; 0
    1ff6:	f0 e0       	ldi	r31, 0x00	; 0
    1ff8:	c1 01       	movw	r24, r2
    1ffa:	81 70       	andi	r24, 0x01	; 1
    1ffc:	90 70       	andi	r25, 0x00	; 0
    1ffe:	89 2b       	or	r24, r25
    2000:	e9 f0       	breq	.+58     	; 0x203c <__mulsf3+0xf4>
    2002:	e6 0c       	add	r14, r6
    2004:	f7 1c       	adc	r15, r7
    2006:	08 1d       	adc	r16, r8
    2008:	19 1d       	adc	r17, r9
    200a:	9a 01       	movw	r18, r20
    200c:	ab 01       	movw	r20, r22
    200e:	2a 0d       	add	r18, r10
    2010:	3b 1d       	adc	r19, r11
    2012:	4c 1d       	adc	r20, r12
    2014:	5d 1d       	adc	r21, r13
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	a0 e0       	ldi	r26, 0x00	; 0
    201c:	b0 e0       	ldi	r27, 0x00	; 0
    201e:	e6 14       	cp	r14, r6
    2020:	f7 04       	cpc	r15, r7
    2022:	08 05       	cpc	r16, r8
    2024:	19 05       	cpc	r17, r9
    2026:	20 f4       	brcc	.+8      	; 0x2030 <__mulsf3+0xe8>
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	a0 e0       	ldi	r26, 0x00	; 0
    202e:	b0 e0       	ldi	r27, 0x00	; 0
    2030:	ba 01       	movw	r22, r20
    2032:	a9 01       	movw	r20, r18
    2034:	48 0f       	add	r20, r24
    2036:	59 1f       	adc	r21, r25
    2038:	6a 1f       	adc	r22, r26
    203a:	7b 1f       	adc	r23, r27
    203c:	aa 0c       	add	r10, r10
    203e:	bb 1c       	adc	r11, r11
    2040:	cc 1c       	adc	r12, r12
    2042:	dd 1c       	adc	r13, r13
    2044:	97 fe       	sbrs	r9, 7
    2046:	08 c0       	rjmp	.+16     	; 0x2058 <__mulsf3+0x110>
    2048:	81 e0       	ldi	r24, 0x01	; 1
    204a:	90 e0       	ldi	r25, 0x00	; 0
    204c:	a0 e0       	ldi	r26, 0x00	; 0
    204e:	b0 e0       	ldi	r27, 0x00	; 0
    2050:	a8 2a       	or	r10, r24
    2052:	b9 2a       	or	r11, r25
    2054:	ca 2a       	or	r12, r26
    2056:	db 2a       	or	r13, r27
    2058:	31 96       	adiw	r30, 0x01	; 1
    205a:	e0 32       	cpi	r30, 0x20	; 32
    205c:	f1 05       	cpc	r31, r1
    205e:	49 f0       	breq	.+18     	; 0x2072 <__mulsf3+0x12a>
    2060:	66 0c       	add	r6, r6
    2062:	77 1c       	adc	r7, r7
    2064:	88 1c       	adc	r8, r8
    2066:	99 1c       	adc	r9, r9
    2068:	56 94       	lsr	r5
    206a:	47 94       	ror	r4
    206c:	37 94       	ror	r3
    206e:	27 94       	ror	r2
    2070:	c3 cf       	rjmp	.-122    	; 0x1ff8 <__mulsf3+0xb0>
    2072:	fa 85       	ldd	r31, Y+10	; 0x0a
    2074:	ea 89       	ldd	r30, Y+18	; 0x12
    2076:	2b 89       	ldd	r18, Y+19	; 0x13
    2078:	3c 89       	ldd	r19, Y+20	; 0x14
    207a:	8b 85       	ldd	r24, Y+11	; 0x0b
    207c:	9c 85       	ldd	r25, Y+12	; 0x0c
    207e:	28 0f       	add	r18, r24
    2080:	39 1f       	adc	r19, r25
    2082:	2e 5f       	subi	r18, 0xFE	; 254
    2084:	3f 4f       	sbci	r19, 0xFF	; 255
    2086:	17 c0       	rjmp	.+46     	; 0x20b6 <__mulsf3+0x16e>
    2088:	ca 01       	movw	r24, r20
    208a:	81 70       	andi	r24, 0x01	; 1
    208c:	90 70       	andi	r25, 0x00	; 0
    208e:	89 2b       	or	r24, r25
    2090:	61 f0       	breq	.+24     	; 0x20aa <__mulsf3+0x162>
    2092:	16 95       	lsr	r17
    2094:	07 95       	ror	r16
    2096:	f7 94       	ror	r15
    2098:	e7 94       	ror	r14
    209a:	80 e0       	ldi	r24, 0x00	; 0
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	a0 e0       	ldi	r26, 0x00	; 0
    20a0:	b0 e8       	ldi	r27, 0x80	; 128
    20a2:	e8 2a       	or	r14, r24
    20a4:	f9 2a       	or	r15, r25
    20a6:	0a 2b       	or	r16, r26
    20a8:	1b 2b       	or	r17, r27
    20aa:	76 95       	lsr	r23
    20ac:	67 95       	ror	r22
    20ae:	57 95       	ror	r21
    20b0:	47 95       	ror	r20
    20b2:	2f 5f       	subi	r18, 0xFF	; 255
    20b4:	3f 4f       	sbci	r19, 0xFF	; 255
    20b6:	77 fd       	sbrc	r23, 7
    20b8:	e7 cf       	rjmp	.-50     	; 0x2088 <__mulsf3+0x140>
    20ba:	0c c0       	rjmp	.+24     	; 0x20d4 <__mulsf3+0x18c>
    20bc:	44 0f       	add	r20, r20
    20be:	55 1f       	adc	r21, r21
    20c0:	66 1f       	adc	r22, r22
    20c2:	77 1f       	adc	r23, r23
    20c4:	17 fd       	sbrc	r17, 7
    20c6:	41 60       	ori	r20, 0x01	; 1
    20c8:	ee 0c       	add	r14, r14
    20ca:	ff 1c       	adc	r15, r15
    20cc:	00 1f       	adc	r16, r16
    20ce:	11 1f       	adc	r17, r17
    20d0:	21 50       	subi	r18, 0x01	; 1
    20d2:	30 40       	sbci	r19, 0x00	; 0
    20d4:	40 30       	cpi	r20, 0x00	; 0
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	59 07       	cpc	r21, r25
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	69 07       	cpc	r22, r25
    20de:	90 e4       	ldi	r25, 0x40	; 64
    20e0:	79 07       	cpc	r23, r25
    20e2:	60 f3       	brcs	.-40     	; 0x20bc <__mulsf3+0x174>
    20e4:	2b 8f       	std	Y+27, r18	; 0x1b
    20e6:	3c 8f       	std	Y+28, r19	; 0x1c
    20e8:	db 01       	movw	r26, r22
    20ea:	ca 01       	movw	r24, r20
    20ec:	8f 77       	andi	r24, 0x7F	; 127
    20ee:	90 70       	andi	r25, 0x00	; 0
    20f0:	a0 70       	andi	r26, 0x00	; 0
    20f2:	b0 70       	andi	r27, 0x00	; 0
    20f4:	80 34       	cpi	r24, 0x40	; 64
    20f6:	91 05       	cpc	r25, r1
    20f8:	a1 05       	cpc	r26, r1
    20fa:	b1 05       	cpc	r27, r1
    20fc:	61 f4       	brne	.+24     	; 0x2116 <__mulsf3+0x1ce>
    20fe:	47 fd       	sbrc	r20, 7
    2100:	0a c0       	rjmp	.+20     	; 0x2116 <__mulsf3+0x1ce>
    2102:	e1 14       	cp	r14, r1
    2104:	f1 04       	cpc	r15, r1
    2106:	01 05       	cpc	r16, r1
    2108:	11 05       	cpc	r17, r1
    210a:	29 f0       	breq	.+10     	; 0x2116 <__mulsf3+0x1ce>
    210c:	40 5c       	subi	r20, 0xC0	; 192
    210e:	5f 4f       	sbci	r21, 0xFF	; 255
    2110:	6f 4f       	sbci	r22, 0xFF	; 255
    2112:	7f 4f       	sbci	r23, 0xFF	; 255
    2114:	40 78       	andi	r20, 0x80	; 128
    2116:	1a 8e       	std	Y+26, r1	; 0x1a
    2118:	fe 17       	cp	r31, r30
    211a:	11 f0       	breq	.+4      	; 0x2120 <__mulsf3+0x1d8>
    211c:	81 e0       	ldi	r24, 0x01	; 1
    211e:	8a 8f       	std	Y+26, r24	; 0x1a
    2120:	4d 8f       	std	Y+29, r20	; 0x1d
    2122:	5e 8f       	std	Y+30, r21	; 0x1e
    2124:	6f 8f       	std	Y+31, r22	; 0x1f
    2126:	78 a3       	std	Y+32, r23	; 0x20
    2128:	83 e0       	ldi	r24, 0x03	; 3
    212a:	89 8f       	std	Y+25, r24	; 0x19
    212c:	ce 01       	movw	r24, r28
    212e:	49 96       	adiw	r24, 0x19	; 25
    2130:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__pack_f>
    2134:	a0 96       	adiw	r28, 0x20	; 32
    2136:	e2 e1       	ldi	r30, 0x12	; 18
    2138:	0c 94 d8 28 	jmp	0x51b0	; 0x51b0 <__epilogue_restores__>

0000213c <__divsf3>:
    213c:	a8 e1       	ldi	r26, 0x18	; 24
    213e:	b0 e0       	ldi	r27, 0x00	; 0
    2140:	e4 ea       	ldi	r30, 0xA4	; 164
    2142:	f0 e1       	ldi	r31, 0x10	; 16
    2144:	0c 94 c4 28 	jmp	0x5188	; 0x5188 <__prologue_saves__+0x10>
    2148:	69 83       	std	Y+1, r22	; 0x01
    214a:	7a 83       	std	Y+2, r23	; 0x02
    214c:	8b 83       	std	Y+3, r24	; 0x03
    214e:	9c 83       	std	Y+4, r25	; 0x04
    2150:	2d 83       	std	Y+5, r18	; 0x05
    2152:	3e 83       	std	Y+6, r19	; 0x06
    2154:	4f 83       	std	Y+7, r20	; 0x07
    2156:	58 87       	std	Y+8, r21	; 0x08
    2158:	b9 e0       	ldi	r27, 0x09	; 9
    215a:	eb 2e       	mov	r14, r27
    215c:	f1 2c       	mov	r15, r1
    215e:	ec 0e       	add	r14, r28
    2160:	fd 1e       	adc	r15, r29
    2162:	ce 01       	movw	r24, r28
    2164:	01 96       	adiw	r24, 0x01	; 1
    2166:	b7 01       	movw	r22, r14
    2168:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    216c:	8e 01       	movw	r16, r28
    216e:	0f 5e       	subi	r16, 0xEF	; 239
    2170:	1f 4f       	sbci	r17, 0xFF	; 255
    2172:	ce 01       	movw	r24, r28
    2174:	05 96       	adiw	r24, 0x05	; 5
    2176:	b8 01       	movw	r22, r16
    2178:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    217c:	29 85       	ldd	r18, Y+9	; 0x09
    217e:	22 30       	cpi	r18, 0x02	; 2
    2180:	08 f4       	brcc	.+2      	; 0x2184 <__divsf3+0x48>
    2182:	7e c0       	rjmp	.+252    	; 0x2280 <__divsf3+0x144>
    2184:	39 89       	ldd	r19, Y+17	; 0x11
    2186:	32 30       	cpi	r19, 0x02	; 2
    2188:	10 f4       	brcc	.+4      	; 0x218e <__divsf3+0x52>
    218a:	b8 01       	movw	r22, r16
    218c:	7c c0       	rjmp	.+248    	; 0x2286 <__divsf3+0x14a>
    218e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2190:	9a 89       	ldd	r25, Y+18	; 0x12
    2192:	89 27       	eor	r24, r25
    2194:	8a 87       	std	Y+10, r24	; 0x0a
    2196:	24 30       	cpi	r18, 0x04	; 4
    2198:	11 f0       	breq	.+4      	; 0x219e <__divsf3+0x62>
    219a:	22 30       	cpi	r18, 0x02	; 2
    219c:	31 f4       	brne	.+12     	; 0x21aa <__divsf3+0x6e>
    219e:	23 17       	cp	r18, r19
    21a0:	09 f0       	breq	.+2      	; 0x21a4 <__divsf3+0x68>
    21a2:	6e c0       	rjmp	.+220    	; 0x2280 <__divsf3+0x144>
    21a4:	6b e6       	ldi	r22, 0x6B	; 107
    21a6:	70 e0       	ldi	r23, 0x00	; 0
    21a8:	6e c0       	rjmp	.+220    	; 0x2286 <__divsf3+0x14a>
    21aa:	34 30       	cpi	r19, 0x04	; 4
    21ac:	39 f4       	brne	.+14     	; 0x21bc <__divsf3+0x80>
    21ae:	1d 86       	std	Y+13, r1	; 0x0d
    21b0:	1e 86       	std	Y+14, r1	; 0x0e
    21b2:	1f 86       	std	Y+15, r1	; 0x0f
    21b4:	18 8a       	std	Y+16, r1	; 0x10
    21b6:	1c 86       	std	Y+12, r1	; 0x0c
    21b8:	1b 86       	std	Y+11, r1	; 0x0b
    21ba:	04 c0       	rjmp	.+8      	; 0x21c4 <__divsf3+0x88>
    21bc:	32 30       	cpi	r19, 0x02	; 2
    21be:	21 f4       	brne	.+8      	; 0x21c8 <__divsf3+0x8c>
    21c0:	84 e0       	ldi	r24, 0x04	; 4
    21c2:	89 87       	std	Y+9, r24	; 0x09
    21c4:	b7 01       	movw	r22, r14
    21c6:	5f c0       	rjmp	.+190    	; 0x2286 <__divsf3+0x14a>
    21c8:	2b 85       	ldd	r18, Y+11	; 0x0b
    21ca:	3c 85       	ldd	r19, Y+12	; 0x0c
    21cc:	8b 89       	ldd	r24, Y+19	; 0x13
    21ce:	9c 89       	ldd	r25, Y+20	; 0x14
    21d0:	28 1b       	sub	r18, r24
    21d2:	39 0b       	sbc	r19, r25
    21d4:	3c 87       	std	Y+12, r19	; 0x0c
    21d6:	2b 87       	std	Y+11, r18	; 0x0b
    21d8:	ed 84       	ldd	r14, Y+13	; 0x0d
    21da:	fe 84       	ldd	r15, Y+14	; 0x0e
    21dc:	0f 85       	ldd	r16, Y+15	; 0x0f
    21de:	18 89       	ldd	r17, Y+16	; 0x10
    21e0:	ad 88       	ldd	r10, Y+21	; 0x15
    21e2:	be 88       	ldd	r11, Y+22	; 0x16
    21e4:	cf 88       	ldd	r12, Y+23	; 0x17
    21e6:	d8 8c       	ldd	r13, Y+24	; 0x18
    21e8:	ea 14       	cp	r14, r10
    21ea:	fb 04       	cpc	r15, r11
    21ec:	0c 05       	cpc	r16, r12
    21ee:	1d 05       	cpc	r17, r13
    21f0:	40 f4       	brcc	.+16     	; 0x2202 <__divsf3+0xc6>
    21f2:	ee 0c       	add	r14, r14
    21f4:	ff 1c       	adc	r15, r15
    21f6:	00 1f       	adc	r16, r16
    21f8:	11 1f       	adc	r17, r17
    21fa:	21 50       	subi	r18, 0x01	; 1
    21fc:	30 40       	sbci	r19, 0x00	; 0
    21fe:	3c 87       	std	Y+12, r19	; 0x0c
    2200:	2b 87       	std	Y+11, r18	; 0x0b
    2202:	20 e0       	ldi	r18, 0x00	; 0
    2204:	30 e0       	ldi	r19, 0x00	; 0
    2206:	40 e0       	ldi	r20, 0x00	; 0
    2208:	50 e0       	ldi	r21, 0x00	; 0
    220a:	80 e0       	ldi	r24, 0x00	; 0
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	a0 e0       	ldi	r26, 0x00	; 0
    2210:	b0 e4       	ldi	r27, 0x40	; 64
    2212:	60 e0       	ldi	r22, 0x00	; 0
    2214:	70 e0       	ldi	r23, 0x00	; 0
    2216:	ea 14       	cp	r14, r10
    2218:	fb 04       	cpc	r15, r11
    221a:	0c 05       	cpc	r16, r12
    221c:	1d 05       	cpc	r17, r13
    221e:	40 f0       	brcs	.+16     	; 0x2230 <__divsf3+0xf4>
    2220:	28 2b       	or	r18, r24
    2222:	39 2b       	or	r19, r25
    2224:	4a 2b       	or	r20, r26
    2226:	5b 2b       	or	r21, r27
    2228:	ea 18       	sub	r14, r10
    222a:	fb 08       	sbc	r15, r11
    222c:	0c 09       	sbc	r16, r12
    222e:	1d 09       	sbc	r17, r13
    2230:	b6 95       	lsr	r27
    2232:	a7 95       	ror	r26
    2234:	97 95       	ror	r25
    2236:	87 95       	ror	r24
    2238:	ee 0c       	add	r14, r14
    223a:	ff 1c       	adc	r15, r15
    223c:	00 1f       	adc	r16, r16
    223e:	11 1f       	adc	r17, r17
    2240:	6f 5f       	subi	r22, 0xFF	; 255
    2242:	7f 4f       	sbci	r23, 0xFF	; 255
    2244:	6f 31       	cpi	r22, 0x1F	; 31
    2246:	71 05       	cpc	r23, r1
    2248:	31 f7       	brne	.-52     	; 0x2216 <__divsf3+0xda>
    224a:	da 01       	movw	r26, r20
    224c:	c9 01       	movw	r24, r18
    224e:	8f 77       	andi	r24, 0x7F	; 127
    2250:	90 70       	andi	r25, 0x00	; 0
    2252:	a0 70       	andi	r26, 0x00	; 0
    2254:	b0 70       	andi	r27, 0x00	; 0
    2256:	80 34       	cpi	r24, 0x40	; 64
    2258:	91 05       	cpc	r25, r1
    225a:	a1 05       	cpc	r26, r1
    225c:	b1 05       	cpc	r27, r1
    225e:	61 f4       	brne	.+24     	; 0x2278 <__divsf3+0x13c>
    2260:	27 fd       	sbrc	r18, 7
    2262:	0a c0       	rjmp	.+20     	; 0x2278 <__divsf3+0x13c>
    2264:	e1 14       	cp	r14, r1
    2266:	f1 04       	cpc	r15, r1
    2268:	01 05       	cpc	r16, r1
    226a:	11 05       	cpc	r17, r1
    226c:	29 f0       	breq	.+10     	; 0x2278 <__divsf3+0x13c>
    226e:	20 5c       	subi	r18, 0xC0	; 192
    2270:	3f 4f       	sbci	r19, 0xFF	; 255
    2272:	4f 4f       	sbci	r20, 0xFF	; 255
    2274:	5f 4f       	sbci	r21, 0xFF	; 255
    2276:	20 78       	andi	r18, 0x80	; 128
    2278:	2d 87       	std	Y+13, r18	; 0x0d
    227a:	3e 87       	std	Y+14, r19	; 0x0e
    227c:	4f 87       	std	Y+15, r20	; 0x0f
    227e:	58 8b       	std	Y+16, r21	; 0x10
    2280:	be 01       	movw	r22, r28
    2282:	67 5f       	subi	r22, 0xF7	; 247
    2284:	7f 4f       	sbci	r23, 0xFF	; 255
    2286:	cb 01       	movw	r24, r22
    2288:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__pack_f>
    228c:	68 96       	adiw	r28, 0x18	; 24
    228e:	ea e0       	ldi	r30, 0x0A	; 10
    2290:	0c 94 e0 28 	jmp	0x51c0	; 0x51c0 <__epilogue_restores__+0x10>

00002294 <__gtsf2>:
    2294:	a8 e1       	ldi	r26, 0x18	; 24
    2296:	b0 e0       	ldi	r27, 0x00	; 0
    2298:	e0 e5       	ldi	r30, 0x50	; 80
    229a:	f1 e1       	ldi	r31, 0x11	; 17
    229c:	0c 94 c8 28 	jmp	0x5190	; 0x5190 <__prologue_saves__+0x18>
    22a0:	69 83       	std	Y+1, r22	; 0x01
    22a2:	7a 83       	std	Y+2, r23	; 0x02
    22a4:	8b 83       	std	Y+3, r24	; 0x03
    22a6:	9c 83       	std	Y+4, r25	; 0x04
    22a8:	2d 83       	std	Y+5, r18	; 0x05
    22aa:	3e 83       	std	Y+6, r19	; 0x06
    22ac:	4f 83       	std	Y+7, r20	; 0x07
    22ae:	58 87       	std	Y+8, r21	; 0x08
    22b0:	89 e0       	ldi	r24, 0x09	; 9
    22b2:	e8 2e       	mov	r14, r24
    22b4:	f1 2c       	mov	r15, r1
    22b6:	ec 0e       	add	r14, r28
    22b8:	fd 1e       	adc	r15, r29
    22ba:	ce 01       	movw	r24, r28
    22bc:	01 96       	adiw	r24, 0x01	; 1
    22be:	b7 01       	movw	r22, r14
    22c0:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    22c4:	8e 01       	movw	r16, r28
    22c6:	0f 5e       	subi	r16, 0xEF	; 239
    22c8:	1f 4f       	sbci	r17, 0xFF	; 255
    22ca:	ce 01       	movw	r24, r28
    22cc:	05 96       	adiw	r24, 0x05	; 5
    22ce:	b8 01       	movw	r22, r16
    22d0:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    22d4:	89 85       	ldd	r24, Y+9	; 0x09
    22d6:	82 30       	cpi	r24, 0x02	; 2
    22d8:	40 f0       	brcs	.+16     	; 0x22ea <__gtsf2+0x56>
    22da:	89 89       	ldd	r24, Y+17	; 0x11
    22dc:	82 30       	cpi	r24, 0x02	; 2
    22de:	28 f0       	brcs	.+10     	; 0x22ea <__gtsf2+0x56>
    22e0:	c7 01       	movw	r24, r14
    22e2:	b8 01       	movw	r22, r16
    22e4:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fpcmp_parts_f>
    22e8:	01 c0       	rjmp	.+2      	; 0x22ec <__gtsf2+0x58>
    22ea:	8f ef       	ldi	r24, 0xFF	; 255
    22ec:	68 96       	adiw	r28, 0x18	; 24
    22ee:	e6 e0       	ldi	r30, 0x06	; 6
    22f0:	0c 94 e4 28 	jmp	0x51c8	; 0x51c8 <__epilogue_restores__+0x18>

000022f4 <__gesf2>:
    22f4:	a8 e1       	ldi	r26, 0x18	; 24
    22f6:	b0 e0       	ldi	r27, 0x00	; 0
    22f8:	e0 e8       	ldi	r30, 0x80	; 128
    22fa:	f1 e1       	ldi	r31, 0x11	; 17
    22fc:	0c 94 c8 28 	jmp	0x5190	; 0x5190 <__prologue_saves__+0x18>
    2300:	69 83       	std	Y+1, r22	; 0x01
    2302:	7a 83       	std	Y+2, r23	; 0x02
    2304:	8b 83       	std	Y+3, r24	; 0x03
    2306:	9c 83       	std	Y+4, r25	; 0x04
    2308:	2d 83       	std	Y+5, r18	; 0x05
    230a:	3e 83       	std	Y+6, r19	; 0x06
    230c:	4f 83       	std	Y+7, r20	; 0x07
    230e:	58 87       	std	Y+8, r21	; 0x08
    2310:	89 e0       	ldi	r24, 0x09	; 9
    2312:	e8 2e       	mov	r14, r24
    2314:	f1 2c       	mov	r15, r1
    2316:	ec 0e       	add	r14, r28
    2318:	fd 1e       	adc	r15, r29
    231a:	ce 01       	movw	r24, r28
    231c:	01 96       	adiw	r24, 0x01	; 1
    231e:	b7 01       	movw	r22, r14
    2320:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    2324:	8e 01       	movw	r16, r28
    2326:	0f 5e       	subi	r16, 0xEF	; 239
    2328:	1f 4f       	sbci	r17, 0xFF	; 255
    232a:	ce 01       	movw	r24, r28
    232c:	05 96       	adiw	r24, 0x05	; 5
    232e:	b8 01       	movw	r22, r16
    2330:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    2334:	89 85       	ldd	r24, Y+9	; 0x09
    2336:	82 30       	cpi	r24, 0x02	; 2
    2338:	40 f0       	brcs	.+16     	; 0x234a <__gesf2+0x56>
    233a:	89 89       	ldd	r24, Y+17	; 0x11
    233c:	82 30       	cpi	r24, 0x02	; 2
    233e:	28 f0       	brcs	.+10     	; 0x234a <__gesf2+0x56>
    2340:	c7 01       	movw	r24, r14
    2342:	b8 01       	movw	r22, r16
    2344:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fpcmp_parts_f>
    2348:	01 c0       	rjmp	.+2      	; 0x234c <__gesf2+0x58>
    234a:	8f ef       	ldi	r24, 0xFF	; 255
    234c:	68 96       	adiw	r28, 0x18	; 24
    234e:	e6 e0       	ldi	r30, 0x06	; 6
    2350:	0c 94 e4 28 	jmp	0x51c8	; 0x51c8 <__epilogue_restores__+0x18>

00002354 <__ltsf2>:
    2354:	a8 e1       	ldi	r26, 0x18	; 24
    2356:	b0 e0       	ldi	r27, 0x00	; 0
    2358:	e0 eb       	ldi	r30, 0xB0	; 176
    235a:	f1 e1       	ldi	r31, 0x11	; 17
    235c:	0c 94 c8 28 	jmp	0x5190	; 0x5190 <__prologue_saves__+0x18>
    2360:	69 83       	std	Y+1, r22	; 0x01
    2362:	7a 83       	std	Y+2, r23	; 0x02
    2364:	8b 83       	std	Y+3, r24	; 0x03
    2366:	9c 83       	std	Y+4, r25	; 0x04
    2368:	2d 83       	std	Y+5, r18	; 0x05
    236a:	3e 83       	std	Y+6, r19	; 0x06
    236c:	4f 83       	std	Y+7, r20	; 0x07
    236e:	58 87       	std	Y+8, r21	; 0x08
    2370:	89 e0       	ldi	r24, 0x09	; 9
    2372:	e8 2e       	mov	r14, r24
    2374:	f1 2c       	mov	r15, r1
    2376:	ec 0e       	add	r14, r28
    2378:	fd 1e       	adc	r15, r29
    237a:	ce 01       	movw	r24, r28
    237c:	01 96       	adiw	r24, 0x01	; 1
    237e:	b7 01       	movw	r22, r14
    2380:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    2384:	8e 01       	movw	r16, r28
    2386:	0f 5e       	subi	r16, 0xEF	; 239
    2388:	1f 4f       	sbci	r17, 0xFF	; 255
    238a:	ce 01       	movw	r24, r28
    238c:	05 96       	adiw	r24, 0x05	; 5
    238e:	b8 01       	movw	r22, r16
    2390:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    2394:	89 85       	ldd	r24, Y+9	; 0x09
    2396:	82 30       	cpi	r24, 0x02	; 2
    2398:	40 f0       	brcs	.+16     	; 0x23aa <__ltsf2+0x56>
    239a:	89 89       	ldd	r24, Y+17	; 0x11
    239c:	82 30       	cpi	r24, 0x02	; 2
    239e:	28 f0       	brcs	.+10     	; 0x23aa <__ltsf2+0x56>
    23a0:	c7 01       	movw	r24, r14
    23a2:	b8 01       	movw	r22, r16
    23a4:	0e 94 20 15 	call	0x2a40	; 0x2a40 <__fpcmp_parts_f>
    23a8:	01 c0       	rjmp	.+2      	; 0x23ac <__ltsf2+0x58>
    23aa:	81 e0       	ldi	r24, 0x01	; 1
    23ac:	68 96       	adiw	r28, 0x18	; 24
    23ae:	e6 e0       	ldi	r30, 0x06	; 6
    23b0:	0c 94 e4 28 	jmp	0x51c8	; 0x51c8 <__epilogue_restores__+0x18>

000023b4 <__floatsisf>:
    23b4:	a8 e0       	ldi	r26, 0x08	; 8
    23b6:	b0 e0       	ldi	r27, 0x00	; 0
    23b8:	e0 ee       	ldi	r30, 0xE0	; 224
    23ba:	f1 e1       	ldi	r31, 0x11	; 17
    23bc:	0c 94 c5 28 	jmp	0x518a	; 0x518a <__prologue_saves__+0x12>
    23c0:	9b 01       	movw	r18, r22
    23c2:	ac 01       	movw	r20, r24
    23c4:	83 e0       	ldi	r24, 0x03	; 3
    23c6:	89 83       	std	Y+1, r24	; 0x01
    23c8:	da 01       	movw	r26, r20
    23ca:	c9 01       	movw	r24, r18
    23cc:	88 27       	eor	r24, r24
    23ce:	b7 fd       	sbrc	r27, 7
    23d0:	83 95       	inc	r24
    23d2:	99 27       	eor	r25, r25
    23d4:	aa 27       	eor	r26, r26
    23d6:	bb 27       	eor	r27, r27
    23d8:	b8 2e       	mov	r11, r24
    23da:	21 15       	cp	r18, r1
    23dc:	31 05       	cpc	r19, r1
    23de:	41 05       	cpc	r20, r1
    23e0:	51 05       	cpc	r21, r1
    23e2:	19 f4       	brne	.+6      	; 0x23ea <__floatsisf+0x36>
    23e4:	82 e0       	ldi	r24, 0x02	; 2
    23e6:	89 83       	std	Y+1, r24	; 0x01
    23e8:	3a c0       	rjmp	.+116    	; 0x245e <__floatsisf+0xaa>
    23ea:	88 23       	and	r24, r24
    23ec:	a9 f0       	breq	.+42     	; 0x2418 <__floatsisf+0x64>
    23ee:	20 30       	cpi	r18, 0x00	; 0
    23f0:	80 e0       	ldi	r24, 0x00	; 0
    23f2:	38 07       	cpc	r19, r24
    23f4:	80 e0       	ldi	r24, 0x00	; 0
    23f6:	48 07       	cpc	r20, r24
    23f8:	80 e8       	ldi	r24, 0x80	; 128
    23fa:	58 07       	cpc	r21, r24
    23fc:	29 f4       	brne	.+10     	; 0x2408 <__floatsisf+0x54>
    23fe:	60 e0       	ldi	r22, 0x00	; 0
    2400:	70 e0       	ldi	r23, 0x00	; 0
    2402:	80 e0       	ldi	r24, 0x00	; 0
    2404:	9f ec       	ldi	r25, 0xCF	; 207
    2406:	30 c0       	rjmp	.+96     	; 0x2468 <__floatsisf+0xb4>
    2408:	ee 24       	eor	r14, r14
    240a:	ff 24       	eor	r15, r15
    240c:	87 01       	movw	r16, r14
    240e:	e2 1a       	sub	r14, r18
    2410:	f3 0a       	sbc	r15, r19
    2412:	04 0b       	sbc	r16, r20
    2414:	15 0b       	sbc	r17, r21
    2416:	02 c0       	rjmp	.+4      	; 0x241c <__floatsisf+0x68>
    2418:	79 01       	movw	r14, r18
    241a:	8a 01       	movw	r16, r20
    241c:	8e e1       	ldi	r24, 0x1E	; 30
    241e:	c8 2e       	mov	r12, r24
    2420:	d1 2c       	mov	r13, r1
    2422:	dc 82       	std	Y+4, r13	; 0x04
    2424:	cb 82       	std	Y+3, r12	; 0x03
    2426:	ed 82       	std	Y+5, r14	; 0x05
    2428:	fe 82       	std	Y+6, r15	; 0x06
    242a:	0f 83       	std	Y+7, r16	; 0x07
    242c:	18 87       	std	Y+8, r17	; 0x08
    242e:	c8 01       	movw	r24, r16
    2430:	b7 01       	movw	r22, r14
    2432:	0e 94 84 13 	call	0x2708	; 0x2708 <__clzsi2>
    2436:	01 97       	sbiw	r24, 0x01	; 1
    2438:	18 16       	cp	r1, r24
    243a:	19 06       	cpc	r1, r25
    243c:	84 f4       	brge	.+32     	; 0x245e <__floatsisf+0xaa>
    243e:	08 2e       	mov	r0, r24
    2440:	04 c0       	rjmp	.+8      	; 0x244a <__floatsisf+0x96>
    2442:	ee 0c       	add	r14, r14
    2444:	ff 1c       	adc	r15, r15
    2446:	00 1f       	adc	r16, r16
    2448:	11 1f       	adc	r17, r17
    244a:	0a 94       	dec	r0
    244c:	d2 f7       	brpl	.-12     	; 0x2442 <__floatsisf+0x8e>
    244e:	ed 82       	std	Y+5, r14	; 0x05
    2450:	fe 82       	std	Y+6, r15	; 0x06
    2452:	0f 83       	std	Y+7, r16	; 0x07
    2454:	18 87       	std	Y+8, r17	; 0x08
    2456:	c8 1a       	sub	r12, r24
    2458:	d9 0a       	sbc	r13, r25
    245a:	dc 82       	std	Y+4, r13	; 0x04
    245c:	cb 82       	std	Y+3, r12	; 0x03
    245e:	ba 82       	std	Y+2, r11	; 0x02
    2460:	ce 01       	movw	r24, r28
    2462:	01 96       	adiw	r24, 0x01	; 1
    2464:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__pack_f>
    2468:	28 96       	adiw	r28, 0x08	; 8
    246a:	e9 e0       	ldi	r30, 0x09	; 9
    246c:	0c 94 e1 28 	jmp	0x51c2	; 0x51c2 <__epilogue_restores__+0x12>

00002470 <__fixsfsi>:
    2470:	ac e0       	ldi	r26, 0x0C	; 12
    2472:	b0 e0       	ldi	r27, 0x00	; 0
    2474:	ee e3       	ldi	r30, 0x3E	; 62
    2476:	f2 e1       	ldi	r31, 0x12	; 18
    2478:	0c 94 cc 28 	jmp	0x5198	; 0x5198 <__prologue_saves__+0x20>
    247c:	69 83       	std	Y+1, r22	; 0x01
    247e:	7a 83       	std	Y+2, r23	; 0x02
    2480:	8b 83       	std	Y+3, r24	; 0x03
    2482:	9c 83       	std	Y+4, r25	; 0x04
    2484:	ce 01       	movw	r24, r28
    2486:	01 96       	adiw	r24, 0x01	; 1
    2488:	be 01       	movw	r22, r28
    248a:	6b 5f       	subi	r22, 0xFB	; 251
    248c:	7f 4f       	sbci	r23, 0xFF	; 255
    248e:	0e 94 a8 14 	call	0x2950	; 0x2950 <__unpack_f>
    2492:	8d 81       	ldd	r24, Y+5	; 0x05
    2494:	82 30       	cpi	r24, 0x02	; 2
    2496:	61 f1       	breq	.+88     	; 0x24f0 <__fixsfsi+0x80>
    2498:	82 30       	cpi	r24, 0x02	; 2
    249a:	50 f1       	brcs	.+84     	; 0x24f0 <__fixsfsi+0x80>
    249c:	84 30       	cpi	r24, 0x04	; 4
    249e:	21 f4       	brne	.+8      	; 0x24a8 <__fixsfsi+0x38>
    24a0:	8e 81       	ldd	r24, Y+6	; 0x06
    24a2:	88 23       	and	r24, r24
    24a4:	51 f1       	breq	.+84     	; 0x24fa <__fixsfsi+0x8a>
    24a6:	2e c0       	rjmp	.+92     	; 0x2504 <__fixsfsi+0x94>
    24a8:	2f 81       	ldd	r18, Y+7	; 0x07
    24aa:	38 85       	ldd	r19, Y+8	; 0x08
    24ac:	37 fd       	sbrc	r19, 7
    24ae:	20 c0       	rjmp	.+64     	; 0x24f0 <__fixsfsi+0x80>
    24b0:	6e 81       	ldd	r22, Y+6	; 0x06
    24b2:	2f 31       	cpi	r18, 0x1F	; 31
    24b4:	31 05       	cpc	r19, r1
    24b6:	1c f0       	brlt	.+6      	; 0x24be <__fixsfsi+0x4e>
    24b8:	66 23       	and	r22, r22
    24ba:	f9 f0       	breq	.+62     	; 0x24fa <__fixsfsi+0x8a>
    24bc:	23 c0       	rjmp	.+70     	; 0x2504 <__fixsfsi+0x94>
    24be:	8e e1       	ldi	r24, 0x1E	; 30
    24c0:	90 e0       	ldi	r25, 0x00	; 0
    24c2:	82 1b       	sub	r24, r18
    24c4:	93 0b       	sbc	r25, r19
    24c6:	29 85       	ldd	r18, Y+9	; 0x09
    24c8:	3a 85       	ldd	r19, Y+10	; 0x0a
    24ca:	4b 85       	ldd	r20, Y+11	; 0x0b
    24cc:	5c 85       	ldd	r21, Y+12	; 0x0c
    24ce:	04 c0       	rjmp	.+8      	; 0x24d8 <__fixsfsi+0x68>
    24d0:	56 95       	lsr	r21
    24d2:	47 95       	ror	r20
    24d4:	37 95       	ror	r19
    24d6:	27 95       	ror	r18
    24d8:	8a 95       	dec	r24
    24da:	d2 f7       	brpl	.-12     	; 0x24d0 <__fixsfsi+0x60>
    24dc:	66 23       	and	r22, r22
    24de:	b1 f0       	breq	.+44     	; 0x250c <__fixsfsi+0x9c>
    24e0:	50 95       	com	r21
    24e2:	40 95       	com	r20
    24e4:	30 95       	com	r19
    24e6:	21 95       	neg	r18
    24e8:	3f 4f       	sbci	r19, 0xFF	; 255
    24ea:	4f 4f       	sbci	r20, 0xFF	; 255
    24ec:	5f 4f       	sbci	r21, 0xFF	; 255
    24ee:	0e c0       	rjmp	.+28     	; 0x250c <__fixsfsi+0x9c>
    24f0:	20 e0       	ldi	r18, 0x00	; 0
    24f2:	30 e0       	ldi	r19, 0x00	; 0
    24f4:	40 e0       	ldi	r20, 0x00	; 0
    24f6:	50 e0       	ldi	r21, 0x00	; 0
    24f8:	09 c0       	rjmp	.+18     	; 0x250c <__fixsfsi+0x9c>
    24fa:	2f ef       	ldi	r18, 0xFF	; 255
    24fc:	3f ef       	ldi	r19, 0xFF	; 255
    24fe:	4f ef       	ldi	r20, 0xFF	; 255
    2500:	5f e7       	ldi	r21, 0x7F	; 127
    2502:	04 c0       	rjmp	.+8      	; 0x250c <__fixsfsi+0x9c>
    2504:	20 e0       	ldi	r18, 0x00	; 0
    2506:	30 e0       	ldi	r19, 0x00	; 0
    2508:	40 e0       	ldi	r20, 0x00	; 0
    250a:	50 e8       	ldi	r21, 0x80	; 128
    250c:	b9 01       	movw	r22, r18
    250e:	ca 01       	movw	r24, r20
    2510:	2c 96       	adiw	r28, 0x0c	; 12
    2512:	e2 e0       	ldi	r30, 0x02	; 2
    2514:	0c 94 e8 28 	jmp	0x51d0	; 0x51d0 <__epilogue_restores__+0x20>

00002518 <__floatunsisf>:
    2518:	a8 e0       	ldi	r26, 0x08	; 8
    251a:	b0 e0       	ldi	r27, 0x00	; 0
    251c:	e2 e9       	ldi	r30, 0x92	; 146
    251e:	f2 e1       	ldi	r31, 0x12	; 18
    2520:	0c 94 c4 28 	jmp	0x5188	; 0x5188 <__prologue_saves__+0x10>
    2524:	7b 01       	movw	r14, r22
    2526:	8c 01       	movw	r16, r24
    2528:	61 15       	cp	r22, r1
    252a:	71 05       	cpc	r23, r1
    252c:	81 05       	cpc	r24, r1
    252e:	91 05       	cpc	r25, r1
    2530:	19 f4       	brne	.+6      	; 0x2538 <__floatunsisf+0x20>
    2532:	82 e0       	ldi	r24, 0x02	; 2
    2534:	89 83       	std	Y+1, r24	; 0x01
    2536:	60 c0       	rjmp	.+192    	; 0x25f8 <__floatunsisf+0xe0>
    2538:	83 e0       	ldi	r24, 0x03	; 3
    253a:	89 83       	std	Y+1, r24	; 0x01
    253c:	8e e1       	ldi	r24, 0x1E	; 30
    253e:	c8 2e       	mov	r12, r24
    2540:	d1 2c       	mov	r13, r1
    2542:	dc 82       	std	Y+4, r13	; 0x04
    2544:	cb 82       	std	Y+3, r12	; 0x03
    2546:	ed 82       	std	Y+5, r14	; 0x05
    2548:	fe 82       	std	Y+6, r15	; 0x06
    254a:	0f 83       	std	Y+7, r16	; 0x07
    254c:	18 87       	std	Y+8, r17	; 0x08
    254e:	c8 01       	movw	r24, r16
    2550:	b7 01       	movw	r22, r14
    2552:	0e 94 84 13 	call	0x2708	; 0x2708 <__clzsi2>
    2556:	fc 01       	movw	r30, r24
    2558:	31 97       	sbiw	r30, 0x01	; 1
    255a:	f7 ff       	sbrs	r31, 7
    255c:	3b c0       	rjmp	.+118    	; 0x25d4 <__floatunsisf+0xbc>
    255e:	22 27       	eor	r18, r18
    2560:	33 27       	eor	r19, r19
    2562:	2e 1b       	sub	r18, r30
    2564:	3f 0b       	sbc	r19, r31
    2566:	57 01       	movw	r10, r14
    2568:	68 01       	movw	r12, r16
    256a:	02 2e       	mov	r0, r18
    256c:	04 c0       	rjmp	.+8      	; 0x2576 <__floatunsisf+0x5e>
    256e:	d6 94       	lsr	r13
    2570:	c7 94       	ror	r12
    2572:	b7 94       	ror	r11
    2574:	a7 94       	ror	r10
    2576:	0a 94       	dec	r0
    2578:	d2 f7       	brpl	.-12     	; 0x256e <__floatunsisf+0x56>
    257a:	40 e0       	ldi	r20, 0x00	; 0
    257c:	50 e0       	ldi	r21, 0x00	; 0
    257e:	60 e0       	ldi	r22, 0x00	; 0
    2580:	70 e0       	ldi	r23, 0x00	; 0
    2582:	81 e0       	ldi	r24, 0x01	; 1
    2584:	90 e0       	ldi	r25, 0x00	; 0
    2586:	a0 e0       	ldi	r26, 0x00	; 0
    2588:	b0 e0       	ldi	r27, 0x00	; 0
    258a:	04 c0       	rjmp	.+8      	; 0x2594 <__floatunsisf+0x7c>
    258c:	88 0f       	add	r24, r24
    258e:	99 1f       	adc	r25, r25
    2590:	aa 1f       	adc	r26, r26
    2592:	bb 1f       	adc	r27, r27
    2594:	2a 95       	dec	r18
    2596:	d2 f7       	brpl	.-12     	; 0x258c <__floatunsisf+0x74>
    2598:	01 97       	sbiw	r24, 0x01	; 1
    259a:	a1 09       	sbc	r26, r1
    259c:	b1 09       	sbc	r27, r1
    259e:	8e 21       	and	r24, r14
    25a0:	9f 21       	and	r25, r15
    25a2:	a0 23       	and	r26, r16
    25a4:	b1 23       	and	r27, r17
    25a6:	00 97       	sbiw	r24, 0x00	; 0
    25a8:	a1 05       	cpc	r26, r1
    25aa:	b1 05       	cpc	r27, r1
    25ac:	21 f0       	breq	.+8      	; 0x25b6 <__floatunsisf+0x9e>
    25ae:	41 e0       	ldi	r20, 0x01	; 1
    25b0:	50 e0       	ldi	r21, 0x00	; 0
    25b2:	60 e0       	ldi	r22, 0x00	; 0
    25b4:	70 e0       	ldi	r23, 0x00	; 0
    25b6:	4a 29       	or	r20, r10
    25b8:	5b 29       	or	r21, r11
    25ba:	6c 29       	or	r22, r12
    25bc:	7d 29       	or	r23, r13
    25be:	4d 83       	std	Y+5, r20	; 0x05
    25c0:	5e 83       	std	Y+6, r21	; 0x06
    25c2:	6f 83       	std	Y+7, r22	; 0x07
    25c4:	78 87       	std	Y+8, r23	; 0x08
    25c6:	8e e1       	ldi	r24, 0x1E	; 30
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	8e 1b       	sub	r24, r30
    25cc:	9f 0b       	sbc	r25, r31
    25ce:	9c 83       	std	Y+4, r25	; 0x04
    25d0:	8b 83       	std	Y+3, r24	; 0x03
    25d2:	12 c0       	rjmp	.+36     	; 0x25f8 <__floatunsisf+0xe0>
    25d4:	30 97       	sbiw	r30, 0x00	; 0
    25d6:	81 f0       	breq	.+32     	; 0x25f8 <__floatunsisf+0xe0>
    25d8:	0e 2e       	mov	r0, r30
    25da:	04 c0       	rjmp	.+8      	; 0x25e4 <__floatunsisf+0xcc>
    25dc:	ee 0c       	add	r14, r14
    25de:	ff 1c       	adc	r15, r15
    25e0:	00 1f       	adc	r16, r16
    25e2:	11 1f       	adc	r17, r17
    25e4:	0a 94       	dec	r0
    25e6:	d2 f7       	brpl	.-12     	; 0x25dc <__floatunsisf+0xc4>
    25e8:	ed 82       	std	Y+5, r14	; 0x05
    25ea:	fe 82       	std	Y+6, r15	; 0x06
    25ec:	0f 83       	std	Y+7, r16	; 0x07
    25ee:	18 87       	std	Y+8, r17	; 0x08
    25f0:	ce 1a       	sub	r12, r30
    25f2:	df 0a       	sbc	r13, r31
    25f4:	dc 82       	std	Y+4, r13	; 0x04
    25f6:	cb 82       	std	Y+3, r12	; 0x03
    25f8:	1a 82       	std	Y+2, r1	; 0x02
    25fa:	ce 01       	movw	r24, r28
    25fc:	01 96       	adiw	r24, 0x01	; 1
    25fe:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <__pack_f>
    2602:	28 96       	adiw	r28, 0x08	; 8
    2604:	ea e0       	ldi	r30, 0x0A	; 10
    2606:	0c 94 e0 28 	jmp	0x51c0	; 0x51c0 <__epilogue_restores__+0x10>

0000260a <__ashldi3>:
    260a:	ef 92       	push	r14
    260c:	ff 92       	push	r15
    260e:	0f 93       	push	r16
    2610:	df 93       	push	r29
    2612:	cf 93       	push	r28
    2614:	cd b7       	in	r28, 0x3d	; 61
    2616:	de b7       	in	r29, 0x3e	; 62
    2618:	60 97       	sbiw	r28, 0x10	; 16
    261a:	0f b6       	in	r0, 0x3f	; 63
    261c:	f8 94       	cli
    261e:	de bf       	out	0x3e, r29	; 62
    2620:	0f be       	out	0x3f, r0	; 63
    2622:	cd bf       	out	0x3d, r28	; 61
    2624:	a8 2f       	mov	r26, r24
    2626:	00 23       	and	r16, r16
    2628:	09 f4       	brne	.+2      	; 0x262c <__ashldi3+0x22>
    262a:	61 c0       	rjmp	.+194    	; 0x26ee <__ashldi3+0xe4>
    262c:	7e 01       	movw	r14, r28
    262e:	08 94       	sec
    2630:	e1 1c       	adc	r14, r1
    2632:	f1 1c       	adc	r15, r1
    2634:	88 e0       	ldi	r24, 0x08	; 8
    2636:	f7 01       	movw	r30, r14
    2638:	11 92       	st	Z+, r1
    263a:	8a 95       	dec	r24
    263c:	e9 f7       	brne	.-6      	; 0x2638 <__ashldi3+0x2e>
    263e:	29 83       	std	Y+1, r18	; 0x01
    2640:	3a 83       	std	Y+2, r19	; 0x02
    2642:	4b 83       	std	Y+3, r20	; 0x03
    2644:	5c 83       	std	Y+4, r21	; 0x04
    2646:	6d 83       	std	Y+5, r22	; 0x05
    2648:	7e 83       	std	Y+6, r23	; 0x06
    264a:	af 83       	std	Y+7, r26	; 0x07
    264c:	98 87       	std	Y+8, r25	; 0x08
    264e:	80 e2       	ldi	r24, 0x20	; 32
    2650:	80 1b       	sub	r24, r16
    2652:	e8 2f       	mov	r30, r24
    2654:	ff 27       	eor	r31, r31
    2656:	e7 fd       	sbrc	r30, 7
    2658:	f0 95       	com	r31
    265a:	49 81       	ldd	r20, Y+1	; 0x01
    265c:	5a 81       	ldd	r21, Y+2	; 0x02
    265e:	6b 81       	ldd	r22, Y+3	; 0x03
    2660:	7c 81       	ldd	r23, Y+4	; 0x04
    2662:	18 16       	cp	r1, r24
    2664:	84 f0       	brlt	.+32     	; 0x2686 <__ashldi3+0x7c>
    2666:	19 86       	std	Y+9, r1	; 0x09
    2668:	1a 86       	std	Y+10, r1	; 0x0a
    266a:	1b 86       	std	Y+11, r1	; 0x0b
    266c:	1c 86       	std	Y+12, r1	; 0x0c
    266e:	88 27       	eor	r24, r24
    2670:	99 27       	eor	r25, r25
    2672:	8e 1b       	sub	r24, r30
    2674:	9f 0b       	sbc	r25, r31
    2676:	04 c0       	rjmp	.+8      	; 0x2680 <__ashldi3+0x76>
    2678:	44 0f       	add	r20, r20
    267a:	55 1f       	adc	r21, r21
    267c:	66 1f       	adc	r22, r22
    267e:	77 1f       	adc	r23, r23
    2680:	8a 95       	dec	r24
    2682:	d2 f7       	brpl	.-12     	; 0x2678 <__ashldi3+0x6e>
    2684:	28 c0       	rjmp	.+80     	; 0x26d6 <__ashldi3+0xcc>
    2686:	20 2f       	mov	r18, r16
    2688:	33 27       	eor	r19, r19
    268a:	27 fd       	sbrc	r18, 7
    268c:	30 95       	com	r19
    268e:	db 01       	movw	r26, r22
    2690:	ca 01       	movw	r24, r20
    2692:	02 2e       	mov	r0, r18
    2694:	04 c0       	rjmp	.+8      	; 0x269e <__ashldi3+0x94>
    2696:	88 0f       	add	r24, r24
    2698:	99 1f       	adc	r25, r25
    269a:	aa 1f       	adc	r26, r26
    269c:	bb 1f       	adc	r27, r27
    269e:	0a 94       	dec	r0
    26a0:	d2 f7       	brpl	.-12     	; 0x2696 <__ashldi3+0x8c>
    26a2:	89 87       	std	Y+9, r24	; 0x09
    26a4:	9a 87       	std	Y+10, r25	; 0x0a
    26a6:	ab 87       	std	Y+11, r26	; 0x0b
    26a8:	bc 87       	std	Y+12, r27	; 0x0c
    26aa:	04 c0       	rjmp	.+8      	; 0x26b4 <__ashldi3+0xaa>
    26ac:	76 95       	lsr	r23
    26ae:	67 95       	ror	r22
    26b0:	57 95       	ror	r21
    26b2:	47 95       	ror	r20
    26b4:	ea 95       	dec	r30
    26b6:	d2 f7       	brpl	.-12     	; 0x26ac <__ashldi3+0xa2>
    26b8:	8d 81       	ldd	r24, Y+5	; 0x05
    26ba:	9e 81       	ldd	r25, Y+6	; 0x06
    26bc:	af 81       	ldd	r26, Y+7	; 0x07
    26be:	b8 85       	ldd	r27, Y+8	; 0x08
    26c0:	04 c0       	rjmp	.+8      	; 0x26ca <__ashldi3+0xc0>
    26c2:	88 0f       	add	r24, r24
    26c4:	99 1f       	adc	r25, r25
    26c6:	aa 1f       	adc	r26, r26
    26c8:	bb 1f       	adc	r27, r27
    26ca:	2a 95       	dec	r18
    26cc:	d2 f7       	brpl	.-12     	; 0x26c2 <__ashldi3+0xb8>
    26ce:	48 2b       	or	r20, r24
    26d0:	59 2b       	or	r21, r25
    26d2:	6a 2b       	or	r22, r26
    26d4:	7b 2b       	or	r23, r27
    26d6:	4d 87       	std	Y+13, r20	; 0x0d
    26d8:	5e 87       	std	Y+14, r21	; 0x0e
    26da:	6f 87       	std	Y+15, r22	; 0x0f
    26dc:	78 8b       	std	Y+16, r23	; 0x10
    26de:	29 85       	ldd	r18, Y+9	; 0x09
    26e0:	3a 85       	ldd	r19, Y+10	; 0x0a
    26e2:	4b 85       	ldd	r20, Y+11	; 0x0b
    26e4:	5c 85       	ldd	r21, Y+12	; 0x0c
    26e6:	6d 85       	ldd	r22, Y+13	; 0x0d
    26e8:	7e 85       	ldd	r23, Y+14	; 0x0e
    26ea:	af 85       	ldd	r26, Y+15	; 0x0f
    26ec:	98 89       	ldd	r25, Y+16	; 0x10
    26ee:	8a 2f       	mov	r24, r26
    26f0:	60 96       	adiw	r28, 0x10	; 16
    26f2:	0f b6       	in	r0, 0x3f	; 63
    26f4:	f8 94       	cli
    26f6:	de bf       	out	0x3e, r29	; 62
    26f8:	0f be       	out	0x3f, r0	; 63
    26fa:	cd bf       	out	0x3d, r28	; 61
    26fc:	cf 91       	pop	r28
    26fe:	df 91       	pop	r29
    2700:	0f 91       	pop	r16
    2702:	ff 90       	pop	r15
    2704:	ef 90       	pop	r14
    2706:	08 95       	ret

00002708 <__clzsi2>:
    2708:	ef 92       	push	r14
    270a:	ff 92       	push	r15
    270c:	0f 93       	push	r16
    270e:	1f 93       	push	r17
    2710:	7b 01       	movw	r14, r22
    2712:	8c 01       	movw	r16, r24
    2714:	80 e0       	ldi	r24, 0x00	; 0
    2716:	e8 16       	cp	r14, r24
    2718:	80 e0       	ldi	r24, 0x00	; 0
    271a:	f8 06       	cpc	r15, r24
    271c:	81 e0       	ldi	r24, 0x01	; 1
    271e:	08 07       	cpc	r16, r24
    2720:	80 e0       	ldi	r24, 0x00	; 0
    2722:	18 07       	cpc	r17, r24
    2724:	88 f4       	brcc	.+34     	; 0x2748 <__clzsi2+0x40>
    2726:	8f ef       	ldi	r24, 0xFF	; 255
    2728:	e8 16       	cp	r14, r24
    272a:	f1 04       	cpc	r15, r1
    272c:	01 05       	cpc	r16, r1
    272e:	11 05       	cpc	r17, r1
    2730:	31 f0       	breq	.+12     	; 0x273e <__clzsi2+0x36>
    2732:	28 f0       	brcs	.+10     	; 0x273e <__clzsi2+0x36>
    2734:	88 e0       	ldi	r24, 0x08	; 8
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	a0 e0       	ldi	r26, 0x00	; 0
    273a:	b0 e0       	ldi	r27, 0x00	; 0
    273c:	17 c0       	rjmp	.+46     	; 0x276c <__clzsi2+0x64>
    273e:	80 e0       	ldi	r24, 0x00	; 0
    2740:	90 e0       	ldi	r25, 0x00	; 0
    2742:	a0 e0       	ldi	r26, 0x00	; 0
    2744:	b0 e0       	ldi	r27, 0x00	; 0
    2746:	12 c0       	rjmp	.+36     	; 0x276c <__clzsi2+0x64>
    2748:	80 e0       	ldi	r24, 0x00	; 0
    274a:	e8 16       	cp	r14, r24
    274c:	80 e0       	ldi	r24, 0x00	; 0
    274e:	f8 06       	cpc	r15, r24
    2750:	80 e0       	ldi	r24, 0x00	; 0
    2752:	08 07       	cpc	r16, r24
    2754:	81 e0       	ldi	r24, 0x01	; 1
    2756:	18 07       	cpc	r17, r24
    2758:	28 f0       	brcs	.+10     	; 0x2764 <__clzsi2+0x5c>
    275a:	88 e1       	ldi	r24, 0x18	; 24
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	a0 e0       	ldi	r26, 0x00	; 0
    2760:	b0 e0       	ldi	r27, 0x00	; 0
    2762:	04 c0       	rjmp	.+8      	; 0x276c <__clzsi2+0x64>
    2764:	80 e1       	ldi	r24, 0x10	; 16
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	a0 e0       	ldi	r26, 0x00	; 0
    276a:	b0 e0       	ldi	r27, 0x00	; 0
    276c:	20 e2       	ldi	r18, 0x20	; 32
    276e:	30 e0       	ldi	r19, 0x00	; 0
    2770:	40 e0       	ldi	r20, 0x00	; 0
    2772:	50 e0       	ldi	r21, 0x00	; 0
    2774:	28 1b       	sub	r18, r24
    2776:	39 0b       	sbc	r19, r25
    2778:	4a 0b       	sbc	r20, r26
    277a:	5b 0b       	sbc	r21, r27
    277c:	04 c0       	rjmp	.+8      	; 0x2786 <__clzsi2+0x7e>
    277e:	16 95       	lsr	r17
    2780:	07 95       	ror	r16
    2782:	f7 94       	ror	r15
    2784:	e7 94       	ror	r14
    2786:	8a 95       	dec	r24
    2788:	d2 f7       	brpl	.-12     	; 0x277e <__clzsi2+0x76>
    278a:	f7 01       	movw	r30, r14
    278c:	ed 58       	subi	r30, 0x8D	; 141
    278e:	ff 4f       	sbci	r31, 0xFF	; 255
    2790:	80 81       	ld	r24, Z
    2792:	28 1b       	sub	r18, r24
    2794:	31 09       	sbc	r19, r1
    2796:	41 09       	sbc	r20, r1
    2798:	51 09       	sbc	r21, r1
    279a:	c9 01       	movw	r24, r18
    279c:	1f 91       	pop	r17
    279e:	0f 91       	pop	r16
    27a0:	ff 90       	pop	r15
    27a2:	ef 90       	pop	r14
    27a4:	08 95       	ret

000027a6 <__pack_f>:
    27a6:	df 92       	push	r13
    27a8:	ef 92       	push	r14
    27aa:	ff 92       	push	r15
    27ac:	0f 93       	push	r16
    27ae:	1f 93       	push	r17
    27b0:	fc 01       	movw	r30, r24
    27b2:	e4 80       	ldd	r14, Z+4	; 0x04
    27b4:	f5 80       	ldd	r15, Z+5	; 0x05
    27b6:	06 81       	ldd	r16, Z+6	; 0x06
    27b8:	17 81       	ldd	r17, Z+7	; 0x07
    27ba:	d1 80       	ldd	r13, Z+1	; 0x01
    27bc:	80 81       	ld	r24, Z
    27be:	82 30       	cpi	r24, 0x02	; 2
    27c0:	48 f4       	brcc	.+18     	; 0x27d4 <__pack_f+0x2e>
    27c2:	80 e0       	ldi	r24, 0x00	; 0
    27c4:	90 e0       	ldi	r25, 0x00	; 0
    27c6:	a0 e1       	ldi	r26, 0x10	; 16
    27c8:	b0 e0       	ldi	r27, 0x00	; 0
    27ca:	e8 2a       	or	r14, r24
    27cc:	f9 2a       	or	r15, r25
    27ce:	0a 2b       	or	r16, r26
    27d0:	1b 2b       	or	r17, r27
    27d2:	a5 c0       	rjmp	.+330    	; 0x291e <__pack_f+0x178>
    27d4:	84 30       	cpi	r24, 0x04	; 4
    27d6:	09 f4       	brne	.+2      	; 0x27da <__pack_f+0x34>
    27d8:	9f c0       	rjmp	.+318    	; 0x2918 <__pack_f+0x172>
    27da:	82 30       	cpi	r24, 0x02	; 2
    27dc:	21 f4       	brne	.+8      	; 0x27e6 <__pack_f+0x40>
    27de:	ee 24       	eor	r14, r14
    27e0:	ff 24       	eor	r15, r15
    27e2:	87 01       	movw	r16, r14
    27e4:	05 c0       	rjmp	.+10     	; 0x27f0 <__pack_f+0x4a>
    27e6:	e1 14       	cp	r14, r1
    27e8:	f1 04       	cpc	r15, r1
    27ea:	01 05       	cpc	r16, r1
    27ec:	11 05       	cpc	r17, r1
    27ee:	19 f4       	brne	.+6      	; 0x27f6 <__pack_f+0x50>
    27f0:	e0 e0       	ldi	r30, 0x00	; 0
    27f2:	f0 e0       	ldi	r31, 0x00	; 0
    27f4:	96 c0       	rjmp	.+300    	; 0x2922 <__pack_f+0x17c>
    27f6:	62 81       	ldd	r22, Z+2	; 0x02
    27f8:	73 81       	ldd	r23, Z+3	; 0x03
    27fa:	9f ef       	ldi	r25, 0xFF	; 255
    27fc:	62 38       	cpi	r22, 0x82	; 130
    27fe:	79 07       	cpc	r23, r25
    2800:	0c f0       	brlt	.+2      	; 0x2804 <__pack_f+0x5e>
    2802:	5b c0       	rjmp	.+182    	; 0x28ba <__pack_f+0x114>
    2804:	22 e8       	ldi	r18, 0x82	; 130
    2806:	3f ef       	ldi	r19, 0xFF	; 255
    2808:	26 1b       	sub	r18, r22
    280a:	37 0b       	sbc	r19, r23
    280c:	2a 31       	cpi	r18, 0x1A	; 26
    280e:	31 05       	cpc	r19, r1
    2810:	2c f0       	brlt	.+10     	; 0x281c <__pack_f+0x76>
    2812:	20 e0       	ldi	r18, 0x00	; 0
    2814:	30 e0       	ldi	r19, 0x00	; 0
    2816:	40 e0       	ldi	r20, 0x00	; 0
    2818:	50 e0       	ldi	r21, 0x00	; 0
    281a:	2a c0       	rjmp	.+84     	; 0x2870 <__pack_f+0xca>
    281c:	b8 01       	movw	r22, r16
    281e:	a7 01       	movw	r20, r14
    2820:	02 2e       	mov	r0, r18
    2822:	04 c0       	rjmp	.+8      	; 0x282c <__pack_f+0x86>
    2824:	76 95       	lsr	r23
    2826:	67 95       	ror	r22
    2828:	57 95       	ror	r21
    282a:	47 95       	ror	r20
    282c:	0a 94       	dec	r0
    282e:	d2 f7       	brpl	.-12     	; 0x2824 <__pack_f+0x7e>
    2830:	81 e0       	ldi	r24, 0x01	; 1
    2832:	90 e0       	ldi	r25, 0x00	; 0
    2834:	a0 e0       	ldi	r26, 0x00	; 0
    2836:	b0 e0       	ldi	r27, 0x00	; 0
    2838:	04 c0       	rjmp	.+8      	; 0x2842 <__pack_f+0x9c>
    283a:	88 0f       	add	r24, r24
    283c:	99 1f       	adc	r25, r25
    283e:	aa 1f       	adc	r26, r26
    2840:	bb 1f       	adc	r27, r27
    2842:	2a 95       	dec	r18
    2844:	d2 f7       	brpl	.-12     	; 0x283a <__pack_f+0x94>
    2846:	01 97       	sbiw	r24, 0x01	; 1
    2848:	a1 09       	sbc	r26, r1
    284a:	b1 09       	sbc	r27, r1
    284c:	8e 21       	and	r24, r14
    284e:	9f 21       	and	r25, r15
    2850:	a0 23       	and	r26, r16
    2852:	b1 23       	and	r27, r17
    2854:	00 97       	sbiw	r24, 0x00	; 0
    2856:	a1 05       	cpc	r26, r1
    2858:	b1 05       	cpc	r27, r1
    285a:	21 f0       	breq	.+8      	; 0x2864 <__pack_f+0xbe>
    285c:	81 e0       	ldi	r24, 0x01	; 1
    285e:	90 e0       	ldi	r25, 0x00	; 0
    2860:	a0 e0       	ldi	r26, 0x00	; 0
    2862:	b0 e0       	ldi	r27, 0x00	; 0
    2864:	9a 01       	movw	r18, r20
    2866:	ab 01       	movw	r20, r22
    2868:	28 2b       	or	r18, r24
    286a:	39 2b       	or	r19, r25
    286c:	4a 2b       	or	r20, r26
    286e:	5b 2b       	or	r21, r27
    2870:	da 01       	movw	r26, r20
    2872:	c9 01       	movw	r24, r18
    2874:	8f 77       	andi	r24, 0x7F	; 127
    2876:	90 70       	andi	r25, 0x00	; 0
    2878:	a0 70       	andi	r26, 0x00	; 0
    287a:	b0 70       	andi	r27, 0x00	; 0
    287c:	80 34       	cpi	r24, 0x40	; 64
    287e:	91 05       	cpc	r25, r1
    2880:	a1 05       	cpc	r26, r1
    2882:	b1 05       	cpc	r27, r1
    2884:	39 f4       	brne	.+14     	; 0x2894 <__pack_f+0xee>
    2886:	27 ff       	sbrs	r18, 7
    2888:	09 c0       	rjmp	.+18     	; 0x289c <__pack_f+0xf6>
    288a:	20 5c       	subi	r18, 0xC0	; 192
    288c:	3f 4f       	sbci	r19, 0xFF	; 255
    288e:	4f 4f       	sbci	r20, 0xFF	; 255
    2890:	5f 4f       	sbci	r21, 0xFF	; 255
    2892:	04 c0       	rjmp	.+8      	; 0x289c <__pack_f+0xf6>
    2894:	21 5c       	subi	r18, 0xC1	; 193
    2896:	3f 4f       	sbci	r19, 0xFF	; 255
    2898:	4f 4f       	sbci	r20, 0xFF	; 255
    289a:	5f 4f       	sbci	r21, 0xFF	; 255
    289c:	e0 e0       	ldi	r30, 0x00	; 0
    289e:	f0 e0       	ldi	r31, 0x00	; 0
    28a0:	20 30       	cpi	r18, 0x00	; 0
    28a2:	a0 e0       	ldi	r26, 0x00	; 0
    28a4:	3a 07       	cpc	r19, r26
    28a6:	a0 e0       	ldi	r26, 0x00	; 0
    28a8:	4a 07       	cpc	r20, r26
    28aa:	a0 e4       	ldi	r26, 0x40	; 64
    28ac:	5a 07       	cpc	r21, r26
    28ae:	10 f0       	brcs	.+4      	; 0x28b4 <__pack_f+0x10e>
    28b0:	e1 e0       	ldi	r30, 0x01	; 1
    28b2:	f0 e0       	ldi	r31, 0x00	; 0
    28b4:	79 01       	movw	r14, r18
    28b6:	8a 01       	movw	r16, r20
    28b8:	27 c0       	rjmp	.+78     	; 0x2908 <__pack_f+0x162>
    28ba:	60 38       	cpi	r22, 0x80	; 128
    28bc:	71 05       	cpc	r23, r1
    28be:	64 f5       	brge	.+88     	; 0x2918 <__pack_f+0x172>
    28c0:	fb 01       	movw	r30, r22
    28c2:	e1 58       	subi	r30, 0x81	; 129
    28c4:	ff 4f       	sbci	r31, 0xFF	; 255
    28c6:	d8 01       	movw	r26, r16
    28c8:	c7 01       	movw	r24, r14
    28ca:	8f 77       	andi	r24, 0x7F	; 127
    28cc:	90 70       	andi	r25, 0x00	; 0
    28ce:	a0 70       	andi	r26, 0x00	; 0
    28d0:	b0 70       	andi	r27, 0x00	; 0
    28d2:	80 34       	cpi	r24, 0x40	; 64
    28d4:	91 05       	cpc	r25, r1
    28d6:	a1 05       	cpc	r26, r1
    28d8:	b1 05       	cpc	r27, r1
    28da:	39 f4       	brne	.+14     	; 0x28ea <__pack_f+0x144>
    28dc:	e7 fe       	sbrs	r14, 7
    28de:	0d c0       	rjmp	.+26     	; 0x28fa <__pack_f+0x154>
    28e0:	80 e4       	ldi	r24, 0x40	; 64
    28e2:	90 e0       	ldi	r25, 0x00	; 0
    28e4:	a0 e0       	ldi	r26, 0x00	; 0
    28e6:	b0 e0       	ldi	r27, 0x00	; 0
    28e8:	04 c0       	rjmp	.+8      	; 0x28f2 <__pack_f+0x14c>
    28ea:	8f e3       	ldi	r24, 0x3F	; 63
    28ec:	90 e0       	ldi	r25, 0x00	; 0
    28ee:	a0 e0       	ldi	r26, 0x00	; 0
    28f0:	b0 e0       	ldi	r27, 0x00	; 0
    28f2:	e8 0e       	add	r14, r24
    28f4:	f9 1e       	adc	r15, r25
    28f6:	0a 1f       	adc	r16, r26
    28f8:	1b 1f       	adc	r17, r27
    28fa:	17 ff       	sbrs	r17, 7
    28fc:	05 c0       	rjmp	.+10     	; 0x2908 <__pack_f+0x162>
    28fe:	16 95       	lsr	r17
    2900:	07 95       	ror	r16
    2902:	f7 94       	ror	r15
    2904:	e7 94       	ror	r14
    2906:	31 96       	adiw	r30, 0x01	; 1
    2908:	87 e0       	ldi	r24, 0x07	; 7
    290a:	16 95       	lsr	r17
    290c:	07 95       	ror	r16
    290e:	f7 94       	ror	r15
    2910:	e7 94       	ror	r14
    2912:	8a 95       	dec	r24
    2914:	d1 f7       	brne	.-12     	; 0x290a <__pack_f+0x164>
    2916:	05 c0       	rjmp	.+10     	; 0x2922 <__pack_f+0x17c>
    2918:	ee 24       	eor	r14, r14
    291a:	ff 24       	eor	r15, r15
    291c:	87 01       	movw	r16, r14
    291e:	ef ef       	ldi	r30, 0xFF	; 255
    2920:	f0 e0       	ldi	r31, 0x00	; 0
    2922:	6e 2f       	mov	r22, r30
    2924:	67 95       	ror	r22
    2926:	66 27       	eor	r22, r22
    2928:	67 95       	ror	r22
    292a:	90 2f       	mov	r25, r16
    292c:	9f 77       	andi	r25, 0x7F	; 127
    292e:	d7 94       	ror	r13
    2930:	dd 24       	eor	r13, r13
    2932:	d7 94       	ror	r13
    2934:	8e 2f       	mov	r24, r30
    2936:	86 95       	lsr	r24
    2938:	49 2f       	mov	r20, r25
    293a:	46 2b       	or	r20, r22
    293c:	58 2f       	mov	r21, r24
    293e:	5d 29       	or	r21, r13
    2940:	b7 01       	movw	r22, r14
    2942:	ca 01       	movw	r24, r20
    2944:	1f 91       	pop	r17
    2946:	0f 91       	pop	r16
    2948:	ff 90       	pop	r15
    294a:	ef 90       	pop	r14
    294c:	df 90       	pop	r13
    294e:	08 95       	ret

00002950 <__unpack_f>:
    2950:	fc 01       	movw	r30, r24
    2952:	db 01       	movw	r26, r22
    2954:	40 81       	ld	r20, Z
    2956:	51 81       	ldd	r21, Z+1	; 0x01
    2958:	22 81       	ldd	r18, Z+2	; 0x02
    295a:	62 2f       	mov	r22, r18
    295c:	6f 77       	andi	r22, 0x7F	; 127
    295e:	70 e0       	ldi	r23, 0x00	; 0
    2960:	22 1f       	adc	r18, r18
    2962:	22 27       	eor	r18, r18
    2964:	22 1f       	adc	r18, r18
    2966:	93 81       	ldd	r25, Z+3	; 0x03
    2968:	89 2f       	mov	r24, r25
    296a:	88 0f       	add	r24, r24
    296c:	82 2b       	or	r24, r18
    296e:	28 2f       	mov	r18, r24
    2970:	30 e0       	ldi	r19, 0x00	; 0
    2972:	99 1f       	adc	r25, r25
    2974:	99 27       	eor	r25, r25
    2976:	99 1f       	adc	r25, r25
    2978:	11 96       	adiw	r26, 0x01	; 1
    297a:	9c 93       	st	X, r25
    297c:	11 97       	sbiw	r26, 0x01	; 1
    297e:	21 15       	cp	r18, r1
    2980:	31 05       	cpc	r19, r1
    2982:	a9 f5       	brne	.+106    	; 0x29ee <__unpack_f+0x9e>
    2984:	41 15       	cp	r20, r1
    2986:	51 05       	cpc	r21, r1
    2988:	61 05       	cpc	r22, r1
    298a:	71 05       	cpc	r23, r1
    298c:	11 f4       	brne	.+4      	; 0x2992 <__unpack_f+0x42>
    298e:	82 e0       	ldi	r24, 0x02	; 2
    2990:	37 c0       	rjmp	.+110    	; 0x2a00 <__unpack_f+0xb0>
    2992:	82 e8       	ldi	r24, 0x82	; 130
    2994:	9f ef       	ldi	r25, 0xFF	; 255
    2996:	13 96       	adiw	r26, 0x03	; 3
    2998:	9c 93       	st	X, r25
    299a:	8e 93       	st	-X, r24
    299c:	12 97       	sbiw	r26, 0x02	; 2
    299e:	9a 01       	movw	r18, r20
    29a0:	ab 01       	movw	r20, r22
    29a2:	67 e0       	ldi	r22, 0x07	; 7
    29a4:	22 0f       	add	r18, r18
    29a6:	33 1f       	adc	r19, r19
    29a8:	44 1f       	adc	r20, r20
    29aa:	55 1f       	adc	r21, r21
    29ac:	6a 95       	dec	r22
    29ae:	d1 f7       	brne	.-12     	; 0x29a4 <__unpack_f+0x54>
    29b0:	83 e0       	ldi	r24, 0x03	; 3
    29b2:	8c 93       	st	X, r24
    29b4:	0d c0       	rjmp	.+26     	; 0x29d0 <__unpack_f+0x80>
    29b6:	22 0f       	add	r18, r18
    29b8:	33 1f       	adc	r19, r19
    29ba:	44 1f       	adc	r20, r20
    29bc:	55 1f       	adc	r21, r21
    29be:	12 96       	adiw	r26, 0x02	; 2
    29c0:	8d 91       	ld	r24, X+
    29c2:	9c 91       	ld	r25, X
    29c4:	13 97       	sbiw	r26, 0x03	; 3
    29c6:	01 97       	sbiw	r24, 0x01	; 1
    29c8:	13 96       	adiw	r26, 0x03	; 3
    29ca:	9c 93       	st	X, r25
    29cc:	8e 93       	st	-X, r24
    29ce:	12 97       	sbiw	r26, 0x02	; 2
    29d0:	20 30       	cpi	r18, 0x00	; 0
    29d2:	80 e0       	ldi	r24, 0x00	; 0
    29d4:	38 07       	cpc	r19, r24
    29d6:	80 e0       	ldi	r24, 0x00	; 0
    29d8:	48 07       	cpc	r20, r24
    29da:	80 e4       	ldi	r24, 0x40	; 64
    29dc:	58 07       	cpc	r21, r24
    29de:	58 f3       	brcs	.-42     	; 0x29b6 <__unpack_f+0x66>
    29e0:	14 96       	adiw	r26, 0x04	; 4
    29e2:	2d 93       	st	X+, r18
    29e4:	3d 93       	st	X+, r19
    29e6:	4d 93       	st	X+, r20
    29e8:	5c 93       	st	X, r21
    29ea:	17 97       	sbiw	r26, 0x07	; 7
    29ec:	08 95       	ret
    29ee:	2f 3f       	cpi	r18, 0xFF	; 255
    29f0:	31 05       	cpc	r19, r1
    29f2:	79 f4       	brne	.+30     	; 0x2a12 <__unpack_f+0xc2>
    29f4:	41 15       	cp	r20, r1
    29f6:	51 05       	cpc	r21, r1
    29f8:	61 05       	cpc	r22, r1
    29fa:	71 05       	cpc	r23, r1
    29fc:	19 f4       	brne	.+6      	; 0x2a04 <__unpack_f+0xb4>
    29fe:	84 e0       	ldi	r24, 0x04	; 4
    2a00:	8c 93       	st	X, r24
    2a02:	08 95       	ret
    2a04:	64 ff       	sbrs	r22, 4
    2a06:	03 c0       	rjmp	.+6      	; 0x2a0e <__unpack_f+0xbe>
    2a08:	81 e0       	ldi	r24, 0x01	; 1
    2a0a:	8c 93       	st	X, r24
    2a0c:	12 c0       	rjmp	.+36     	; 0x2a32 <__unpack_f+0xe2>
    2a0e:	1c 92       	st	X, r1
    2a10:	10 c0       	rjmp	.+32     	; 0x2a32 <__unpack_f+0xe2>
    2a12:	2f 57       	subi	r18, 0x7F	; 127
    2a14:	30 40       	sbci	r19, 0x00	; 0
    2a16:	13 96       	adiw	r26, 0x03	; 3
    2a18:	3c 93       	st	X, r19
    2a1a:	2e 93       	st	-X, r18
    2a1c:	12 97       	sbiw	r26, 0x02	; 2
    2a1e:	83 e0       	ldi	r24, 0x03	; 3
    2a20:	8c 93       	st	X, r24
    2a22:	87 e0       	ldi	r24, 0x07	; 7
    2a24:	44 0f       	add	r20, r20
    2a26:	55 1f       	adc	r21, r21
    2a28:	66 1f       	adc	r22, r22
    2a2a:	77 1f       	adc	r23, r23
    2a2c:	8a 95       	dec	r24
    2a2e:	d1 f7       	brne	.-12     	; 0x2a24 <__unpack_f+0xd4>
    2a30:	70 64       	ori	r23, 0x40	; 64
    2a32:	14 96       	adiw	r26, 0x04	; 4
    2a34:	4d 93       	st	X+, r20
    2a36:	5d 93       	st	X+, r21
    2a38:	6d 93       	st	X+, r22
    2a3a:	7c 93       	st	X, r23
    2a3c:	17 97       	sbiw	r26, 0x07	; 7
    2a3e:	08 95       	ret

00002a40 <__fpcmp_parts_f>:
    2a40:	1f 93       	push	r17
    2a42:	dc 01       	movw	r26, r24
    2a44:	fb 01       	movw	r30, r22
    2a46:	9c 91       	ld	r25, X
    2a48:	92 30       	cpi	r25, 0x02	; 2
    2a4a:	08 f4       	brcc	.+2      	; 0x2a4e <__fpcmp_parts_f+0xe>
    2a4c:	47 c0       	rjmp	.+142    	; 0x2adc <__fpcmp_parts_f+0x9c>
    2a4e:	80 81       	ld	r24, Z
    2a50:	82 30       	cpi	r24, 0x02	; 2
    2a52:	08 f4       	brcc	.+2      	; 0x2a56 <__fpcmp_parts_f+0x16>
    2a54:	43 c0       	rjmp	.+134    	; 0x2adc <__fpcmp_parts_f+0x9c>
    2a56:	94 30       	cpi	r25, 0x04	; 4
    2a58:	51 f4       	brne	.+20     	; 0x2a6e <__fpcmp_parts_f+0x2e>
    2a5a:	11 96       	adiw	r26, 0x01	; 1
    2a5c:	1c 91       	ld	r17, X
    2a5e:	84 30       	cpi	r24, 0x04	; 4
    2a60:	99 f5       	brne	.+102    	; 0x2ac8 <__fpcmp_parts_f+0x88>
    2a62:	81 81       	ldd	r24, Z+1	; 0x01
    2a64:	68 2f       	mov	r22, r24
    2a66:	70 e0       	ldi	r23, 0x00	; 0
    2a68:	61 1b       	sub	r22, r17
    2a6a:	71 09       	sbc	r23, r1
    2a6c:	3f c0       	rjmp	.+126    	; 0x2aec <__fpcmp_parts_f+0xac>
    2a6e:	84 30       	cpi	r24, 0x04	; 4
    2a70:	21 f0       	breq	.+8      	; 0x2a7a <__fpcmp_parts_f+0x3a>
    2a72:	92 30       	cpi	r25, 0x02	; 2
    2a74:	31 f4       	brne	.+12     	; 0x2a82 <__fpcmp_parts_f+0x42>
    2a76:	82 30       	cpi	r24, 0x02	; 2
    2a78:	b9 f1       	breq	.+110    	; 0x2ae8 <__fpcmp_parts_f+0xa8>
    2a7a:	81 81       	ldd	r24, Z+1	; 0x01
    2a7c:	88 23       	and	r24, r24
    2a7e:	89 f1       	breq	.+98     	; 0x2ae2 <__fpcmp_parts_f+0xa2>
    2a80:	2d c0       	rjmp	.+90     	; 0x2adc <__fpcmp_parts_f+0x9c>
    2a82:	11 96       	adiw	r26, 0x01	; 1
    2a84:	1c 91       	ld	r17, X
    2a86:	11 97       	sbiw	r26, 0x01	; 1
    2a88:	82 30       	cpi	r24, 0x02	; 2
    2a8a:	f1 f0       	breq	.+60     	; 0x2ac8 <__fpcmp_parts_f+0x88>
    2a8c:	81 81       	ldd	r24, Z+1	; 0x01
    2a8e:	18 17       	cp	r17, r24
    2a90:	d9 f4       	brne	.+54     	; 0x2ac8 <__fpcmp_parts_f+0x88>
    2a92:	12 96       	adiw	r26, 0x02	; 2
    2a94:	2d 91       	ld	r18, X+
    2a96:	3c 91       	ld	r19, X
    2a98:	13 97       	sbiw	r26, 0x03	; 3
    2a9a:	82 81       	ldd	r24, Z+2	; 0x02
    2a9c:	93 81       	ldd	r25, Z+3	; 0x03
    2a9e:	82 17       	cp	r24, r18
    2aa0:	93 07       	cpc	r25, r19
    2aa2:	94 f0       	brlt	.+36     	; 0x2ac8 <__fpcmp_parts_f+0x88>
    2aa4:	28 17       	cp	r18, r24
    2aa6:	39 07       	cpc	r19, r25
    2aa8:	bc f0       	brlt	.+46     	; 0x2ad8 <__fpcmp_parts_f+0x98>
    2aaa:	14 96       	adiw	r26, 0x04	; 4
    2aac:	8d 91       	ld	r24, X+
    2aae:	9d 91       	ld	r25, X+
    2ab0:	0d 90       	ld	r0, X+
    2ab2:	bc 91       	ld	r27, X
    2ab4:	a0 2d       	mov	r26, r0
    2ab6:	24 81       	ldd	r18, Z+4	; 0x04
    2ab8:	35 81       	ldd	r19, Z+5	; 0x05
    2aba:	46 81       	ldd	r20, Z+6	; 0x06
    2abc:	57 81       	ldd	r21, Z+7	; 0x07
    2abe:	28 17       	cp	r18, r24
    2ac0:	39 07       	cpc	r19, r25
    2ac2:	4a 07       	cpc	r20, r26
    2ac4:	5b 07       	cpc	r21, r27
    2ac6:	18 f4       	brcc	.+6      	; 0x2ace <__fpcmp_parts_f+0x8e>
    2ac8:	11 23       	and	r17, r17
    2aca:	41 f0       	breq	.+16     	; 0x2adc <__fpcmp_parts_f+0x9c>
    2acc:	0a c0       	rjmp	.+20     	; 0x2ae2 <__fpcmp_parts_f+0xa2>
    2ace:	82 17       	cp	r24, r18
    2ad0:	93 07       	cpc	r25, r19
    2ad2:	a4 07       	cpc	r26, r20
    2ad4:	b5 07       	cpc	r27, r21
    2ad6:	40 f4       	brcc	.+16     	; 0x2ae8 <__fpcmp_parts_f+0xa8>
    2ad8:	11 23       	and	r17, r17
    2ada:	19 f0       	breq	.+6      	; 0x2ae2 <__fpcmp_parts_f+0xa2>
    2adc:	61 e0       	ldi	r22, 0x01	; 1
    2ade:	70 e0       	ldi	r23, 0x00	; 0
    2ae0:	05 c0       	rjmp	.+10     	; 0x2aec <__fpcmp_parts_f+0xac>
    2ae2:	6f ef       	ldi	r22, 0xFF	; 255
    2ae4:	7f ef       	ldi	r23, 0xFF	; 255
    2ae6:	02 c0       	rjmp	.+4      	; 0x2aec <__fpcmp_parts_f+0xac>
    2ae8:	60 e0       	ldi	r22, 0x00	; 0
    2aea:	70 e0       	ldi	r23, 0x00	; 0
    2aec:	cb 01       	movw	r24, r22
    2aee:	1f 91       	pop	r17
    2af0:	08 95       	ret

00002af2 <main>:
#include"lcd.h"
#include"keypad.h"
#include"common_macros.h"
#include<util/delay.h>
int main(void)
{
    2af2:	ef 92       	push	r14
    2af4:	ff 92       	push	r15
    2af6:	0f 93       	push	r16
    2af8:	1f 93       	push	r17
    2afa:	df 93       	push	r29
    2afc:	cf 93       	push	r28
    2afe:	cd b7       	in	r28, 0x3d	; 61
    2b00:	de b7       	in	r29, 0x3e	; 62
    2b02:	c0 54       	subi	r28, 0x40	; 64
    2b04:	d0 40       	sbci	r29, 0x00	; 0
    2b06:	0f b6       	in	r0, 0x3f	; 63
    2b08:	f8 94       	cli
    2b0a:	de bf       	out	0x3e, r29	; 62
    2b0c:	0f be       	out	0x3f, r0	; 63
    2b0e:	cd bf       	out	0x3d, r28	; 61
	LCD_init();
    2b10:	0e 94 72 1d 	call	0x3ae4	; 0x3ae4 <LCD_init>
	volatile sint32 num = 0;
    2b14:	1d 8e       	std	Y+29, r1	; 0x1d
    2b16:	1e 8e       	std	Y+30, r1	; 0x1e
    2b18:	1f 8e       	std	Y+31, r1	; 0x1f
    2b1a:	18 a2       	std	Y+32, r1	; 0x20
	volatile sint16 temp;
	volatile float64 result ;
	volatile sint32 num2 = 0;
    2b1c:	1f a2       	std	Y+39, r1	; 0x27
    2b1e:	18 a6       	std	Y+40, r1	; 0x28
    2b20:	19 a6       	std	Y+41, r1	; 0x29
    2b22:	1a a6       	std	Y+42, r1	; 0x2a
	volatile uint8 operator ;
	char str[] = "Calculator";
    2b24:	8e 01       	movw	r16, r28
    2b26:	04 5d       	subi	r16, 0xD4	; 212
    2b28:	1f 4f       	sbci	r17, 0xFF	; 255
    2b2a:	1d af       	std	Y+61, r17	; 0x3d
    2b2c:	0c af       	std	Y+60, r16	; 0x3c
    2b2e:	20 e6       	ldi	r18, 0x60	; 96
    2b30:	30 e0       	ldi	r19, 0x00	; 0
    2b32:	3f af       	std	Y+63, r19	; 0x3f
    2b34:	2e af       	std	Y+62, r18	; 0x3e
    2b36:	3b e0       	ldi	r19, 0x0B	; 11
    2b38:	21 96       	adiw	r28, 0x01	; 1
    2b3a:	3f af       	std	Y+63, r19	; 0x3f
    2b3c:	21 97       	sbiw	r28, 0x01	; 1
    2b3e:	ee ad       	ldd	r30, Y+62	; 0x3e
    2b40:	ff ad       	ldd	r31, Y+63	; 0x3f
    2b42:	00 80       	ld	r0, Z
    2b44:	0e ad       	ldd	r16, Y+62	; 0x3e
    2b46:	1f ad       	ldd	r17, Y+63	; 0x3f
    2b48:	0f 5f       	subi	r16, 0xFF	; 255
    2b4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b4c:	1f af       	std	Y+63, r17	; 0x3f
    2b4e:	0e af       	std	Y+62, r16	; 0x3e
    2b50:	ec ad       	ldd	r30, Y+60	; 0x3c
    2b52:	fd ad       	ldd	r31, Y+61	; 0x3d
    2b54:	00 82       	st	Z, r0
    2b56:	0c ad       	ldd	r16, Y+60	; 0x3c
    2b58:	1d ad       	ldd	r17, Y+61	; 0x3d
    2b5a:	0f 5f       	subi	r16, 0xFF	; 255
    2b5c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b5e:	1d af       	std	Y+61, r17	; 0x3d
    2b60:	0c af       	std	Y+60, r16	; 0x3c
    2b62:	21 96       	adiw	r28, 0x01	; 1
    2b64:	1f ad       	ldd	r17, Y+63	; 0x3f
    2b66:	21 97       	sbiw	r28, 0x01	; 1
    2b68:	11 50       	subi	r17, 0x01	; 1
    2b6a:	21 96       	adiw	r28, 0x01	; 1
    2b6c:	1f af       	std	Y+63, r17	; 0x3f
    2b6e:	21 97       	sbiw	r28, 0x01	; 1
    2b70:	21 96       	adiw	r28, 0x01	; 1
    2b72:	2f ad       	ldd	r18, Y+63	; 0x3f
    2b74:	21 97       	sbiw	r28, 0x01	; 1
    2b76:	22 23       	and	r18, r18
    2b78:	11 f7       	brne	.-60     	; 0x2b3e <main+0x4c>
	LCD_displayStringRowColumn(0,3,str);
    2b7a:	9e 01       	movw	r18, r28
    2b7c:	24 5d       	subi	r18, 0xD4	; 212
    2b7e:	3f 4f       	sbci	r19, 0xFF	; 255
    2b80:	80 e0       	ldi	r24, 0x00	; 0
    2b82:	63 e0       	ldi	r22, 0x03	; 3
    2b84:	a9 01       	movw	r20, r18
    2b86:	0e 94 85 27 	call	0x4f0a	; 0x4f0a <LCD_displayStringRowColumn>
    2b8a:	80 e0       	ldi	r24, 0x00	; 0
    2b8c:	90 e0       	ldi	r25, 0x00	; 0
    2b8e:	aa ef       	ldi	r26, 0xFA	; 250
    2b90:	b4 e4       	ldi	r27, 0x44	; 68
    2b92:	89 8f       	std	Y+25, r24	; 0x19
    2b94:	9a 8f       	std	Y+26, r25	; 0x1a
    2b96:	ab 8f       	std	Y+27, r26	; 0x1b
    2b98:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b9a:	69 8d       	ldd	r22, Y+25	; 0x19
    2b9c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b9e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ba0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ba2:	20 e0       	ldi	r18, 0x00	; 0
    2ba4:	30 e0       	ldi	r19, 0x00	; 0
    2ba6:	4a e7       	ldi	r20, 0x7A	; 122
    2ba8:	55 e4       	ldi	r21, 0x45	; 69
    2baa:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    2bae:	dc 01       	movw	r26, r24
    2bb0:	cb 01       	movw	r24, r22
    2bb2:	8d 8b       	std	Y+21, r24	; 0x15
    2bb4:	9e 8b       	std	Y+22, r25	; 0x16
    2bb6:	af 8b       	std	Y+23, r26	; 0x17
    2bb8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2bba:	6d 89       	ldd	r22, Y+21	; 0x15
    2bbc:	7e 89       	ldd	r23, Y+22	; 0x16
    2bbe:	8f 89       	ldd	r24, Y+23	; 0x17
    2bc0:	98 8d       	ldd	r25, Y+24	; 0x18
    2bc2:	20 e0       	ldi	r18, 0x00	; 0
    2bc4:	30 e0       	ldi	r19, 0x00	; 0
    2bc6:	40 e8       	ldi	r20, 0x80	; 128
    2bc8:	5f e3       	ldi	r21, 0x3F	; 63
    2bca:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    2bce:	88 23       	and	r24, r24
    2bd0:	2c f4       	brge	.+10     	; 0x2bdc <main+0xea>
		__ticks = 1;
    2bd2:	81 e0       	ldi	r24, 0x01	; 1
    2bd4:	90 e0       	ldi	r25, 0x00	; 0
    2bd6:	9c 8b       	std	Y+20, r25	; 0x14
    2bd8:	8b 8b       	std	Y+19, r24	; 0x13
    2bda:	3f c0       	rjmp	.+126    	; 0x2c5a <main+0x168>
	else if (__tmp > 65535)
    2bdc:	6d 89       	ldd	r22, Y+21	; 0x15
    2bde:	7e 89       	ldd	r23, Y+22	; 0x16
    2be0:	8f 89       	ldd	r24, Y+23	; 0x17
    2be2:	98 8d       	ldd	r25, Y+24	; 0x18
    2be4:	20 e0       	ldi	r18, 0x00	; 0
    2be6:	3f ef       	ldi	r19, 0xFF	; 255
    2be8:	4f e7       	ldi	r20, 0x7F	; 127
    2bea:	57 e4       	ldi	r21, 0x47	; 71
    2bec:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    2bf0:	18 16       	cp	r1, r24
    2bf2:	4c f5       	brge	.+82     	; 0x2c46 <main+0x154>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bf4:	69 8d       	ldd	r22, Y+25	; 0x19
    2bf6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2bf8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2bfa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2bfc:	20 e0       	ldi	r18, 0x00	; 0
    2bfe:	30 e0       	ldi	r19, 0x00	; 0
    2c00:	40 e2       	ldi	r20, 0x20	; 32
    2c02:	51 e4       	ldi	r21, 0x41	; 65
    2c04:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    2c08:	dc 01       	movw	r26, r24
    2c0a:	cb 01       	movw	r24, r22
    2c0c:	bc 01       	movw	r22, r24
    2c0e:	cd 01       	movw	r24, r26
    2c10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c14:	dc 01       	movw	r26, r24
    2c16:	cb 01       	movw	r24, r22
    2c18:	9c 8b       	std	Y+20, r25	; 0x14
    2c1a:	8b 8b       	std	Y+19, r24	; 0x13
    2c1c:	0f c0       	rjmp	.+30     	; 0x2c3c <main+0x14a>
    2c1e:	80 e9       	ldi	r24, 0x90	; 144
    2c20:	91 e0       	ldi	r25, 0x01	; 1
    2c22:	9a 8b       	std	Y+18, r25	; 0x12
    2c24:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2c26:	89 89       	ldd	r24, Y+17	; 0x11
    2c28:	9a 89       	ldd	r25, Y+18	; 0x12
    2c2a:	01 97       	sbiw	r24, 0x01	; 1
    2c2c:	f1 f7       	brne	.-4      	; 0x2c2a <main+0x138>
    2c2e:	9a 8b       	std	Y+18, r25	; 0x12
    2c30:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c32:	8b 89       	ldd	r24, Y+19	; 0x13
    2c34:	9c 89       	ldd	r25, Y+20	; 0x14
    2c36:	01 97       	sbiw	r24, 0x01	; 1
    2c38:	9c 8b       	std	Y+20, r25	; 0x14
    2c3a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c3c:	8b 89       	ldd	r24, Y+19	; 0x13
    2c3e:	9c 89       	ldd	r25, Y+20	; 0x14
    2c40:	00 97       	sbiw	r24, 0x00	; 0
    2c42:	69 f7       	brne	.-38     	; 0x2c1e <main+0x12c>
    2c44:	14 c0       	rjmp	.+40     	; 0x2c6e <main+0x17c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c46:	6d 89       	ldd	r22, Y+21	; 0x15
    2c48:	7e 89       	ldd	r23, Y+22	; 0x16
    2c4a:	8f 89       	ldd	r24, Y+23	; 0x17
    2c4c:	98 8d       	ldd	r25, Y+24	; 0x18
    2c4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c52:	dc 01       	movw	r26, r24
    2c54:	cb 01       	movw	r24, r22
    2c56:	9c 8b       	std	Y+20, r25	; 0x14
    2c58:	8b 8b       	std	Y+19, r24	; 0x13
    2c5a:	8b 89       	ldd	r24, Y+19	; 0x13
    2c5c:	9c 89       	ldd	r25, Y+20	; 0x14
    2c5e:	98 8b       	std	Y+16, r25	; 0x10
    2c60:	8f 87       	std	Y+15, r24	; 0x0f
    2c62:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c64:	98 89       	ldd	r25, Y+16	; 0x10
    2c66:	01 97       	sbiw	r24, 0x01	; 1
    2c68:	f1 f7       	brne	.-4      	; 0x2c66 <main+0x174>
    2c6a:	98 8b       	std	Y+16, r25	; 0x10
    2c6c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2000);
	LCD_clearScreen();
    2c6e:	0e 94 71 28 	call	0x50e2	; 0x50e2 <LCD_clearScreen>
	LCD_moveCursor(0,0);
    2c72:	80 e0       	ldi	r24, 0x00	; 0
    2c74:	60 e0       	ldi	r22, 0x00	; 0
    2c76:	0e 94 43 27 	call	0x4e86	; 0x4e86 <LCD_moveCursor>
	volatile uint8 cnt = 1 ;
    2c7a:	81 e0       	ldi	r24, 0x01	; 1
    2c7c:	8f ab       	std	Y+55, r24	; 0x37
    2c7e:	80 e0       	ldi	r24, 0x00	; 0
    2c80:	90 e0       	ldi	r25, 0x00	; 0
    2c82:	aa ef       	ldi	r26, 0xFA	; 250
    2c84:	b3 e4       	ldi	r27, 0x43	; 67
    2c86:	8b 87       	std	Y+11, r24	; 0x0b
    2c88:	9c 87       	std	Y+12, r25	; 0x0c
    2c8a:	ad 87       	std	Y+13, r26	; 0x0d
    2c8c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c8e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c90:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c92:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c94:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c96:	20 e0       	ldi	r18, 0x00	; 0
    2c98:	30 e0       	ldi	r19, 0x00	; 0
    2c9a:	4a e7       	ldi	r20, 0x7A	; 122
    2c9c:	55 e4       	ldi	r21, 0x45	; 69
    2c9e:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    2ca2:	dc 01       	movw	r26, r24
    2ca4:	cb 01       	movw	r24, r22
    2ca6:	8f 83       	std	Y+7, r24	; 0x07
    2ca8:	98 87       	std	Y+8, r25	; 0x08
    2caa:	a9 87       	std	Y+9, r26	; 0x09
    2cac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2cae:	6f 81       	ldd	r22, Y+7	; 0x07
    2cb0:	78 85       	ldd	r23, Y+8	; 0x08
    2cb2:	89 85       	ldd	r24, Y+9	; 0x09
    2cb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cb6:	20 e0       	ldi	r18, 0x00	; 0
    2cb8:	30 e0       	ldi	r19, 0x00	; 0
    2cba:	40 e8       	ldi	r20, 0x80	; 128
    2cbc:	5f e3       	ldi	r21, 0x3F	; 63
    2cbe:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    2cc2:	88 23       	and	r24, r24
    2cc4:	2c f4       	brge	.+10     	; 0x2cd0 <main+0x1de>
		__ticks = 1;
    2cc6:	81 e0       	ldi	r24, 0x01	; 1
    2cc8:	90 e0       	ldi	r25, 0x00	; 0
    2cca:	9e 83       	std	Y+6, r25	; 0x06
    2ccc:	8d 83       	std	Y+5, r24	; 0x05
    2cce:	3f c0       	rjmp	.+126    	; 0x2d4e <main+0x25c>
	else if (__tmp > 65535)
    2cd0:	6f 81       	ldd	r22, Y+7	; 0x07
    2cd2:	78 85       	ldd	r23, Y+8	; 0x08
    2cd4:	89 85       	ldd	r24, Y+9	; 0x09
    2cd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cd8:	20 e0       	ldi	r18, 0x00	; 0
    2cda:	3f ef       	ldi	r19, 0xFF	; 255
    2cdc:	4f e7       	ldi	r20, 0x7F	; 127
    2cde:	57 e4       	ldi	r21, 0x47	; 71
    2ce0:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    2ce4:	18 16       	cp	r1, r24
    2ce6:	4c f5       	brge	.+82     	; 0x2d3a <main+0x248>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ce8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2cea:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cec:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cee:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cf0:	20 e0       	ldi	r18, 0x00	; 0
    2cf2:	30 e0       	ldi	r19, 0x00	; 0
    2cf4:	40 e2       	ldi	r20, 0x20	; 32
    2cf6:	51 e4       	ldi	r21, 0x41	; 65
    2cf8:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    2cfc:	dc 01       	movw	r26, r24
    2cfe:	cb 01       	movw	r24, r22
    2d00:	bc 01       	movw	r22, r24
    2d02:	cd 01       	movw	r24, r26
    2d04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d08:	dc 01       	movw	r26, r24
    2d0a:	cb 01       	movw	r24, r22
    2d0c:	9e 83       	std	Y+6, r25	; 0x06
    2d0e:	8d 83       	std	Y+5, r24	; 0x05
    2d10:	0f c0       	rjmp	.+30     	; 0x2d30 <main+0x23e>
    2d12:	80 e9       	ldi	r24, 0x90	; 144
    2d14:	91 e0       	ldi	r25, 0x01	; 1
    2d16:	9c 83       	std	Y+4, r25	; 0x04
    2d18:	8b 83       	std	Y+3, r24	; 0x03
    2d1a:	8b 81       	ldd	r24, Y+3	; 0x03
    2d1c:	9c 81       	ldd	r25, Y+4	; 0x04
    2d1e:	01 97       	sbiw	r24, 0x01	; 1
    2d20:	f1 f7       	brne	.-4      	; 0x2d1e <main+0x22c>
    2d22:	9c 83       	std	Y+4, r25	; 0x04
    2d24:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d26:	8d 81       	ldd	r24, Y+5	; 0x05
    2d28:	9e 81       	ldd	r25, Y+6	; 0x06
    2d2a:	01 97       	sbiw	r24, 0x01	; 1
    2d2c:	9e 83       	std	Y+6, r25	; 0x06
    2d2e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d30:	8d 81       	ldd	r24, Y+5	; 0x05
    2d32:	9e 81       	ldd	r25, Y+6	; 0x06
    2d34:	00 97       	sbiw	r24, 0x00	; 0
    2d36:	69 f7       	brne	.-38     	; 0x2d12 <main+0x220>
    2d38:	14 c0       	rjmp	.+40     	; 0x2d62 <main+0x270>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d3a:	6f 81       	ldd	r22, Y+7	; 0x07
    2d3c:	78 85       	ldd	r23, Y+8	; 0x08
    2d3e:	89 85       	ldd	r24, Y+9	; 0x09
    2d40:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d42:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d46:	dc 01       	movw	r26, r24
    2d48:	cb 01       	movw	r24, r22
    2d4a:	9e 83       	std	Y+6, r25	; 0x06
    2d4c:	8d 83       	std	Y+5, r24	; 0x05
    2d4e:	8d 81       	ldd	r24, Y+5	; 0x05
    2d50:	9e 81       	ldd	r25, Y+6	; 0x06
    2d52:	9a 83       	std	Y+2, r25	; 0x02
    2d54:	89 83       	std	Y+1, r24	; 0x01
    2d56:	89 81       	ldd	r24, Y+1	; 0x01
    2d58:	9a 81       	ldd	r25, Y+2	; 0x02
    2d5a:	01 97       	sbiw	r24, 0x01	; 1
    2d5c:	f1 f7       	brne	.-4      	; 0x2d5a <main+0x268>
    2d5e:	9a 83       	std	Y+2, r25	; 0x02
    2d60:	89 83       	std	Y+1, r24	; 0x01
	while(1)
	{

		_delay_ms(500);
		temp = KEYPAD_getPressedKey();
    2d62:	0e 94 de 1b 	call	0x37bc	; 0x37bc <KEYPAD_getPressedKey>
    2d66:	88 2f       	mov	r24, r24
    2d68:	90 e0       	ldi	r25, 0x00	; 0
    2d6a:	9a a3       	std	Y+34, r25	; 0x22
    2d6c:	89 a3       	std	Y+33, r24	; 0x21
		if ((temp != '+') && (temp != '-') && (temp != '*') && (temp != '%') && (temp != '=') && (temp != 13))
    2d6e:	89 a1       	ldd	r24, Y+33	; 0x21
    2d70:	9a a1       	ldd	r25, Y+34	; 0x22
    2d72:	8b 32       	cpi	r24, 0x2B	; 43
    2d74:	91 05       	cpc	r25, r1
    2d76:	09 f4       	brne	.+2      	; 0x2d7a <main+0x288>
    2d78:	dc c0       	rjmp	.+440    	; 0x2f32 <main+0x440>
    2d7a:	89 a1       	ldd	r24, Y+33	; 0x21
    2d7c:	9a a1       	ldd	r25, Y+34	; 0x22
    2d7e:	8d 32       	cpi	r24, 0x2D	; 45
    2d80:	91 05       	cpc	r25, r1
    2d82:	09 f4       	brne	.+2      	; 0x2d86 <main+0x294>
    2d84:	d6 c0       	rjmp	.+428    	; 0x2f32 <main+0x440>
    2d86:	89 a1       	ldd	r24, Y+33	; 0x21
    2d88:	9a a1       	ldd	r25, Y+34	; 0x22
    2d8a:	8a 32       	cpi	r24, 0x2A	; 42
    2d8c:	91 05       	cpc	r25, r1
    2d8e:	09 f4       	brne	.+2      	; 0x2d92 <main+0x2a0>
    2d90:	d0 c0       	rjmp	.+416    	; 0x2f32 <main+0x440>
    2d92:	89 a1       	ldd	r24, Y+33	; 0x21
    2d94:	9a a1       	ldd	r25, Y+34	; 0x22
    2d96:	85 32       	cpi	r24, 0x25	; 37
    2d98:	91 05       	cpc	r25, r1
    2d9a:	09 f4       	brne	.+2      	; 0x2d9e <main+0x2ac>
    2d9c:	ca c0       	rjmp	.+404    	; 0x2f32 <main+0x440>
    2d9e:	89 a1       	ldd	r24, Y+33	; 0x21
    2da0:	9a a1       	ldd	r25, Y+34	; 0x22
    2da2:	8d 33       	cpi	r24, 0x3D	; 61
    2da4:	91 05       	cpc	r25, r1
    2da6:	09 f4       	brne	.+2      	; 0x2daa <main+0x2b8>
    2da8:	c4 c0       	rjmp	.+392    	; 0x2f32 <main+0x440>
    2daa:	89 a1       	ldd	r24, Y+33	; 0x21
    2dac:	9a a1       	ldd	r25, Y+34	; 0x22
    2dae:	8d 30       	cpi	r24, 0x0D	; 13
    2db0:	91 05       	cpc	r25, r1
    2db2:	09 f4       	brne	.+2      	; 0x2db6 <main+0x2c4>
    2db4:	be c0       	rjmp	.+380    	; 0x2f32 <main+0x440>
		{
			if(operator == '=')
    2db6:	8b a5       	ldd	r24, Y+43	; 0x2b
    2db8:	8d 33       	cpi	r24, 0x3D	; 61
    2dba:	21 f4       	brne	.+8      	; 0x2dc4 <main+0x2d2>
			{
				LCD_clearScreen();
    2dbc:	0e 94 71 28 	call	0x50e2	; 0x50e2 <LCD_clearScreen>
				operator = '!';
    2dc0:	81 e2       	ldi	r24, 0x21	; 33
    2dc2:	8b a7       	std	Y+43, r24	; 0x2b
			}
			switch(cnt)
    2dc4:	8f a9       	ldd	r24, Y+55	; 0x37
    2dc6:	e8 2f       	mov	r30, r24
    2dc8:	f0 e0       	ldi	r31, 0x00	; 0
    2dca:	fb af       	std	Y+59, r31	; 0x3b
    2dcc:	ea af       	std	Y+58, r30	; 0x3a
    2dce:	0a ad       	ldd	r16, Y+58	; 0x3a
    2dd0:	1b ad       	ldd	r17, Y+59	; 0x3b
    2dd2:	03 30       	cpi	r16, 0x03	; 3
    2dd4:	11 05       	cpc	r17, r1
    2dd6:	09 f4       	brne	.+2      	; 0x2dda <main+0x2e8>
    2dd8:	4b c0       	rjmp	.+150    	; 0x2e70 <main+0x37e>
    2dda:	2a ad       	ldd	r18, Y+58	; 0x3a
    2ddc:	3b ad       	ldd	r19, Y+59	; 0x3b
    2dde:	24 30       	cpi	r18, 0x04	; 4
    2de0:	31 05       	cpc	r19, r1
    2de2:	5c f4       	brge	.+22     	; 0x2dfa <main+0x308>
    2de4:	8a ad       	ldd	r24, Y+58	; 0x3a
    2de6:	9b ad       	ldd	r25, Y+59	; 0x3b
    2de8:	81 30       	cpi	r24, 0x01	; 1
    2dea:	91 05       	cpc	r25, r1
    2dec:	99 f0       	breq	.+38     	; 0x2e14 <main+0x322>
    2dee:	ea ad       	ldd	r30, Y+58	; 0x3a
    2df0:	fb ad       	ldd	r31, Y+59	; 0x3b
    2df2:	e2 30       	cpi	r30, 0x02	; 2
    2df4:	f1 05       	cpc	r31, r1
    2df6:	e1 f0       	breq	.+56     	; 0x2e30 <main+0x33e>
    2df8:	97 c0       	rjmp	.+302    	; 0x2f28 <main+0x436>
    2dfa:	0a ad       	ldd	r16, Y+58	; 0x3a
    2dfc:	1b ad       	ldd	r17, Y+59	; 0x3b
    2dfe:	04 30       	cpi	r16, 0x04	; 4
    2e00:	11 05       	cpc	r17, r1
    2e02:	09 f4       	brne	.+2      	; 0x2e06 <main+0x314>
    2e04:	55 c0       	rjmp	.+170    	; 0x2eb0 <main+0x3be>
    2e06:	2a ad       	ldd	r18, Y+58	; 0x3a
    2e08:	3b ad       	ldd	r19, Y+59	; 0x3b
    2e0a:	25 30       	cpi	r18, 0x05	; 5
    2e0c:	31 05       	cpc	r19, r1
    2e0e:	09 f4       	brne	.+2      	; 0x2e12 <main+0x320>
    2e10:	6f c0       	rjmp	.+222    	; 0x2ef0 <main+0x3fe>
    2e12:	8a c0       	rjmp	.+276    	; 0x2f28 <main+0x436>
			{
			case 1 : num = temp ;
    2e14:	89 a1       	ldd	r24, Y+33	; 0x21
    2e16:	9a a1       	ldd	r25, Y+34	; 0x22
    2e18:	aa 27       	eor	r26, r26
    2e1a:	97 fd       	sbrc	r25, 7
    2e1c:	a0 95       	com	r26
    2e1e:	ba 2f       	mov	r27, r26
    2e20:	8d 8f       	std	Y+29, r24	; 0x1d
    2e22:	9e 8f       	std	Y+30, r25	; 0x1e
    2e24:	af 8f       	std	Y+31, r26	; 0x1f
    2e26:	b8 a3       	std	Y+32, r27	; 0x20
			         cnt++;
    2e28:	8f a9       	ldd	r24, Y+55	; 0x37
    2e2a:	8f 5f       	subi	r24, 0xFF	; 255
    2e2c:	8f ab       	std	Y+55, r24	; 0x37
    2e2e:	7c c0       	rjmp	.+248    	; 0x2f28 <main+0x436>
			         break;
			case 2 : num = (num*10) + temp ;
    2e30:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e32:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e34:	af 8d       	ldd	r26, Y+31	; 0x1f
    2e36:	b8 a1       	ldd	r27, Y+32	; 0x20
    2e38:	2a e0       	ldi	r18, 0x0A	; 10
    2e3a:	30 e0       	ldi	r19, 0x00	; 0
    2e3c:	40 e0       	ldi	r20, 0x00	; 0
    2e3e:	50 e0       	ldi	r21, 0x00	; 0
    2e40:	bc 01       	movw	r22, r24
    2e42:	cd 01       	movw	r24, r26
    2e44:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    2e48:	9b 01       	movw	r18, r22
    2e4a:	ac 01       	movw	r20, r24
    2e4c:	89 a1       	ldd	r24, Y+33	; 0x21
    2e4e:	9a a1       	ldd	r25, Y+34	; 0x22
    2e50:	aa 27       	eor	r26, r26
    2e52:	97 fd       	sbrc	r25, 7
    2e54:	a0 95       	com	r26
    2e56:	ba 2f       	mov	r27, r26
    2e58:	82 0f       	add	r24, r18
    2e5a:	93 1f       	adc	r25, r19
    2e5c:	a4 1f       	adc	r26, r20
    2e5e:	b5 1f       	adc	r27, r21
    2e60:	8d 8f       	std	Y+29, r24	; 0x1d
    2e62:	9e 8f       	std	Y+30, r25	; 0x1e
    2e64:	af 8f       	std	Y+31, r26	; 0x1f
    2e66:	b8 a3       	std	Y+32, r27	; 0x20
			         cnt++;
    2e68:	8f a9       	ldd	r24, Y+55	; 0x37
    2e6a:	8f 5f       	subi	r24, 0xFF	; 255
    2e6c:	8f ab       	std	Y+55, r24	; 0x37
    2e6e:	5c c0       	rjmp	.+184    	; 0x2f28 <main+0x436>
					 break;
			case 3 : num = (num*10) + temp ;
    2e70:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e72:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e74:	af 8d       	ldd	r26, Y+31	; 0x1f
    2e76:	b8 a1       	ldd	r27, Y+32	; 0x20
    2e78:	2a e0       	ldi	r18, 0x0A	; 10
    2e7a:	30 e0       	ldi	r19, 0x00	; 0
    2e7c:	40 e0       	ldi	r20, 0x00	; 0
    2e7e:	50 e0       	ldi	r21, 0x00	; 0
    2e80:	bc 01       	movw	r22, r24
    2e82:	cd 01       	movw	r24, r26
    2e84:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    2e88:	9b 01       	movw	r18, r22
    2e8a:	ac 01       	movw	r20, r24
    2e8c:	89 a1       	ldd	r24, Y+33	; 0x21
    2e8e:	9a a1       	ldd	r25, Y+34	; 0x22
    2e90:	aa 27       	eor	r26, r26
    2e92:	97 fd       	sbrc	r25, 7
    2e94:	a0 95       	com	r26
    2e96:	ba 2f       	mov	r27, r26
    2e98:	82 0f       	add	r24, r18
    2e9a:	93 1f       	adc	r25, r19
    2e9c:	a4 1f       	adc	r26, r20
    2e9e:	b5 1f       	adc	r27, r21
    2ea0:	8d 8f       	std	Y+29, r24	; 0x1d
    2ea2:	9e 8f       	std	Y+30, r25	; 0x1e
    2ea4:	af 8f       	std	Y+31, r26	; 0x1f
    2ea6:	b8 a3       	std	Y+32, r27	; 0x20
			         cnt ++ ;
    2ea8:	8f a9       	ldd	r24, Y+55	; 0x37
    2eaa:	8f 5f       	subi	r24, 0xFF	; 255
    2eac:	8f ab       	std	Y+55, r24	; 0x37
    2eae:	3c c0       	rjmp	.+120    	; 0x2f28 <main+0x436>
					 break;
			case 4 : num = (num*10) + temp ;
    2eb0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2eb2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2eb4:	af 8d       	ldd	r26, Y+31	; 0x1f
    2eb6:	b8 a1       	ldd	r27, Y+32	; 0x20
    2eb8:	2a e0       	ldi	r18, 0x0A	; 10
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	40 e0       	ldi	r20, 0x00	; 0
    2ebe:	50 e0       	ldi	r21, 0x00	; 0
    2ec0:	bc 01       	movw	r22, r24
    2ec2:	cd 01       	movw	r24, r26
    2ec4:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    2ec8:	9b 01       	movw	r18, r22
    2eca:	ac 01       	movw	r20, r24
    2ecc:	89 a1       	ldd	r24, Y+33	; 0x21
    2ece:	9a a1       	ldd	r25, Y+34	; 0x22
    2ed0:	aa 27       	eor	r26, r26
    2ed2:	97 fd       	sbrc	r25, 7
    2ed4:	a0 95       	com	r26
    2ed6:	ba 2f       	mov	r27, r26
    2ed8:	82 0f       	add	r24, r18
    2eda:	93 1f       	adc	r25, r19
    2edc:	a4 1f       	adc	r26, r20
    2ede:	b5 1f       	adc	r27, r21
    2ee0:	8d 8f       	std	Y+29, r24	; 0x1d
    2ee2:	9e 8f       	std	Y+30, r25	; 0x1e
    2ee4:	af 8f       	std	Y+31, r26	; 0x1f
    2ee6:	b8 a3       	std	Y+32, r27	; 0x20
					 cnt ++ ;
    2ee8:	8f a9       	ldd	r24, Y+55	; 0x37
    2eea:	8f 5f       	subi	r24, 0xFF	; 255
    2eec:	8f ab       	std	Y+55, r24	; 0x37
    2eee:	1c c0       	rjmp	.+56     	; 0x2f28 <main+0x436>
					 break;
			case 5 : num = (num*10) + temp ;
    2ef0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ef2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2ef4:	af 8d       	ldd	r26, Y+31	; 0x1f
    2ef6:	b8 a1       	ldd	r27, Y+32	; 0x20
    2ef8:	2a e0       	ldi	r18, 0x0A	; 10
    2efa:	30 e0       	ldi	r19, 0x00	; 0
    2efc:	40 e0       	ldi	r20, 0x00	; 0
    2efe:	50 e0       	ldi	r21, 0x00	; 0
    2f00:	bc 01       	movw	r22, r24
    2f02:	cd 01       	movw	r24, r26
    2f04:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    2f08:	9b 01       	movw	r18, r22
    2f0a:	ac 01       	movw	r20, r24
    2f0c:	89 a1       	ldd	r24, Y+33	; 0x21
    2f0e:	9a a1       	ldd	r25, Y+34	; 0x22
    2f10:	aa 27       	eor	r26, r26
    2f12:	97 fd       	sbrc	r25, 7
    2f14:	a0 95       	com	r26
    2f16:	ba 2f       	mov	r27, r26
    2f18:	82 0f       	add	r24, r18
    2f1a:	93 1f       	adc	r25, r19
    2f1c:	a4 1f       	adc	r26, r20
    2f1e:	b5 1f       	adc	r27, r21
    2f20:	8d 8f       	std	Y+29, r24	; 0x1d
    2f22:	9e 8f       	std	Y+30, r25	; 0x1e
    2f24:	af 8f       	std	Y+31, r26	; 0x1f
    2f26:	b8 a3       	std	Y+32, r27	; 0x20
					 break;

			}

			LCD_intgerToString((int)temp);
    2f28:	89 a1       	ldd	r24, Y+33	; 0x21
    2f2a:	9a a1       	ldd	r25, Y+34	; 0x22
    2f2c:	0e 94 9e 27 	call	0x4f3c	; 0x4f3c <LCD_intgerToString>
    2f30:	a6 ce       	rjmp	.-692    	; 0x2c7e <main+0x18c>

		}
		else if( temp == '=' )
    2f32:	89 a1       	ldd	r24, Y+33	; 0x21
    2f34:	9a a1       	ldd	r25, Y+34	; 0x22
    2f36:	8d 33       	cpi	r24, 0x3D	; 61
    2f38:	91 05       	cpc	r25, r1
    2f3a:	09 f0       	breq	.+2      	; 0x2f3e <main+0x44c>
    2f3c:	bc c0       	rjmp	.+376    	; 0x30b6 <main+0x5c4>
		{
			switch(operator)
    2f3e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2f40:	e8 2f       	mov	r30, r24
    2f42:	f0 e0       	ldi	r31, 0x00	; 0
    2f44:	f9 af       	std	Y+57, r31	; 0x39
    2f46:	e8 af       	std	Y+56, r30	; 0x38
    2f48:	08 ad       	ldd	r16, Y+56	; 0x38
    2f4a:	19 ad       	ldd	r17, Y+57	; 0x39
    2f4c:	0a 32       	cpi	r16, 0x2A	; 42
    2f4e:	11 05       	cpc	r17, r1
    2f50:	09 f4       	brne	.+2      	; 0x2f54 <main+0x462>
    2f52:	49 c0       	rjmp	.+146    	; 0x2fe6 <main+0x4f4>
    2f54:	28 ad       	ldd	r18, Y+56	; 0x38
    2f56:	39 ad       	ldd	r19, Y+57	; 0x39
    2f58:	2b 32       	cpi	r18, 0x2B	; 43
    2f5a:	31 05       	cpc	r19, r1
    2f5c:	3c f4       	brge	.+14     	; 0x2f6c <main+0x47a>
    2f5e:	88 ad       	ldd	r24, Y+56	; 0x38
    2f60:	99 ad       	ldd	r25, Y+57	; 0x39
    2f62:	85 32       	cpi	r24, 0x25	; 37
    2f64:	91 05       	cpc	r25, r1
    2f66:	09 f4       	brne	.+2      	; 0x2f6a <main+0x478>
    2f68:	57 c0       	rjmp	.+174    	; 0x3018 <main+0x526>
    2f6a:	75 c0       	rjmp	.+234    	; 0x3056 <main+0x564>
    2f6c:	e8 ad       	ldd	r30, Y+56	; 0x38
    2f6e:	f9 ad       	ldd	r31, Y+57	; 0x39
    2f70:	eb 32       	cpi	r30, 0x2B	; 43
    2f72:	f1 05       	cpc	r31, r1
    2f74:	31 f0       	breq	.+12     	; 0x2f82 <main+0x490>
    2f76:	08 ad       	ldd	r16, Y+56	; 0x38
    2f78:	19 ad       	ldd	r17, Y+57	; 0x39
    2f7a:	0d 32       	cpi	r16, 0x2D	; 45
    2f7c:	11 05       	cpc	r17, r1
    2f7e:	c1 f0       	breq	.+48     	; 0x2fb0 <main+0x4be>
    2f80:	6a c0       	rjmp	.+212    	; 0x3056 <main+0x564>
			{
			case '+' : result = num + num2 ;
    2f82:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2f84:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2f86:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2f88:	58 a1       	ldd	r21, Y+32	; 0x20
    2f8a:	8f a1       	ldd	r24, Y+39	; 0x27
    2f8c:	98 a5       	ldd	r25, Y+40	; 0x28
    2f8e:	a9 a5       	ldd	r26, Y+41	; 0x29
    2f90:	ba a5       	ldd	r27, Y+42	; 0x2a
    2f92:	82 0f       	add	r24, r18
    2f94:	93 1f       	adc	r25, r19
    2f96:	a4 1f       	adc	r26, r20
    2f98:	b5 1f       	adc	r27, r21
    2f9a:	bc 01       	movw	r22, r24
    2f9c:	cd 01       	movw	r24, r26
    2f9e:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__floatsisf>
    2fa2:	dc 01       	movw	r26, r24
    2fa4:	cb 01       	movw	r24, r22
    2fa6:	8b a3       	std	Y+35, r24	; 0x23
    2fa8:	9c a3       	std	Y+36, r25	; 0x24
    2faa:	ad a3       	std	Y+37, r26	; 0x25
    2fac:	be a3       	std	Y+38, r27	; 0x26
    2fae:	61 c0       	rjmp	.+194    	; 0x3072 <main+0x580>
			           break;
			case '-' : result = num2 - num;
    2fb0:	2f a1       	ldd	r18, Y+39	; 0x27
    2fb2:	38 a5       	ldd	r19, Y+40	; 0x28
    2fb4:	49 a5       	ldd	r20, Y+41	; 0x29
    2fb6:	5a a5       	ldd	r21, Y+42	; 0x2a
    2fb8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2fba:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2fbc:	af 8d       	ldd	r26, Y+31	; 0x1f
    2fbe:	b8 a1       	ldd	r27, Y+32	; 0x20
    2fc0:	79 01       	movw	r14, r18
    2fc2:	8a 01       	movw	r16, r20
    2fc4:	e8 1a       	sub	r14, r24
    2fc6:	f9 0a       	sbc	r15, r25
    2fc8:	0a 0b       	sbc	r16, r26
    2fca:	1b 0b       	sbc	r17, r27
    2fcc:	d8 01       	movw	r26, r16
    2fce:	c7 01       	movw	r24, r14
    2fd0:	bc 01       	movw	r22, r24
    2fd2:	cd 01       	movw	r24, r26
    2fd4:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__floatsisf>
    2fd8:	dc 01       	movw	r26, r24
    2fda:	cb 01       	movw	r24, r22
    2fdc:	8b a3       	std	Y+35, r24	; 0x23
    2fde:	9c a3       	std	Y+36, r25	; 0x24
    2fe0:	ad a3       	std	Y+37, r26	; 0x25
    2fe2:	be a3       	std	Y+38, r27	; 0x26
    2fe4:	46 c0       	rjmp	.+140    	; 0x3072 <main+0x580>
					   break;
			case '*' : result = num * num2;
    2fe6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2fe8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2fea:	af 8d       	ldd	r26, Y+31	; 0x1f
    2fec:	b8 a1       	ldd	r27, Y+32	; 0x20
    2fee:	2f a1       	ldd	r18, Y+39	; 0x27
    2ff0:	38 a5       	ldd	r19, Y+40	; 0x28
    2ff2:	49 a5       	ldd	r20, Y+41	; 0x29
    2ff4:	5a a5       	ldd	r21, Y+42	; 0x2a
    2ff6:	bc 01       	movw	r22, r24
    2ff8:	cd 01       	movw	r24, r26
    2ffa:	0e 94 7b 28 	call	0x50f6	; 0x50f6 <__mulsi3>
    2ffe:	dc 01       	movw	r26, r24
    3000:	cb 01       	movw	r24, r22
    3002:	bc 01       	movw	r22, r24
    3004:	cd 01       	movw	r24, r26
    3006:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__floatsisf>
    300a:	dc 01       	movw	r26, r24
    300c:	cb 01       	movw	r24, r22
    300e:	8b a3       	std	Y+35, r24	; 0x23
    3010:	9c a3       	std	Y+36, r25	; 0x24
    3012:	ad a3       	std	Y+37, r26	; 0x25
    3014:	be a3       	std	Y+38, r27	; 0x26
    3016:	2d c0       	rjmp	.+90     	; 0x3072 <main+0x580>
					   break;
			case '%' : result = (float32)num2 / num;
    3018:	8f a1       	ldd	r24, Y+39	; 0x27
    301a:	98 a5       	ldd	r25, Y+40	; 0x28
    301c:	a9 a5       	ldd	r26, Y+41	; 0x29
    301e:	ba a5       	ldd	r27, Y+42	; 0x2a
    3020:	bc 01       	movw	r22, r24
    3022:	cd 01       	movw	r24, r26
    3024:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__floatsisf>
    3028:	7b 01       	movw	r14, r22
    302a:	8c 01       	movw	r16, r24
    302c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    302e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3030:	af 8d       	ldd	r26, Y+31	; 0x1f
    3032:	b8 a1       	ldd	r27, Y+32	; 0x20
    3034:	bc 01       	movw	r22, r24
    3036:	cd 01       	movw	r24, r26
    3038:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__floatsisf>
    303c:	9b 01       	movw	r18, r22
    303e:	ac 01       	movw	r20, r24
    3040:	c8 01       	movw	r24, r16
    3042:	b7 01       	movw	r22, r14
    3044:	0e 94 9e 10 	call	0x213c	; 0x213c <__divsf3>
    3048:	dc 01       	movw	r26, r24
    304a:	cb 01       	movw	r24, r22
    304c:	8b a3       	std	Y+35, r24	; 0x23
    304e:	9c a3       	std	Y+36, r25	; 0x24
    3050:	ad a3       	std	Y+37, r26	; 0x25
    3052:	be a3       	std	Y+38, r27	; 0x26
    3054:	0e c0       	rjmp	.+28     	; 0x3072 <main+0x580>
					   break;
			default : result = num ;
    3056:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3058:	9e 8d       	ldd	r25, Y+30	; 0x1e
    305a:	af 8d       	ldd	r26, Y+31	; 0x1f
    305c:	b8 a1       	ldd	r27, Y+32	; 0x20
    305e:	bc 01       	movw	r22, r24
    3060:	cd 01       	movw	r24, r26
    3062:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__floatsisf>
    3066:	dc 01       	movw	r26, r24
    3068:	cb 01       	movw	r24, r22
    306a:	8b a3       	std	Y+35, r24	; 0x23
    306c:	9c a3       	std	Y+36, r25	; 0x24
    306e:	ad a3       	std	Y+37, r26	; 0x25
    3070:	be a3       	std	Y+38, r27	; 0x26
			}
			cnt = 1;
    3072:	81 e0       	ldi	r24, 0x01	; 1
    3074:	8f ab       	std	Y+55, r24	; 0x37
			LCD_displayCharacter(temp);
    3076:	89 a1       	ldd	r24, Y+33	; 0x21
    3078:	9a a1       	ldd	r25, Y+34	; 0x22
    307a:	0e 94 9f 22 	call	0x453e	; 0x453e <LCD_displayCharacter>
			LCD_floatToString(result);
    307e:	8b a1       	ldd	r24, Y+35	; 0x23
    3080:	9c a1       	ldd	r25, Y+36	; 0x24
    3082:	ad a1       	ldd	r26, Y+37	; 0x25
    3084:	be a1       	ldd	r27, Y+38	; 0x26
    3086:	bc 01       	movw	r22, r24
    3088:	cd 01       	movw	r24, r26
    308a:	0e 94 c1 27 	call	0x4f82	; 0x4f82 <LCD_floatToString>
			result = 0 ;
    308e:	80 e0       	ldi	r24, 0x00	; 0
    3090:	90 e0       	ldi	r25, 0x00	; 0
    3092:	a0 e0       	ldi	r26, 0x00	; 0
    3094:	b0 e0       	ldi	r27, 0x00	; 0
    3096:	8b a3       	std	Y+35, r24	; 0x23
    3098:	9c a3       	std	Y+36, r25	; 0x24
    309a:	ad a3       	std	Y+37, r26	; 0x25
    309c:	be a3       	std	Y+38, r27	; 0x26
			num2 = 0 ;
    309e:	1f a2       	std	Y+39, r1	; 0x27
    30a0:	18 a6       	std	Y+40, r1	; 0x28
    30a2:	19 a6       	std	Y+41, r1	; 0x29
    30a4:	1a a6       	std	Y+42, r1	; 0x2a
			num = 0 ;
    30a6:	1d 8e       	std	Y+29, r1	; 0x1d
    30a8:	1e 8e       	std	Y+30, r1	; 0x1e
    30aa:	1f 8e       	std	Y+31, r1	; 0x1f
    30ac:	18 a2       	std	Y+32, r1	; 0x20
			operator = temp ;
    30ae:	89 a1       	ldd	r24, Y+33	; 0x21
    30b0:	9a a1       	ldd	r25, Y+34	; 0x22
    30b2:	8b a7       	std	Y+43, r24	; 0x2b
    30b4:	e4 cd       	rjmp	.-1080   	; 0x2c7e <main+0x18c>
		}
		else if((temp == '+') || (temp == '-') || (temp == '*') || (temp == '%'))
    30b6:	89 a1       	ldd	r24, Y+33	; 0x21
    30b8:	9a a1       	ldd	r25, Y+34	; 0x22
    30ba:	8b 32       	cpi	r24, 0x2B	; 43
    30bc:	91 05       	cpc	r25, r1
    30be:	79 f0       	breq	.+30     	; 0x30de <main+0x5ec>
    30c0:	89 a1       	ldd	r24, Y+33	; 0x21
    30c2:	9a a1       	ldd	r25, Y+34	; 0x22
    30c4:	8d 32       	cpi	r24, 0x2D	; 45
    30c6:	91 05       	cpc	r25, r1
    30c8:	51 f0       	breq	.+20     	; 0x30de <main+0x5ec>
    30ca:	89 a1       	ldd	r24, Y+33	; 0x21
    30cc:	9a a1       	ldd	r25, Y+34	; 0x22
    30ce:	8a 32       	cpi	r24, 0x2A	; 42
    30d0:	91 05       	cpc	r25, r1
    30d2:	29 f0       	breq	.+10     	; 0x30de <main+0x5ec>
    30d4:	89 a1       	ldd	r24, Y+33	; 0x21
    30d6:	9a a1       	ldd	r25, Y+34	; 0x22
    30d8:	85 32       	cpi	r24, 0x25	; 37
    30da:	91 05       	cpc	r25, r1
    30dc:	b1 f4       	brne	.+44     	; 0x310a <main+0x618>
		{
			cnt = 1;
    30de:	81 e0       	ldi	r24, 0x01	; 1
    30e0:	8f ab       	std	Y+55, r24	; 0x37
			num2 = num ;
    30e2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    30e4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    30e6:	af 8d       	ldd	r26, Y+31	; 0x1f
    30e8:	b8 a1       	ldd	r27, Y+32	; 0x20
    30ea:	8f a3       	std	Y+39, r24	; 0x27
    30ec:	98 a7       	std	Y+40, r25	; 0x28
    30ee:	a9 a7       	std	Y+41, r26	; 0x29
    30f0:	ba a7       	std	Y+42, r27	; 0x2a
			num = 0;
    30f2:	1d 8e       	std	Y+29, r1	; 0x1d
    30f4:	1e 8e       	std	Y+30, r1	; 0x1e
    30f6:	1f 8e       	std	Y+31, r1	; 0x1f
    30f8:	18 a2       	std	Y+32, r1	; 0x20
			operator = temp ;
    30fa:	89 a1       	ldd	r24, Y+33	; 0x21
    30fc:	9a a1       	ldd	r25, Y+34	; 0x22
    30fe:	8b a7       	std	Y+43, r24	; 0x2b
			LCD_displayCharacter(temp);
    3100:	89 a1       	ldd	r24, Y+33	; 0x21
    3102:	9a a1       	ldd	r25, Y+34	; 0x22
    3104:	0e 94 9f 22 	call	0x453e	; 0x453e <LCD_displayCharacter>
    3108:	ba cd       	rjmp	.-1164   	; 0x2c7e <main+0x18c>
		}
		else if (temp == 13)
    310a:	89 a1       	ldd	r24, Y+33	; 0x21
    310c:	9a a1       	ldd	r25, Y+34	; 0x22
    310e:	8d 30       	cpi	r24, 0x0D	; 13
    3110:	91 05       	cpc	r25, r1
    3112:	09 f0       	breq	.+2      	; 0x3116 <main+0x624>
    3114:	b4 cd       	rjmp	.-1176   	; 0x2c7e <main+0x18c>
		{
		    LCD_clearScreen();
    3116:	0e 94 71 28 	call	0x50e2	; 0x50e2 <LCD_clearScreen>
		    cnt = 1;
    311a:	81 e0       	ldi	r24, 0x01	; 1
    311c:	8f ab       	std	Y+55, r24	; 0x37
		    num2 = 0 ;
    311e:	1f a2       	std	Y+39, r1	; 0x27
    3120:	18 a6       	std	Y+40, r1	; 0x28
    3122:	19 a6       	std	Y+41, r1	; 0x29
    3124:	1a a6       	std	Y+42, r1	; 0x2a
		    num = 0;
    3126:	1d 8e       	std	Y+29, r1	; 0x1d
    3128:	1e 8e       	std	Y+30, r1	; 0x1e
    312a:	1f 8e       	std	Y+31, r1	; 0x1f
    312c:	18 a2       	std	Y+32, r1	; 0x20
		    result = 0;
    312e:	80 e0       	ldi	r24, 0x00	; 0
    3130:	90 e0       	ldi	r25, 0x00	; 0
    3132:	a0 e0       	ldi	r26, 0x00	; 0
    3134:	b0 e0       	ldi	r27, 0x00	; 0
    3136:	8b a3       	std	Y+35, r24	; 0x23
    3138:	9c a3       	std	Y+36, r25	; 0x24
    313a:	ad a3       	std	Y+37, r26	; 0x25
    313c:	be a3       	std	Y+38, r27	; 0x26
    313e:	9f cd       	rjmp	.-1218   	; 0x2c7e <main+0x18c>

00003140 <GPIO_setupPinDirection>:
 * Description :
 * Setup the direction of the required pin input/output.
 * If the input port number or pin number are not correct, The function will not handle the request.
 */
void GPIO_setupPinDirection(uint8 port_num, uint8 pin_num, GPIO_PinDirectionType direction)
{
    3140:	df 93       	push	r29
    3142:	cf 93       	push	r28
    3144:	00 d0       	rcall	.+0      	; 0x3146 <GPIO_setupPinDirection+0x6>
    3146:	00 d0       	rcall	.+0      	; 0x3148 <GPIO_setupPinDirection+0x8>
    3148:	0f 92       	push	r0
    314a:	cd b7       	in	r28, 0x3d	; 61
    314c:	de b7       	in	r29, 0x3e	; 62
    314e:	89 83       	std	Y+1, r24	; 0x01
    3150:	6a 83       	std	Y+2, r22	; 0x02
    3152:	4b 83       	std	Y+3, r20	; 0x03
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    3154:	8a 81       	ldd	r24, Y+2	; 0x02
    3156:	88 30       	cpi	r24, 0x08	; 8
    3158:	08 f0       	brcs	.+2      	; 0x315c <GPIO_setupPinDirection+0x1c>
    315a:	d5 c0       	rjmp	.+426    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
    315c:	89 81       	ldd	r24, Y+1	; 0x01
    315e:	84 30       	cpi	r24, 0x04	; 4
    3160:	08 f0       	brcs	.+2      	; 0x3164 <GPIO_setupPinDirection+0x24>
    3162:	d1 c0       	rjmp	.+418    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
		/* Do Nothing */
	}
	else
	{
		/* Setup the pin direction as required */
		switch(port_num)
    3164:	89 81       	ldd	r24, Y+1	; 0x01
    3166:	28 2f       	mov	r18, r24
    3168:	30 e0       	ldi	r19, 0x00	; 0
    316a:	3d 83       	std	Y+5, r19	; 0x05
    316c:	2c 83       	std	Y+4, r18	; 0x04
    316e:	8c 81       	ldd	r24, Y+4	; 0x04
    3170:	9d 81       	ldd	r25, Y+5	; 0x05
    3172:	81 30       	cpi	r24, 0x01	; 1
    3174:	91 05       	cpc	r25, r1
    3176:	09 f4       	brne	.+2      	; 0x317a <GPIO_setupPinDirection+0x3a>
    3178:	43 c0       	rjmp	.+134    	; 0x3200 <GPIO_setupPinDirection+0xc0>
    317a:	2c 81       	ldd	r18, Y+4	; 0x04
    317c:	3d 81       	ldd	r19, Y+5	; 0x05
    317e:	22 30       	cpi	r18, 0x02	; 2
    3180:	31 05       	cpc	r19, r1
    3182:	2c f4       	brge	.+10     	; 0x318e <GPIO_setupPinDirection+0x4e>
    3184:	8c 81       	ldd	r24, Y+4	; 0x04
    3186:	9d 81       	ldd	r25, Y+5	; 0x05
    3188:	00 97       	sbiw	r24, 0x00	; 0
    318a:	71 f0       	breq	.+28     	; 0x31a8 <GPIO_setupPinDirection+0x68>
    318c:	bc c0       	rjmp	.+376    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
    318e:	2c 81       	ldd	r18, Y+4	; 0x04
    3190:	3d 81       	ldd	r19, Y+5	; 0x05
    3192:	22 30       	cpi	r18, 0x02	; 2
    3194:	31 05       	cpc	r19, r1
    3196:	09 f4       	brne	.+2      	; 0x319a <GPIO_setupPinDirection+0x5a>
    3198:	5f c0       	rjmp	.+190    	; 0x3258 <GPIO_setupPinDirection+0x118>
    319a:	8c 81       	ldd	r24, Y+4	; 0x04
    319c:	9d 81       	ldd	r25, Y+5	; 0x05
    319e:	83 30       	cpi	r24, 0x03	; 3
    31a0:	91 05       	cpc	r25, r1
    31a2:	09 f4       	brne	.+2      	; 0x31a6 <GPIO_setupPinDirection+0x66>
    31a4:	85 c0       	rjmp	.+266    	; 0x32b0 <GPIO_setupPinDirection+0x170>
    31a6:	af c0       	rjmp	.+350    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
		{
		case PORTA_ID:
			if(direction == PIN_OUTPUT)
    31a8:	8b 81       	ldd	r24, Y+3	; 0x03
    31aa:	81 30       	cpi	r24, 0x01	; 1
    31ac:	a1 f4       	brne	.+40     	; 0x31d6 <GPIO_setupPinDirection+0x96>
			{
				SET_BIT(DDRA,pin_num);
    31ae:	aa e3       	ldi	r26, 0x3A	; 58
    31b0:	b0 e0       	ldi	r27, 0x00	; 0
    31b2:	ea e3       	ldi	r30, 0x3A	; 58
    31b4:	f0 e0       	ldi	r31, 0x00	; 0
    31b6:	80 81       	ld	r24, Z
    31b8:	48 2f       	mov	r20, r24
    31ba:	8a 81       	ldd	r24, Y+2	; 0x02
    31bc:	28 2f       	mov	r18, r24
    31be:	30 e0       	ldi	r19, 0x00	; 0
    31c0:	81 e0       	ldi	r24, 0x01	; 1
    31c2:	90 e0       	ldi	r25, 0x00	; 0
    31c4:	02 2e       	mov	r0, r18
    31c6:	02 c0       	rjmp	.+4      	; 0x31cc <GPIO_setupPinDirection+0x8c>
    31c8:	88 0f       	add	r24, r24
    31ca:	99 1f       	adc	r25, r25
    31cc:	0a 94       	dec	r0
    31ce:	e2 f7       	brpl	.-8      	; 0x31c8 <GPIO_setupPinDirection+0x88>
    31d0:	84 2b       	or	r24, r20
    31d2:	8c 93       	st	X, r24
    31d4:	98 c0       	rjmp	.+304    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRA,pin_num);
    31d6:	aa e3       	ldi	r26, 0x3A	; 58
    31d8:	b0 e0       	ldi	r27, 0x00	; 0
    31da:	ea e3       	ldi	r30, 0x3A	; 58
    31dc:	f0 e0       	ldi	r31, 0x00	; 0
    31de:	80 81       	ld	r24, Z
    31e0:	48 2f       	mov	r20, r24
    31e2:	8a 81       	ldd	r24, Y+2	; 0x02
    31e4:	28 2f       	mov	r18, r24
    31e6:	30 e0       	ldi	r19, 0x00	; 0
    31e8:	81 e0       	ldi	r24, 0x01	; 1
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	02 2e       	mov	r0, r18
    31ee:	02 c0       	rjmp	.+4      	; 0x31f4 <GPIO_setupPinDirection+0xb4>
    31f0:	88 0f       	add	r24, r24
    31f2:	99 1f       	adc	r25, r25
    31f4:	0a 94       	dec	r0
    31f6:	e2 f7       	brpl	.-8      	; 0x31f0 <GPIO_setupPinDirection+0xb0>
    31f8:	80 95       	com	r24
    31fa:	84 23       	and	r24, r20
    31fc:	8c 93       	st	X, r24
    31fe:	83 c0       	rjmp	.+262    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTB_ID:
			if(direction == PIN_OUTPUT)
    3200:	8b 81       	ldd	r24, Y+3	; 0x03
    3202:	81 30       	cpi	r24, 0x01	; 1
    3204:	a1 f4       	brne	.+40     	; 0x322e <GPIO_setupPinDirection+0xee>
			{
				SET_BIT(DDRB,pin_num);
    3206:	a7 e3       	ldi	r26, 0x37	; 55
    3208:	b0 e0       	ldi	r27, 0x00	; 0
    320a:	e7 e3       	ldi	r30, 0x37	; 55
    320c:	f0 e0       	ldi	r31, 0x00	; 0
    320e:	80 81       	ld	r24, Z
    3210:	48 2f       	mov	r20, r24
    3212:	8a 81       	ldd	r24, Y+2	; 0x02
    3214:	28 2f       	mov	r18, r24
    3216:	30 e0       	ldi	r19, 0x00	; 0
    3218:	81 e0       	ldi	r24, 0x01	; 1
    321a:	90 e0       	ldi	r25, 0x00	; 0
    321c:	02 2e       	mov	r0, r18
    321e:	02 c0       	rjmp	.+4      	; 0x3224 <GPIO_setupPinDirection+0xe4>
    3220:	88 0f       	add	r24, r24
    3222:	99 1f       	adc	r25, r25
    3224:	0a 94       	dec	r0
    3226:	e2 f7       	brpl	.-8      	; 0x3220 <GPIO_setupPinDirection+0xe0>
    3228:	84 2b       	or	r24, r20
    322a:	8c 93       	st	X, r24
    322c:	6c c0       	rjmp	.+216    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRB,pin_num);
    322e:	a7 e3       	ldi	r26, 0x37	; 55
    3230:	b0 e0       	ldi	r27, 0x00	; 0
    3232:	e7 e3       	ldi	r30, 0x37	; 55
    3234:	f0 e0       	ldi	r31, 0x00	; 0
    3236:	80 81       	ld	r24, Z
    3238:	48 2f       	mov	r20, r24
    323a:	8a 81       	ldd	r24, Y+2	; 0x02
    323c:	28 2f       	mov	r18, r24
    323e:	30 e0       	ldi	r19, 0x00	; 0
    3240:	81 e0       	ldi	r24, 0x01	; 1
    3242:	90 e0       	ldi	r25, 0x00	; 0
    3244:	02 2e       	mov	r0, r18
    3246:	02 c0       	rjmp	.+4      	; 0x324c <GPIO_setupPinDirection+0x10c>
    3248:	88 0f       	add	r24, r24
    324a:	99 1f       	adc	r25, r25
    324c:	0a 94       	dec	r0
    324e:	e2 f7       	brpl	.-8      	; 0x3248 <GPIO_setupPinDirection+0x108>
    3250:	80 95       	com	r24
    3252:	84 23       	and	r24, r20
    3254:	8c 93       	st	X, r24
    3256:	57 c0       	rjmp	.+174    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTC_ID:
			if(direction == PIN_OUTPUT)
    3258:	8b 81       	ldd	r24, Y+3	; 0x03
    325a:	81 30       	cpi	r24, 0x01	; 1
    325c:	a1 f4       	brne	.+40     	; 0x3286 <GPIO_setupPinDirection+0x146>
			{
				SET_BIT(DDRC,pin_num);
    325e:	a4 e3       	ldi	r26, 0x34	; 52
    3260:	b0 e0       	ldi	r27, 0x00	; 0
    3262:	e4 e3       	ldi	r30, 0x34	; 52
    3264:	f0 e0       	ldi	r31, 0x00	; 0
    3266:	80 81       	ld	r24, Z
    3268:	48 2f       	mov	r20, r24
    326a:	8a 81       	ldd	r24, Y+2	; 0x02
    326c:	28 2f       	mov	r18, r24
    326e:	30 e0       	ldi	r19, 0x00	; 0
    3270:	81 e0       	ldi	r24, 0x01	; 1
    3272:	90 e0       	ldi	r25, 0x00	; 0
    3274:	02 2e       	mov	r0, r18
    3276:	02 c0       	rjmp	.+4      	; 0x327c <GPIO_setupPinDirection+0x13c>
    3278:	88 0f       	add	r24, r24
    327a:	99 1f       	adc	r25, r25
    327c:	0a 94       	dec	r0
    327e:	e2 f7       	brpl	.-8      	; 0x3278 <GPIO_setupPinDirection+0x138>
    3280:	84 2b       	or	r24, r20
    3282:	8c 93       	st	X, r24
    3284:	40 c0       	rjmp	.+128    	; 0x3306 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRC,pin_num);
    3286:	a4 e3       	ldi	r26, 0x34	; 52
    3288:	b0 e0       	ldi	r27, 0x00	; 0
    328a:	e4 e3       	ldi	r30, 0x34	; 52
    328c:	f0 e0       	ldi	r31, 0x00	; 0
    328e:	80 81       	ld	r24, Z
    3290:	48 2f       	mov	r20, r24
    3292:	8a 81       	ldd	r24, Y+2	; 0x02
    3294:	28 2f       	mov	r18, r24
    3296:	30 e0       	ldi	r19, 0x00	; 0
    3298:	81 e0       	ldi	r24, 0x01	; 1
    329a:	90 e0       	ldi	r25, 0x00	; 0
    329c:	02 2e       	mov	r0, r18
    329e:	02 c0       	rjmp	.+4      	; 0x32a4 <GPIO_setupPinDirection+0x164>
    32a0:	88 0f       	add	r24, r24
    32a2:	99 1f       	adc	r25, r25
    32a4:	0a 94       	dec	r0
    32a6:	e2 f7       	brpl	.-8      	; 0x32a0 <GPIO_setupPinDirection+0x160>
    32a8:	80 95       	com	r24
    32aa:	84 23       	and	r24, r20
    32ac:	8c 93       	st	X, r24
    32ae:	2b c0       	rjmp	.+86     	; 0x3306 <GPIO_setupPinDirection+0x1c6>
			}
			break;
		case PORTD_ID:
			if(direction == PIN_OUTPUT)
    32b0:	8b 81       	ldd	r24, Y+3	; 0x03
    32b2:	81 30       	cpi	r24, 0x01	; 1
    32b4:	a1 f4       	brne	.+40     	; 0x32de <GPIO_setupPinDirection+0x19e>
			{
				SET_BIT(DDRD,pin_num);
    32b6:	a1 e3       	ldi	r26, 0x31	; 49
    32b8:	b0 e0       	ldi	r27, 0x00	; 0
    32ba:	e1 e3       	ldi	r30, 0x31	; 49
    32bc:	f0 e0       	ldi	r31, 0x00	; 0
    32be:	80 81       	ld	r24, Z
    32c0:	48 2f       	mov	r20, r24
    32c2:	8a 81       	ldd	r24, Y+2	; 0x02
    32c4:	28 2f       	mov	r18, r24
    32c6:	30 e0       	ldi	r19, 0x00	; 0
    32c8:	81 e0       	ldi	r24, 0x01	; 1
    32ca:	90 e0       	ldi	r25, 0x00	; 0
    32cc:	02 2e       	mov	r0, r18
    32ce:	02 c0       	rjmp	.+4      	; 0x32d4 <GPIO_setupPinDirection+0x194>
    32d0:	88 0f       	add	r24, r24
    32d2:	99 1f       	adc	r25, r25
    32d4:	0a 94       	dec	r0
    32d6:	e2 f7       	brpl	.-8      	; 0x32d0 <GPIO_setupPinDirection+0x190>
    32d8:	84 2b       	or	r24, r20
    32da:	8c 93       	st	X, r24
    32dc:	14 c0       	rjmp	.+40     	; 0x3306 <GPIO_setupPinDirection+0x1c6>
			}
			else
			{
				CLEAR_BIT(DDRD,pin_num);
    32de:	a1 e3       	ldi	r26, 0x31	; 49
    32e0:	b0 e0       	ldi	r27, 0x00	; 0
    32e2:	e1 e3       	ldi	r30, 0x31	; 49
    32e4:	f0 e0       	ldi	r31, 0x00	; 0
    32e6:	80 81       	ld	r24, Z
    32e8:	48 2f       	mov	r20, r24
    32ea:	8a 81       	ldd	r24, Y+2	; 0x02
    32ec:	28 2f       	mov	r18, r24
    32ee:	30 e0       	ldi	r19, 0x00	; 0
    32f0:	81 e0       	ldi	r24, 0x01	; 1
    32f2:	90 e0       	ldi	r25, 0x00	; 0
    32f4:	02 2e       	mov	r0, r18
    32f6:	02 c0       	rjmp	.+4      	; 0x32fc <GPIO_setupPinDirection+0x1bc>
    32f8:	88 0f       	add	r24, r24
    32fa:	99 1f       	adc	r25, r25
    32fc:	0a 94       	dec	r0
    32fe:	e2 f7       	brpl	.-8      	; 0x32f8 <GPIO_setupPinDirection+0x1b8>
    3300:	80 95       	com	r24
    3302:	84 23       	and	r24, r20
    3304:	8c 93       	st	X, r24
			}
			break;
		}
	}
}
    3306:	0f 90       	pop	r0
    3308:	0f 90       	pop	r0
    330a:	0f 90       	pop	r0
    330c:	0f 90       	pop	r0
    330e:	0f 90       	pop	r0
    3310:	cf 91       	pop	r28
    3312:	df 91       	pop	r29
    3314:	08 95       	ret

00003316 <GPIO_writePin>:
 * Write the value Logic High or Logic Low on the required pin.
 * If the input port number or pin number are not correct, The function will not handle the request.
 * If the pin is input, this function will enable/disable the internal pull-up resistor.
 */
void GPIO_writePin(uint8 port_num, uint8 pin_num, uint8 value)
{
    3316:	df 93       	push	r29
    3318:	cf 93       	push	r28
    331a:	00 d0       	rcall	.+0      	; 0x331c <GPIO_writePin+0x6>
    331c:	00 d0       	rcall	.+0      	; 0x331e <GPIO_writePin+0x8>
    331e:	0f 92       	push	r0
    3320:	cd b7       	in	r28, 0x3d	; 61
    3322:	de b7       	in	r29, 0x3e	; 62
    3324:	89 83       	std	Y+1, r24	; 0x01
    3326:	6a 83       	std	Y+2, r22	; 0x02
    3328:	4b 83       	std	Y+3, r20	; 0x03
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    332a:	8a 81       	ldd	r24, Y+2	; 0x02
    332c:	88 30       	cpi	r24, 0x08	; 8
    332e:	08 f0       	brcs	.+2      	; 0x3332 <GPIO_writePin+0x1c>
    3330:	d5 c0       	rjmp	.+426    	; 0x34dc <GPIO_writePin+0x1c6>
    3332:	89 81       	ldd	r24, Y+1	; 0x01
    3334:	84 30       	cpi	r24, 0x04	; 4
    3336:	08 f0       	brcs	.+2      	; 0x333a <GPIO_writePin+0x24>
    3338:	d1 c0       	rjmp	.+418    	; 0x34dc <GPIO_writePin+0x1c6>
		/* Do Nothing */
	}
	else
	{
		/* Write the pin value as required */
		switch(port_num)
    333a:	89 81       	ldd	r24, Y+1	; 0x01
    333c:	28 2f       	mov	r18, r24
    333e:	30 e0       	ldi	r19, 0x00	; 0
    3340:	3d 83       	std	Y+5, r19	; 0x05
    3342:	2c 83       	std	Y+4, r18	; 0x04
    3344:	8c 81       	ldd	r24, Y+4	; 0x04
    3346:	9d 81       	ldd	r25, Y+5	; 0x05
    3348:	81 30       	cpi	r24, 0x01	; 1
    334a:	91 05       	cpc	r25, r1
    334c:	09 f4       	brne	.+2      	; 0x3350 <GPIO_writePin+0x3a>
    334e:	43 c0       	rjmp	.+134    	; 0x33d6 <GPIO_writePin+0xc0>
    3350:	2c 81       	ldd	r18, Y+4	; 0x04
    3352:	3d 81       	ldd	r19, Y+5	; 0x05
    3354:	22 30       	cpi	r18, 0x02	; 2
    3356:	31 05       	cpc	r19, r1
    3358:	2c f4       	brge	.+10     	; 0x3364 <GPIO_writePin+0x4e>
    335a:	8c 81       	ldd	r24, Y+4	; 0x04
    335c:	9d 81       	ldd	r25, Y+5	; 0x05
    335e:	00 97       	sbiw	r24, 0x00	; 0
    3360:	71 f0       	breq	.+28     	; 0x337e <GPIO_writePin+0x68>
    3362:	bc c0       	rjmp	.+376    	; 0x34dc <GPIO_writePin+0x1c6>
    3364:	2c 81       	ldd	r18, Y+4	; 0x04
    3366:	3d 81       	ldd	r19, Y+5	; 0x05
    3368:	22 30       	cpi	r18, 0x02	; 2
    336a:	31 05       	cpc	r19, r1
    336c:	09 f4       	brne	.+2      	; 0x3370 <GPIO_writePin+0x5a>
    336e:	5f c0       	rjmp	.+190    	; 0x342e <GPIO_writePin+0x118>
    3370:	8c 81       	ldd	r24, Y+4	; 0x04
    3372:	9d 81       	ldd	r25, Y+5	; 0x05
    3374:	83 30       	cpi	r24, 0x03	; 3
    3376:	91 05       	cpc	r25, r1
    3378:	09 f4       	brne	.+2      	; 0x337c <GPIO_writePin+0x66>
    337a:	85 c0       	rjmp	.+266    	; 0x3486 <GPIO_writePin+0x170>
    337c:	af c0       	rjmp	.+350    	; 0x34dc <GPIO_writePin+0x1c6>
		{
		case PORTA_ID:
			if(value == LOGIC_HIGH)
    337e:	8b 81       	ldd	r24, Y+3	; 0x03
    3380:	81 30       	cpi	r24, 0x01	; 1
    3382:	a1 f4       	brne	.+40     	; 0x33ac <GPIO_writePin+0x96>
			{
				SET_BIT(PORTA,pin_num);
    3384:	ab e3       	ldi	r26, 0x3B	; 59
    3386:	b0 e0       	ldi	r27, 0x00	; 0
    3388:	eb e3       	ldi	r30, 0x3B	; 59
    338a:	f0 e0       	ldi	r31, 0x00	; 0
    338c:	80 81       	ld	r24, Z
    338e:	48 2f       	mov	r20, r24
    3390:	8a 81       	ldd	r24, Y+2	; 0x02
    3392:	28 2f       	mov	r18, r24
    3394:	30 e0       	ldi	r19, 0x00	; 0
    3396:	81 e0       	ldi	r24, 0x01	; 1
    3398:	90 e0       	ldi	r25, 0x00	; 0
    339a:	02 2e       	mov	r0, r18
    339c:	02 c0       	rjmp	.+4      	; 0x33a2 <GPIO_writePin+0x8c>
    339e:	88 0f       	add	r24, r24
    33a0:	99 1f       	adc	r25, r25
    33a2:	0a 94       	dec	r0
    33a4:	e2 f7       	brpl	.-8      	; 0x339e <GPIO_writePin+0x88>
    33a6:	84 2b       	or	r24, r20
    33a8:	8c 93       	st	X, r24
    33aa:	98 c0       	rjmp	.+304    	; 0x34dc <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTA,pin_num);
    33ac:	ab e3       	ldi	r26, 0x3B	; 59
    33ae:	b0 e0       	ldi	r27, 0x00	; 0
    33b0:	eb e3       	ldi	r30, 0x3B	; 59
    33b2:	f0 e0       	ldi	r31, 0x00	; 0
    33b4:	80 81       	ld	r24, Z
    33b6:	48 2f       	mov	r20, r24
    33b8:	8a 81       	ldd	r24, Y+2	; 0x02
    33ba:	28 2f       	mov	r18, r24
    33bc:	30 e0       	ldi	r19, 0x00	; 0
    33be:	81 e0       	ldi	r24, 0x01	; 1
    33c0:	90 e0       	ldi	r25, 0x00	; 0
    33c2:	02 2e       	mov	r0, r18
    33c4:	02 c0       	rjmp	.+4      	; 0x33ca <GPIO_writePin+0xb4>
    33c6:	88 0f       	add	r24, r24
    33c8:	99 1f       	adc	r25, r25
    33ca:	0a 94       	dec	r0
    33cc:	e2 f7       	brpl	.-8      	; 0x33c6 <GPIO_writePin+0xb0>
    33ce:	80 95       	com	r24
    33d0:	84 23       	and	r24, r20
    33d2:	8c 93       	st	X, r24
    33d4:	83 c0       	rjmp	.+262    	; 0x34dc <GPIO_writePin+0x1c6>
			}
			break;
		case PORTB_ID:
			if(value == LOGIC_HIGH)
    33d6:	8b 81       	ldd	r24, Y+3	; 0x03
    33d8:	81 30       	cpi	r24, 0x01	; 1
    33da:	a1 f4       	brne	.+40     	; 0x3404 <GPIO_writePin+0xee>
			{
				SET_BIT(PORTB,pin_num);
    33dc:	a8 e3       	ldi	r26, 0x38	; 56
    33de:	b0 e0       	ldi	r27, 0x00	; 0
    33e0:	e8 e3       	ldi	r30, 0x38	; 56
    33e2:	f0 e0       	ldi	r31, 0x00	; 0
    33e4:	80 81       	ld	r24, Z
    33e6:	48 2f       	mov	r20, r24
    33e8:	8a 81       	ldd	r24, Y+2	; 0x02
    33ea:	28 2f       	mov	r18, r24
    33ec:	30 e0       	ldi	r19, 0x00	; 0
    33ee:	81 e0       	ldi	r24, 0x01	; 1
    33f0:	90 e0       	ldi	r25, 0x00	; 0
    33f2:	02 2e       	mov	r0, r18
    33f4:	02 c0       	rjmp	.+4      	; 0x33fa <GPIO_writePin+0xe4>
    33f6:	88 0f       	add	r24, r24
    33f8:	99 1f       	adc	r25, r25
    33fa:	0a 94       	dec	r0
    33fc:	e2 f7       	brpl	.-8      	; 0x33f6 <GPIO_writePin+0xe0>
    33fe:	84 2b       	or	r24, r20
    3400:	8c 93       	st	X, r24
    3402:	6c c0       	rjmp	.+216    	; 0x34dc <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTB,pin_num);
    3404:	a8 e3       	ldi	r26, 0x38	; 56
    3406:	b0 e0       	ldi	r27, 0x00	; 0
    3408:	e8 e3       	ldi	r30, 0x38	; 56
    340a:	f0 e0       	ldi	r31, 0x00	; 0
    340c:	80 81       	ld	r24, Z
    340e:	48 2f       	mov	r20, r24
    3410:	8a 81       	ldd	r24, Y+2	; 0x02
    3412:	28 2f       	mov	r18, r24
    3414:	30 e0       	ldi	r19, 0x00	; 0
    3416:	81 e0       	ldi	r24, 0x01	; 1
    3418:	90 e0       	ldi	r25, 0x00	; 0
    341a:	02 2e       	mov	r0, r18
    341c:	02 c0       	rjmp	.+4      	; 0x3422 <GPIO_writePin+0x10c>
    341e:	88 0f       	add	r24, r24
    3420:	99 1f       	adc	r25, r25
    3422:	0a 94       	dec	r0
    3424:	e2 f7       	brpl	.-8      	; 0x341e <GPIO_writePin+0x108>
    3426:	80 95       	com	r24
    3428:	84 23       	and	r24, r20
    342a:	8c 93       	st	X, r24
    342c:	57 c0       	rjmp	.+174    	; 0x34dc <GPIO_writePin+0x1c6>
			}
			break;
		case PORTC_ID:
			if(value == LOGIC_HIGH)
    342e:	8b 81       	ldd	r24, Y+3	; 0x03
    3430:	81 30       	cpi	r24, 0x01	; 1
    3432:	a1 f4       	brne	.+40     	; 0x345c <GPIO_writePin+0x146>
			{
				SET_BIT(PORTC,pin_num);
    3434:	a5 e3       	ldi	r26, 0x35	; 53
    3436:	b0 e0       	ldi	r27, 0x00	; 0
    3438:	e5 e3       	ldi	r30, 0x35	; 53
    343a:	f0 e0       	ldi	r31, 0x00	; 0
    343c:	80 81       	ld	r24, Z
    343e:	48 2f       	mov	r20, r24
    3440:	8a 81       	ldd	r24, Y+2	; 0x02
    3442:	28 2f       	mov	r18, r24
    3444:	30 e0       	ldi	r19, 0x00	; 0
    3446:	81 e0       	ldi	r24, 0x01	; 1
    3448:	90 e0       	ldi	r25, 0x00	; 0
    344a:	02 2e       	mov	r0, r18
    344c:	02 c0       	rjmp	.+4      	; 0x3452 <GPIO_writePin+0x13c>
    344e:	88 0f       	add	r24, r24
    3450:	99 1f       	adc	r25, r25
    3452:	0a 94       	dec	r0
    3454:	e2 f7       	brpl	.-8      	; 0x344e <GPIO_writePin+0x138>
    3456:	84 2b       	or	r24, r20
    3458:	8c 93       	st	X, r24
    345a:	40 c0       	rjmp	.+128    	; 0x34dc <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTC,pin_num);
    345c:	a5 e3       	ldi	r26, 0x35	; 53
    345e:	b0 e0       	ldi	r27, 0x00	; 0
    3460:	e5 e3       	ldi	r30, 0x35	; 53
    3462:	f0 e0       	ldi	r31, 0x00	; 0
    3464:	80 81       	ld	r24, Z
    3466:	48 2f       	mov	r20, r24
    3468:	8a 81       	ldd	r24, Y+2	; 0x02
    346a:	28 2f       	mov	r18, r24
    346c:	30 e0       	ldi	r19, 0x00	; 0
    346e:	81 e0       	ldi	r24, 0x01	; 1
    3470:	90 e0       	ldi	r25, 0x00	; 0
    3472:	02 2e       	mov	r0, r18
    3474:	02 c0       	rjmp	.+4      	; 0x347a <GPIO_writePin+0x164>
    3476:	88 0f       	add	r24, r24
    3478:	99 1f       	adc	r25, r25
    347a:	0a 94       	dec	r0
    347c:	e2 f7       	brpl	.-8      	; 0x3476 <GPIO_writePin+0x160>
    347e:	80 95       	com	r24
    3480:	84 23       	and	r24, r20
    3482:	8c 93       	st	X, r24
    3484:	2b c0       	rjmp	.+86     	; 0x34dc <GPIO_writePin+0x1c6>
			}
			break;
		case PORTD_ID:
			if(value == LOGIC_HIGH)
    3486:	8b 81       	ldd	r24, Y+3	; 0x03
    3488:	81 30       	cpi	r24, 0x01	; 1
    348a:	a1 f4       	brne	.+40     	; 0x34b4 <GPIO_writePin+0x19e>
			{
				SET_BIT(PORTD,pin_num);
    348c:	a2 e3       	ldi	r26, 0x32	; 50
    348e:	b0 e0       	ldi	r27, 0x00	; 0
    3490:	e2 e3       	ldi	r30, 0x32	; 50
    3492:	f0 e0       	ldi	r31, 0x00	; 0
    3494:	80 81       	ld	r24, Z
    3496:	48 2f       	mov	r20, r24
    3498:	8a 81       	ldd	r24, Y+2	; 0x02
    349a:	28 2f       	mov	r18, r24
    349c:	30 e0       	ldi	r19, 0x00	; 0
    349e:	81 e0       	ldi	r24, 0x01	; 1
    34a0:	90 e0       	ldi	r25, 0x00	; 0
    34a2:	02 2e       	mov	r0, r18
    34a4:	02 c0       	rjmp	.+4      	; 0x34aa <GPIO_writePin+0x194>
    34a6:	88 0f       	add	r24, r24
    34a8:	99 1f       	adc	r25, r25
    34aa:	0a 94       	dec	r0
    34ac:	e2 f7       	brpl	.-8      	; 0x34a6 <GPIO_writePin+0x190>
    34ae:	84 2b       	or	r24, r20
    34b0:	8c 93       	st	X, r24
    34b2:	14 c0       	rjmp	.+40     	; 0x34dc <GPIO_writePin+0x1c6>
			}
			else
			{
				CLEAR_BIT(PORTD,pin_num);
    34b4:	a2 e3       	ldi	r26, 0x32	; 50
    34b6:	b0 e0       	ldi	r27, 0x00	; 0
    34b8:	e2 e3       	ldi	r30, 0x32	; 50
    34ba:	f0 e0       	ldi	r31, 0x00	; 0
    34bc:	80 81       	ld	r24, Z
    34be:	48 2f       	mov	r20, r24
    34c0:	8a 81       	ldd	r24, Y+2	; 0x02
    34c2:	28 2f       	mov	r18, r24
    34c4:	30 e0       	ldi	r19, 0x00	; 0
    34c6:	81 e0       	ldi	r24, 0x01	; 1
    34c8:	90 e0       	ldi	r25, 0x00	; 0
    34ca:	02 2e       	mov	r0, r18
    34cc:	02 c0       	rjmp	.+4      	; 0x34d2 <GPIO_writePin+0x1bc>
    34ce:	88 0f       	add	r24, r24
    34d0:	99 1f       	adc	r25, r25
    34d2:	0a 94       	dec	r0
    34d4:	e2 f7       	brpl	.-8      	; 0x34ce <GPIO_writePin+0x1b8>
    34d6:	80 95       	com	r24
    34d8:	84 23       	and	r24, r20
    34da:	8c 93       	st	X, r24
			}
			break;
		}
	}
}
    34dc:	0f 90       	pop	r0
    34de:	0f 90       	pop	r0
    34e0:	0f 90       	pop	r0
    34e2:	0f 90       	pop	r0
    34e4:	0f 90       	pop	r0
    34e6:	cf 91       	pop	r28
    34e8:	df 91       	pop	r29
    34ea:	08 95       	ret

000034ec <GPIO_readPin>:
 * Description :
 * Read and return the value for the required pin, it should be Logic High or Logic Low.
 * If the input port number or pin number are not correct, The function will return Logic Low.
 */
uint8 GPIO_readPin(uint8 port_num, uint8 pin_num)
{
    34ec:	df 93       	push	r29
    34ee:	cf 93       	push	r28
    34f0:	00 d0       	rcall	.+0      	; 0x34f2 <GPIO_readPin+0x6>
    34f2:	00 d0       	rcall	.+0      	; 0x34f4 <GPIO_readPin+0x8>
    34f4:	0f 92       	push	r0
    34f6:	cd b7       	in	r28, 0x3d	; 61
    34f8:	de b7       	in	r29, 0x3e	; 62
    34fa:	8a 83       	std	Y+2, r24	; 0x02
    34fc:	6b 83       	std	Y+3, r22	; 0x03
	uint8 pin_value = LOGIC_LOW;
    34fe:	19 82       	std	Y+1, r1	; 0x01
	/*
	 * Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	 * Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 * In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    3500:	8b 81       	ldd	r24, Y+3	; 0x03
    3502:	88 30       	cpi	r24, 0x08	; 8
    3504:	08 f0       	brcs	.+2      	; 0x3508 <GPIO_readPin+0x1c>
    3506:	84 c0       	rjmp	.+264    	; 0x3610 <GPIO_readPin+0x124>
    3508:	8a 81       	ldd	r24, Y+2	; 0x02
    350a:	84 30       	cpi	r24, 0x04	; 4
    350c:	08 f0       	brcs	.+2      	; 0x3510 <GPIO_readPin+0x24>
    350e:	80 c0       	rjmp	.+256    	; 0x3610 <GPIO_readPin+0x124>
		/* Do Nothing */
	}
	else
	{
		/* Read the pin value as required */
		switch(port_num)
    3510:	8a 81       	ldd	r24, Y+2	; 0x02
    3512:	28 2f       	mov	r18, r24
    3514:	30 e0       	ldi	r19, 0x00	; 0
    3516:	3d 83       	std	Y+5, r19	; 0x05
    3518:	2c 83       	std	Y+4, r18	; 0x04
    351a:	4c 81       	ldd	r20, Y+4	; 0x04
    351c:	5d 81       	ldd	r21, Y+5	; 0x05
    351e:	41 30       	cpi	r20, 0x01	; 1
    3520:	51 05       	cpc	r21, r1
    3522:	79 f1       	breq	.+94     	; 0x3582 <GPIO_readPin+0x96>
    3524:	8c 81       	ldd	r24, Y+4	; 0x04
    3526:	9d 81       	ldd	r25, Y+5	; 0x05
    3528:	82 30       	cpi	r24, 0x02	; 2
    352a:	91 05       	cpc	r25, r1
    352c:	34 f4       	brge	.+12     	; 0x353a <GPIO_readPin+0x4e>
    352e:	2c 81       	ldd	r18, Y+4	; 0x04
    3530:	3d 81       	ldd	r19, Y+5	; 0x05
    3532:	21 15       	cp	r18, r1
    3534:	31 05       	cpc	r19, r1
    3536:	69 f0       	breq	.+26     	; 0x3552 <GPIO_readPin+0x66>
    3538:	6b c0       	rjmp	.+214    	; 0x3610 <GPIO_readPin+0x124>
    353a:	4c 81       	ldd	r20, Y+4	; 0x04
    353c:	5d 81       	ldd	r21, Y+5	; 0x05
    353e:	42 30       	cpi	r20, 0x02	; 2
    3540:	51 05       	cpc	r21, r1
    3542:	b9 f1       	breq	.+110    	; 0x35b2 <GPIO_readPin+0xc6>
    3544:	8c 81       	ldd	r24, Y+4	; 0x04
    3546:	9d 81       	ldd	r25, Y+5	; 0x05
    3548:	83 30       	cpi	r24, 0x03	; 3
    354a:	91 05       	cpc	r25, r1
    354c:	09 f4       	brne	.+2      	; 0x3550 <GPIO_readPin+0x64>
    354e:	49 c0       	rjmp	.+146    	; 0x35e2 <GPIO_readPin+0xf6>
    3550:	5f c0       	rjmp	.+190    	; 0x3610 <GPIO_readPin+0x124>
		{
		case PORTA_ID:
			if(BIT_IS_SET(PINA,pin_num))
    3552:	e9 e3       	ldi	r30, 0x39	; 57
    3554:	f0 e0       	ldi	r31, 0x00	; 0
    3556:	80 81       	ld	r24, Z
    3558:	28 2f       	mov	r18, r24
    355a:	30 e0       	ldi	r19, 0x00	; 0
    355c:	8b 81       	ldd	r24, Y+3	; 0x03
    355e:	88 2f       	mov	r24, r24
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	a9 01       	movw	r20, r18
    3564:	02 c0       	rjmp	.+4      	; 0x356a <GPIO_readPin+0x7e>
    3566:	55 95       	asr	r21
    3568:	47 95       	ror	r20
    356a:	8a 95       	dec	r24
    356c:	e2 f7       	brpl	.-8      	; 0x3566 <GPIO_readPin+0x7a>
    356e:	ca 01       	movw	r24, r20
    3570:	81 70       	andi	r24, 0x01	; 1
    3572:	90 70       	andi	r25, 0x00	; 0
    3574:	88 23       	and	r24, r24
    3576:	19 f0       	breq	.+6      	; 0x357e <GPIO_readPin+0x92>
			{
				pin_value = LOGIC_HIGH;
    3578:	81 e0       	ldi	r24, 0x01	; 1
    357a:	89 83       	std	Y+1, r24	; 0x01
    357c:	49 c0       	rjmp	.+146    	; 0x3610 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    357e:	19 82       	std	Y+1, r1	; 0x01
    3580:	47 c0       	rjmp	.+142    	; 0x3610 <GPIO_readPin+0x124>
			}
			break;
		case PORTB_ID:
			if(BIT_IS_SET(PINB,pin_num))
    3582:	e6 e3       	ldi	r30, 0x36	; 54
    3584:	f0 e0       	ldi	r31, 0x00	; 0
    3586:	80 81       	ld	r24, Z
    3588:	28 2f       	mov	r18, r24
    358a:	30 e0       	ldi	r19, 0x00	; 0
    358c:	8b 81       	ldd	r24, Y+3	; 0x03
    358e:	88 2f       	mov	r24, r24
    3590:	90 e0       	ldi	r25, 0x00	; 0
    3592:	a9 01       	movw	r20, r18
    3594:	02 c0       	rjmp	.+4      	; 0x359a <GPIO_readPin+0xae>
    3596:	55 95       	asr	r21
    3598:	47 95       	ror	r20
    359a:	8a 95       	dec	r24
    359c:	e2 f7       	brpl	.-8      	; 0x3596 <GPIO_readPin+0xaa>
    359e:	ca 01       	movw	r24, r20
    35a0:	81 70       	andi	r24, 0x01	; 1
    35a2:	90 70       	andi	r25, 0x00	; 0
    35a4:	88 23       	and	r24, r24
    35a6:	19 f0       	breq	.+6      	; 0x35ae <GPIO_readPin+0xc2>
			{
				pin_value = LOGIC_HIGH;
    35a8:	81 e0       	ldi	r24, 0x01	; 1
    35aa:	89 83       	std	Y+1, r24	; 0x01
    35ac:	31 c0       	rjmp	.+98     	; 0x3610 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    35ae:	19 82       	std	Y+1, r1	; 0x01
    35b0:	2f c0       	rjmp	.+94     	; 0x3610 <GPIO_readPin+0x124>
			}
			break;
		case PORTC_ID:
			if(BIT_IS_SET(PINC,pin_num))
    35b2:	e3 e3       	ldi	r30, 0x33	; 51
    35b4:	f0 e0       	ldi	r31, 0x00	; 0
    35b6:	80 81       	ld	r24, Z
    35b8:	28 2f       	mov	r18, r24
    35ba:	30 e0       	ldi	r19, 0x00	; 0
    35bc:	8b 81       	ldd	r24, Y+3	; 0x03
    35be:	88 2f       	mov	r24, r24
    35c0:	90 e0       	ldi	r25, 0x00	; 0
    35c2:	a9 01       	movw	r20, r18
    35c4:	02 c0       	rjmp	.+4      	; 0x35ca <GPIO_readPin+0xde>
    35c6:	55 95       	asr	r21
    35c8:	47 95       	ror	r20
    35ca:	8a 95       	dec	r24
    35cc:	e2 f7       	brpl	.-8      	; 0x35c6 <GPIO_readPin+0xda>
    35ce:	ca 01       	movw	r24, r20
    35d0:	81 70       	andi	r24, 0x01	; 1
    35d2:	90 70       	andi	r25, 0x00	; 0
    35d4:	88 23       	and	r24, r24
    35d6:	19 f0       	breq	.+6      	; 0x35de <GPIO_readPin+0xf2>
			{
				pin_value = LOGIC_HIGH;
    35d8:	81 e0       	ldi	r24, 0x01	; 1
    35da:	89 83       	std	Y+1, r24	; 0x01
    35dc:	19 c0       	rjmp	.+50     	; 0x3610 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    35de:	19 82       	std	Y+1, r1	; 0x01
    35e0:	17 c0       	rjmp	.+46     	; 0x3610 <GPIO_readPin+0x124>
			}
			break;
		case PORTD_ID:
			if(BIT_IS_SET(PIND,pin_num))
    35e2:	e0 e3       	ldi	r30, 0x30	; 48
    35e4:	f0 e0       	ldi	r31, 0x00	; 0
    35e6:	80 81       	ld	r24, Z
    35e8:	28 2f       	mov	r18, r24
    35ea:	30 e0       	ldi	r19, 0x00	; 0
    35ec:	8b 81       	ldd	r24, Y+3	; 0x03
    35ee:	88 2f       	mov	r24, r24
    35f0:	90 e0       	ldi	r25, 0x00	; 0
    35f2:	a9 01       	movw	r20, r18
    35f4:	02 c0       	rjmp	.+4      	; 0x35fa <GPIO_readPin+0x10e>
    35f6:	55 95       	asr	r21
    35f8:	47 95       	ror	r20
    35fa:	8a 95       	dec	r24
    35fc:	e2 f7       	brpl	.-8      	; 0x35f6 <GPIO_readPin+0x10a>
    35fe:	ca 01       	movw	r24, r20
    3600:	81 70       	andi	r24, 0x01	; 1
    3602:	90 70       	andi	r25, 0x00	; 0
    3604:	88 23       	and	r24, r24
    3606:	19 f0       	breq	.+6      	; 0x360e <GPIO_readPin+0x122>
			{
				pin_value = LOGIC_HIGH;
    3608:	81 e0       	ldi	r24, 0x01	; 1
    360a:	89 83       	std	Y+1, r24	; 0x01
    360c:	01 c0       	rjmp	.+2      	; 0x3610 <GPIO_readPin+0x124>
			}
			else
			{
				pin_value = LOGIC_LOW;
    360e:	19 82       	std	Y+1, r1	; 0x01
			}
			break;
		}
	}

	return pin_value;
    3610:	89 81       	ldd	r24, Y+1	; 0x01
}
    3612:	0f 90       	pop	r0
    3614:	0f 90       	pop	r0
    3616:	0f 90       	pop	r0
    3618:	0f 90       	pop	r0
    361a:	0f 90       	pop	r0
    361c:	cf 91       	pop	r28
    361e:	df 91       	pop	r29
    3620:	08 95       	ret

00003622 <GPIO_setupPortDirection>:
 * If the direction value is PORT_INPUT all pins in this port should be input pins.
 * If the direction value is PORT_OUTPUT all pins in this port should be output pins.
 * If the input port number is not correct, The function will not handle the request.
 */
void GPIO_setupPortDirection(uint8 port_num, GPIO_PortDirectionType direction)
{
    3622:	df 93       	push	r29
    3624:	cf 93       	push	r28
    3626:	00 d0       	rcall	.+0      	; 0x3628 <GPIO_setupPortDirection+0x6>
    3628:	00 d0       	rcall	.+0      	; 0x362a <GPIO_setupPortDirection+0x8>
    362a:	cd b7       	in	r28, 0x3d	; 61
    362c:	de b7       	in	r29, 0x3e	; 62
    362e:	89 83       	std	Y+1, r24	; 0x01
    3630:	6a 83       	std	Y+2, r22	; 0x02
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    3632:	89 81       	ldd	r24, Y+1	; 0x01
    3634:	84 30       	cpi	r24, 0x04	; 4
    3636:	90 f5       	brcc	.+100    	; 0x369c <GPIO_setupPortDirection+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Setup the port direction as required */
		switch(port_num)
    3638:	89 81       	ldd	r24, Y+1	; 0x01
    363a:	28 2f       	mov	r18, r24
    363c:	30 e0       	ldi	r19, 0x00	; 0
    363e:	3c 83       	std	Y+4, r19	; 0x04
    3640:	2b 83       	std	Y+3, r18	; 0x03
    3642:	8b 81       	ldd	r24, Y+3	; 0x03
    3644:	9c 81       	ldd	r25, Y+4	; 0x04
    3646:	81 30       	cpi	r24, 0x01	; 1
    3648:	91 05       	cpc	r25, r1
    364a:	d1 f0       	breq	.+52     	; 0x3680 <GPIO_setupPortDirection+0x5e>
    364c:	2b 81       	ldd	r18, Y+3	; 0x03
    364e:	3c 81       	ldd	r19, Y+4	; 0x04
    3650:	22 30       	cpi	r18, 0x02	; 2
    3652:	31 05       	cpc	r19, r1
    3654:	2c f4       	brge	.+10     	; 0x3660 <GPIO_setupPortDirection+0x3e>
    3656:	8b 81       	ldd	r24, Y+3	; 0x03
    3658:	9c 81       	ldd	r25, Y+4	; 0x04
    365a:	00 97       	sbiw	r24, 0x00	; 0
    365c:	61 f0       	breq	.+24     	; 0x3676 <GPIO_setupPortDirection+0x54>
    365e:	1e c0       	rjmp	.+60     	; 0x369c <GPIO_setupPortDirection+0x7a>
    3660:	2b 81       	ldd	r18, Y+3	; 0x03
    3662:	3c 81       	ldd	r19, Y+4	; 0x04
    3664:	22 30       	cpi	r18, 0x02	; 2
    3666:	31 05       	cpc	r19, r1
    3668:	81 f0       	breq	.+32     	; 0x368a <GPIO_setupPortDirection+0x68>
    366a:	8b 81       	ldd	r24, Y+3	; 0x03
    366c:	9c 81       	ldd	r25, Y+4	; 0x04
    366e:	83 30       	cpi	r24, 0x03	; 3
    3670:	91 05       	cpc	r25, r1
    3672:	81 f0       	breq	.+32     	; 0x3694 <GPIO_setupPortDirection+0x72>
    3674:	13 c0       	rjmp	.+38     	; 0x369c <GPIO_setupPortDirection+0x7a>
		{
		case PORTA_ID:
			DDRA = direction;
    3676:	ea e3       	ldi	r30, 0x3A	; 58
    3678:	f0 e0       	ldi	r31, 0x00	; 0
    367a:	8a 81       	ldd	r24, Y+2	; 0x02
    367c:	80 83       	st	Z, r24
    367e:	0e c0       	rjmp	.+28     	; 0x369c <GPIO_setupPortDirection+0x7a>
			break;
		case PORTB_ID:
			DDRB = direction;
    3680:	e7 e3       	ldi	r30, 0x37	; 55
    3682:	f0 e0       	ldi	r31, 0x00	; 0
    3684:	8a 81       	ldd	r24, Y+2	; 0x02
    3686:	80 83       	st	Z, r24
    3688:	09 c0       	rjmp	.+18     	; 0x369c <GPIO_setupPortDirection+0x7a>
			break;
		case PORTC_ID:
			DDRC = direction;
    368a:	e4 e3       	ldi	r30, 0x34	; 52
    368c:	f0 e0       	ldi	r31, 0x00	; 0
    368e:	8a 81       	ldd	r24, Y+2	; 0x02
    3690:	80 83       	st	Z, r24
    3692:	04 c0       	rjmp	.+8      	; 0x369c <GPIO_setupPortDirection+0x7a>
			break;
		case PORTD_ID:
			DDRD = direction;
    3694:	e1 e3       	ldi	r30, 0x31	; 49
    3696:	f0 e0       	ldi	r31, 0x00	; 0
    3698:	8a 81       	ldd	r24, Y+2	; 0x02
    369a:	80 83       	st	Z, r24
			break;
		}
	}
}
    369c:	0f 90       	pop	r0
    369e:	0f 90       	pop	r0
    36a0:	0f 90       	pop	r0
    36a2:	0f 90       	pop	r0
    36a4:	cf 91       	pop	r28
    36a6:	df 91       	pop	r29
    36a8:	08 95       	ret

000036aa <GPIO_writePort>:
 * If any pin in the port is output pin the value will be written.
 * If any pin in the port is input pin this will activate/deactivate the internal pull-up resistor.
 * If the input port number is not correct, The function will not handle the request.
 */
void GPIO_writePort(uint8 port_num, uint8 value)
{
    36aa:	df 93       	push	r29
    36ac:	cf 93       	push	r28
    36ae:	00 d0       	rcall	.+0      	; 0x36b0 <GPIO_writePort+0x6>
    36b0:	00 d0       	rcall	.+0      	; 0x36b2 <GPIO_writePort+0x8>
    36b2:	cd b7       	in	r28, 0x3d	; 61
    36b4:	de b7       	in	r29, 0x3e	; 62
    36b6:	89 83       	std	Y+1, r24	; 0x01
    36b8:	6a 83       	std	Y+2, r22	; 0x02
	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    36ba:	89 81       	ldd	r24, Y+1	; 0x01
    36bc:	84 30       	cpi	r24, 0x04	; 4
    36be:	90 f5       	brcc	.+100    	; 0x3724 <GPIO_writePort+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Write the port value as required */
		switch(port_num)
    36c0:	89 81       	ldd	r24, Y+1	; 0x01
    36c2:	28 2f       	mov	r18, r24
    36c4:	30 e0       	ldi	r19, 0x00	; 0
    36c6:	3c 83       	std	Y+4, r19	; 0x04
    36c8:	2b 83       	std	Y+3, r18	; 0x03
    36ca:	8b 81       	ldd	r24, Y+3	; 0x03
    36cc:	9c 81       	ldd	r25, Y+4	; 0x04
    36ce:	81 30       	cpi	r24, 0x01	; 1
    36d0:	91 05       	cpc	r25, r1
    36d2:	d1 f0       	breq	.+52     	; 0x3708 <GPIO_writePort+0x5e>
    36d4:	2b 81       	ldd	r18, Y+3	; 0x03
    36d6:	3c 81       	ldd	r19, Y+4	; 0x04
    36d8:	22 30       	cpi	r18, 0x02	; 2
    36da:	31 05       	cpc	r19, r1
    36dc:	2c f4       	brge	.+10     	; 0x36e8 <GPIO_writePort+0x3e>
    36de:	8b 81       	ldd	r24, Y+3	; 0x03
    36e0:	9c 81       	ldd	r25, Y+4	; 0x04
    36e2:	00 97       	sbiw	r24, 0x00	; 0
    36e4:	61 f0       	breq	.+24     	; 0x36fe <GPIO_writePort+0x54>
    36e6:	1e c0       	rjmp	.+60     	; 0x3724 <GPIO_writePort+0x7a>
    36e8:	2b 81       	ldd	r18, Y+3	; 0x03
    36ea:	3c 81       	ldd	r19, Y+4	; 0x04
    36ec:	22 30       	cpi	r18, 0x02	; 2
    36ee:	31 05       	cpc	r19, r1
    36f0:	81 f0       	breq	.+32     	; 0x3712 <GPIO_writePort+0x68>
    36f2:	8b 81       	ldd	r24, Y+3	; 0x03
    36f4:	9c 81       	ldd	r25, Y+4	; 0x04
    36f6:	83 30       	cpi	r24, 0x03	; 3
    36f8:	91 05       	cpc	r25, r1
    36fa:	81 f0       	breq	.+32     	; 0x371c <GPIO_writePort+0x72>
    36fc:	13 c0       	rjmp	.+38     	; 0x3724 <GPIO_writePort+0x7a>
		{
		case PORTA_ID:
			PORTA = value;
    36fe:	eb e3       	ldi	r30, 0x3B	; 59
    3700:	f0 e0       	ldi	r31, 0x00	; 0
    3702:	8a 81       	ldd	r24, Y+2	; 0x02
    3704:	80 83       	st	Z, r24
    3706:	0e c0       	rjmp	.+28     	; 0x3724 <GPIO_writePort+0x7a>
			break;
		case PORTB_ID:
			PORTB = value;
    3708:	e8 e3       	ldi	r30, 0x38	; 56
    370a:	f0 e0       	ldi	r31, 0x00	; 0
    370c:	8a 81       	ldd	r24, Y+2	; 0x02
    370e:	80 83       	st	Z, r24
    3710:	09 c0       	rjmp	.+18     	; 0x3724 <GPIO_writePort+0x7a>
			break;
		case PORTC_ID:
			PORTC = value;
    3712:	e5 e3       	ldi	r30, 0x35	; 53
    3714:	f0 e0       	ldi	r31, 0x00	; 0
    3716:	8a 81       	ldd	r24, Y+2	; 0x02
    3718:	80 83       	st	Z, r24
    371a:	04 c0       	rjmp	.+8      	; 0x3724 <GPIO_writePort+0x7a>
			break;
		case PORTD_ID:
			PORTD = value;
    371c:	e2 e3       	ldi	r30, 0x32	; 50
    371e:	f0 e0       	ldi	r31, 0x00	; 0
    3720:	8a 81       	ldd	r24, Y+2	; 0x02
    3722:	80 83       	st	Z, r24
			break;
		}
	}
}
    3724:	0f 90       	pop	r0
    3726:	0f 90       	pop	r0
    3728:	0f 90       	pop	r0
    372a:	0f 90       	pop	r0
    372c:	cf 91       	pop	r28
    372e:	df 91       	pop	r29
    3730:	08 95       	ret

00003732 <GPIO_readPort>:
 * Description :
 * Read and return the value of the required port.
 * If the input port number is not correct, The function will return ZERO value.
 */
uint8 GPIO_readPort(uint8 port_num)
{
    3732:	df 93       	push	r29
    3734:	cf 93       	push	r28
    3736:	00 d0       	rcall	.+0      	; 0x3738 <GPIO_readPort+0x6>
    3738:	00 d0       	rcall	.+0      	; 0x373a <GPIO_readPort+0x8>
    373a:	cd b7       	in	r28, 0x3d	; 61
    373c:	de b7       	in	r29, 0x3e	; 62
    373e:	8a 83       	std	Y+2, r24	; 0x02
	uint8 value = LOGIC_LOW;
    3740:	19 82       	std	Y+1, r1	; 0x01

	/*
	 * Check if the input number is greater than NUM_OF_PORTS value.
	 * In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    3742:	8a 81       	ldd	r24, Y+2	; 0x02
    3744:	84 30       	cpi	r24, 0x04	; 4
    3746:	90 f5       	brcc	.+100    	; 0x37ac <GPIO_readPort+0x7a>
		/* Do Nothing */
	}
	else
	{
		/* Read the port value as required */
		switch(port_num)
    3748:	8a 81       	ldd	r24, Y+2	; 0x02
    374a:	28 2f       	mov	r18, r24
    374c:	30 e0       	ldi	r19, 0x00	; 0
    374e:	3c 83       	std	Y+4, r19	; 0x04
    3750:	2b 83       	std	Y+3, r18	; 0x03
    3752:	8b 81       	ldd	r24, Y+3	; 0x03
    3754:	9c 81       	ldd	r25, Y+4	; 0x04
    3756:	81 30       	cpi	r24, 0x01	; 1
    3758:	91 05       	cpc	r25, r1
    375a:	d1 f0       	breq	.+52     	; 0x3790 <GPIO_readPort+0x5e>
    375c:	2b 81       	ldd	r18, Y+3	; 0x03
    375e:	3c 81       	ldd	r19, Y+4	; 0x04
    3760:	22 30       	cpi	r18, 0x02	; 2
    3762:	31 05       	cpc	r19, r1
    3764:	2c f4       	brge	.+10     	; 0x3770 <GPIO_readPort+0x3e>
    3766:	8b 81       	ldd	r24, Y+3	; 0x03
    3768:	9c 81       	ldd	r25, Y+4	; 0x04
    376a:	00 97       	sbiw	r24, 0x00	; 0
    376c:	61 f0       	breq	.+24     	; 0x3786 <GPIO_readPort+0x54>
    376e:	1e c0       	rjmp	.+60     	; 0x37ac <GPIO_readPort+0x7a>
    3770:	2b 81       	ldd	r18, Y+3	; 0x03
    3772:	3c 81       	ldd	r19, Y+4	; 0x04
    3774:	22 30       	cpi	r18, 0x02	; 2
    3776:	31 05       	cpc	r19, r1
    3778:	81 f0       	breq	.+32     	; 0x379a <GPIO_readPort+0x68>
    377a:	8b 81       	ldd	r24, Y+3	; 0x03
    377c:	9c 81       	ldd	r25, Y+4	; 0x04
    377e:	83 30       	cpi	r24, 0x03	; 3
    3780:	91 05       	cpc	r25, r1
    3782:	81 f0       	breq	.+32     	; 0x37a4 <GPIO_readPort+0x72>
    3784:	13 c0       	rjmp	.+38     	; 0x37ac <GPIO_readPort+0x7a>
		{
		case PORTA_ID:
			value = PINA;
    3786:	e9 e3       	ldi	r30, 0x39	; 57
    3788:	f0 e0       	ldi	r31, 0x00	; 0
    378a:	80 81       	ld	r24, Z
    378c:	89 83       	std	Y+1, r24	; 0x01
    378e:	0e c0       	rjmp	.+28     	; 0x37ac <GPIO_readPort+0x7a>
			break;
		case PORTB_ID:
			value = PINB;
    3790:	e6 e3       	ldi	r30, 0x36	; 54
    3792:	f0 e0       	ldi	r31, 0x00	; 0
    3794:	80 81       	ld	r24, Z
    3796:	89 83       	std	Y+1, r24	; 0x01
    3798:	09 c0       	rjmp	.+18     	; 0x37ac <GPIO_readPort+0x7a>
			break;
		case PORTC_ID:
			value = PINC;
    379a:	e3 e3       	ldi	r30, 0x33	; 51
    379c:	f0 e0       	ldi	r31, 0x00	; 0
    379e:	80 81       	ld	r24, Z
    37a0:	89 83       	std	Y+1, r24	; 0x01
    37a2:	04 c0       	rjmp	.+8      	; 0x37ac <GPIO_readPort+0x7a>
			break;
		case PORTD_ID:
			value = PIND;
    37a4:	e0 e3       	ldi	r30, 0x30	; 48
    37a6:	f0 e0       	ldi	r31, 0x00	; 0
    37a8:	80 81       	ld	r24, Z
    37aa:	89 83       	std	Y+1, r24	; 0x01
			break;
		}
	}

	return value;
    37ac:	89 81       	ldd	r24, Y+1	; 0x01
}
    37ae:	0f 90       	pop	r0
    37b0:	0f 90       	pop	r0
    37b2:	0f 90       	pop	r0
    37b4:	0f 90       	pop	r0
    37b6:	cf 91       	pop	r28
    37b8:	df 91       	pop	r29
    37ba:	08 95       	ret

000037bc <KEYPAD_getPressedKey>:
/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/

uint8 KEYPAD_getPressedKey(void)
{
    37bc:	df 93       	push	r29
    37be:	cf 93       	push	r28
    37c0:	cd b7       	in	r28, 0x3d	; 61
    37c2:	de b7       	in	r29, 0x3e	; 62
    37c4:	60 97       	sbiw	r28, 0x10	; 16
    37c6:	0f b6       	in	r0, 0x3f	; 63
    37c8:	f8 94       	cli
    37ca:	de bf       	out	0x3e, r29	; 62
    37cc:	0f be       	out	0x3f, r0	; 63
    37ce:	cd bf       	out	0x3d, r28	; 61
	uint8 col,row;
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID, PIN_INPUT);
    37d0:	81 e0       	ldi	r24, 0x01	; 1
    37d2:	64 e0       	ldi	r22, 0x04	; 4
    37d4:	40 e0       	ldi	r20, 0x00	; 0
    37d6:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID+1, PIN_INPUT);
    37da:	81 e0       	ldi	r24, 0x01	; 1
    37dc:	65 e0       	ldi	r22, 0x05	; 5
    37de:	40 e0       	ldi	r20, 0x00	; 0
    37e0:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID+2, PIN_INPUT);
    37e4:	81 e0       	ldi	r24, 0x01	; 1
    37e6:	66 e0       	ldi	r22, 0x06	; 6
    37e8:	40 e0       	ldi	r20, 0x00	; 0
    37ea:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID+3, PIN_INPUT);
    37ee:	81 e0       	ldi	r24, 0x01	; 1
    37f0:	67 e0       	ldi	r22, 0x07	; 7
    37f2:	40 e0       	ldi	r20, 0x00	; 0
    37f4:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>

	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID, PIN_INPUT);
    37f8:	83 e0       	ldi	r24, 0x03	; 3
    37fa:	62 e0       	ldi	r22, 0x02	; 2
    37fc:	40 e0       	ldi	r20, 0x00	; 0
    37fe:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID+1, PIN_INPUT);
    3802:	83 e0       	ldi	r24, 0x03	; 3
    3804:	63 e0       	ldi	r22, 0x03	; 3
    3806:	40 e0       	ldi	r20, 0x00	; 0
    3808:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID+2, PIN_INPUT);
    380c:	83 e0       	ldi	r24, 0x03	; 3
    380e:	64 e0       	ldi	r22, 0x04	; 4
    3810:	40 e0       	ldi	r20, 0x00	; 0
    3812:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
#if(KEYPAD_NUM_COLS == 4)
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID+3, PIN_INPUT);
    3816:	83 e0       	ldi	r24, 0x03	; 3
    3818:	65 e0       	ldi	r22, 0x05	; 5
    381a:	40 e0       	ldi	r20, 0x00	; 0
    381c:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
#endif
	while(1)
	{
		for(row=0 ; row<KEYPAD_NUM_ROWS ; row++) /* loop for rows */
    3820:	1f 86       	std	Y+15, r1	; 0x0f
    3822:	b4 c0       	rjmp	.+360    	; 0x398c <KEYPAD_getPressedKey+0x1d0>
		{
			/* 
			 * Each time setup the direction for all keypad port as input pins,
			 * except this row will be output pin
			 */
			GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID,KEYPAD_FIRST_ROW_PIN_ID+row,PIN_OUTPUT);
    3824:	8f 85       	ldd	r24, Y+15	; 0x0f
    3826:	98 2f       	mov	r25, r24
    3828:	9c 5f       	subi	r25, 0xFC	; 252
    382a:	81 e0       	ldi	r24, 0x01	; 1
    382c:	69 2f       	mov	r22, r25
    382e:	41 e0       	ldi	r20, 0x01	; 1
    3830:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>

			/* Set/Clear the row output pin */
			GPIO_writePin(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID+row, KEYPAD_BUTTON_PRESSED);
    3834:	8f 85       	ldd	r24, Y+15	; 0x0f
    3836:	98 2f       	mov	r25, r24
    3838:	9c 5f       	subi	r25, 0xFC	; 252
    383a:	81 e0       	ldi	r24, 0x01	; 1
    383c:	69 2f       	mov	r22, r25
    383e:	40 e0       	ldi	r20, 0x00	; 0
    3840:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>

			for(col=0 ; col<KEYPAD_NUM_COLS ; col++) /* loop for columns */
    3844:	18 8a       	std	Y+16, r1	; 0x10
    3846:	22 c0       	rjmp	.+68     	; 0x388c <KEYPAD_getPressedKey+0xd0>
			{
				/* Check if the switch is pressed in this column */
				if(GPIO_readPin(KEYPAD_COL_PORT_ID,KEYPAD_FIRST_COL_PIN_ID+col) == KEYPAD_BUTTON_PRESSED)
    3848:	88 89       	ldd	r24, Y+16	; 0x10
    384a:	98 2f       	mov	r25, r24
    384c:	9e 5f       	subi	r25, 0xFE	; 254
    384e:	83 e0       	ldi	r24, 0x03	; 3
    3850:	69 2f       	mov	r22, r25
    3852:	0e 94 76 1a 	call	0x34ec	; 0x34ec <GPIO_readPin>
    3856:	88 23       	and	r24, r24
    3858:	b1 f4       	brne	.+44     	; 0x3886 <KEYPAD_getPressedKey+0xca>
						#endif
					#elif (KEYPAD_NUM_COLS == 4)
						#ifdef STANDARD_KEYPAD
							return ((row*KEYPAD_NUM_COLS)+col+1);
						#else
							return KEYPAD_4x4_adjustKeyNumber((row*KEYPAD_NUM_COLS)+col+1);
    385a:	8f 85       	ldd	r24, Y+15	; 0x0f
    385c:	88 2f       	mov	r24, r24
    385e:	90 e0       	ldi	r25, 0x00	; 0
    3860:	88 0f       	add	r24, r24
    3862:	99 1f       	adc	r25, r25
    3864:	88 0f       	add	r24, r24
    3866:	99 1f       	adc	r25, r25
    3868:	98 2f       	mov	r25, r24
    386a:	88 89       	ldd	r24, Y+16	; 0x10
    386c:	89 0f       	add	r24, r25
    386e:	8f 5f       	subi	r24, 0xFF	; 255
    3870:	0e 94 cb 1c 	call	0x3996	; 0x3996 <KEYPAD_4x4_adjustKeyNumber>
			}
			GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID,KEYPAD_FIRST_ROW_PIN_ID+row,PIN_INPUT);
			_delay_ms(5); /* Add small delay to fix CPU load issue in proteus */
		}
	}	
}
    3874:	60 96       	adiw	r28, 0x10	; 16
    3876:	0f b6       	in	r0, 0x3f	; 63
    3878:	f8 94       	cli
    387a:	de bf       	out	0x3e, r29	; 62
    387c:	0f be       	out	0x3f, r0	; 63
    387e:	cd bf       	out	0x3d, r28	; 61
    3880:	cf 91       	pop	r28
    3882:	df 91       	pop	r29
    3884:	08 95       	ret
			GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID,KEYPAD_FIRST_ROW_PIN_ID+row,PIN_OUTPUT);

			/* Set/Clear the row output pin */
			GPIO_writePin(KEYPAD_ROW_PORT_ID, KEYPAD_FIRST_ROW_PIN_ID+row, KEYPAD_BUTTON_PRESSED);

			for(col=0 ; col<KEYPAD_NUM_COLS ; col++) /* loop for columns */
    3886:	88 89       	ldd	r24, Y+16	; 0x10
    3888:	8f 5f       	subi	r24, 0xFF	; 255
    388a:	88 8b       	std	Y+16, r24	; 0x10
    388c:	88 89       	ldd	r24, Y+16	; 0x10
    388e:	84 30       	cpi	r24, 0x04	; 4
    3890:	d8 f2       	brcs	.-74     	; 0x3848 <KEYPAD_getPressedKey+0x8c>
							return KEYPAD_4x4_adjustKeyNumber((row*KEYPAD_NUM_COLS)+col+1);
						#endif
					#endif
				}
			}
			GPIO_setupPinDirection(KEYPAD_ROW_PORT_ID,KEYPAD_FIRST_ROW_PIN_ID+row,PIN_INPUT);
    3892:	8f 85       	ldd	r24, Y+15	; 0x0f
    3894:	98 2f       	mov	r25, r24
    3896:	9c 5f       	subi	r25, 0xFC	; 252
    3898:	81 e0       	ldi	r24, 0x01	; 1
    389a:	69 2f       	mov	r22, r25
    389c:	40 e0       	ldi	r20, 0x00	; 0
    389e:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
    38a2:	80 e0       	ldi	r24, 0x00	; 0
    38a4:	90 e0       	ldi	r25, 0x00	; 0
    38a6:	a0 ea       	ldi	r26, 0xA0	; 160
    38a8:	b0 e4       	ldi	r27, 0x40	; 64
    38aa:	8b 87       	std	Y+11, r24	; 0x0b
    38ac:	9c 87       	std	Y+12, r25	; 0x0c
    38ae:	ad 87       	std	Y+13, r26	; 0x0d
    38b0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    38b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    38b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    38b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    38ba:	20 e0       	ldi	r18, 0x00	; 0
    38bc:	30 e0       	ldi	r19, 0x00	; 0
    38be:	4a e7       	ldi	r20, 0x7A	; 122
    38c0:	55 e4       	ldi	r21, 0x45	; 69
    38c2:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    38c6:	dc 01       	movw	r26, r24
    38c8:	cb 01       	movw	r24, r22
    38ca:	8f 83       	std	Y+7, r24	; 0x07
    38cc:	98 87       	std	Y+8, r25	; 0x08
    38ce:	a9 87       	std	Y+9, r26	; 0x09
    38d0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    38d2:	6f 81       	ldd	r22, Y+7	; 0x07
    38d4:	78 85       	ldd	r23, Y+8	; 0x08
    38d6:	89 85       	ldd	r24, Y+9	; 0x09
    38d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    38da:	20 e0       	ldi	r18, 0x00	; 0
    38dc:	30 e0       	ldi	r19, 0x00	; 0
    38de:	40 e8       	ldi	r20, 0x80	; 128
    38e0:	5f e3       	ldi	r21, 0x3F	; 63
    38e2:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    38e6:	88 23       	and	r24, r24
    38e8:	2c f4       	brge	.+10     	; 0x38f4 <KEYPAD_getPressedKey+0x138>
		__ticks = 1;
    38ea:	81 e0       	ldi	r24, 0x01	; 1
    38ec:	90 e0       	ldi	r25, 0x00	; 0
    38ee:	9e 83       	std	Y+6, r25	; 0x06
    38f0:	8d 83       	std	Y+5, r24	; 0x05
    38f2:	3f c0       	rjmp	.+126    	; 0x3972 <KEYPAD_getPressedKey+0x1b6>
	else if (__tmp > 65535)
    38f4:	6f 81       	ldd	r22, Y+7	; 0x07
    38f6:	78 85       	ldd	r23, Y+8	; 0x08
    38f8:	89 85       	ldd	r24, Y+9	; 0x09
    38fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    38fc:	20 e0       	ldi	r18, 0x00	; 0
    38fe:	3f ef       	ldi	r19, 0xFF	; 255
    3900:	4f e7       	ldi	r20, 0x7F	; 127
    3902:	57 e4       	ldi	r21, 0x47	; 71
    3904:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    3908:	18 16       	cp	r1, r24
    390a:	4c f5       	brge	.+82     	; 0x395e <KEYPAD_getPressedKey+0x1a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    390c:	6b 85       	ldd	r22, Y+11	; 0x0b
    390e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3910:	8d 85       	ldd	r24, Y+13	; 0x0d
    3912:	9e 85       	ldd	r25, Y+14	; 0x0e
    3914:	20 e0       	ldi	r18, 0x00	; 0
    3916:	30 e0       	ldi	r19, 0x00	; 0
    3918:	40 e2       	ldi	r20, 0x20	; 32
    391a:	51 e4       	ldi	r21, 0x41	; 65
    391c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3920:	dc 01       	movw	r26, r24
    3922:	cb 01       	movw	r24, r22
    3924:	bc 01       	movw	r22, r24
    3926:	cd 01       	movw	r24, r26
    3928:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    392c:	dc 01       	movw	r26, r24
    392e:	cb 01       	movw	r24, r22
    3930:	9e 83       	std	Y+6, r25	; 0x06
    3932:	8d 83       	std	Y+5, r24	; 0x05
    3934:	0f c0       	rjmp	.+30     	; 0x3954 <KEYPAD_getPressedKey+0x198>
    3936:	80 e9       	ldi	r24, 0x90	; 144
    3938:	91 e0       	ldi	r25, 0x01	; 1
    393a:	9c 83       	std	Y+4, r25	; 0x04
    393c:	8b 83       	std	Y+3, r24	; 0x03
    393e:	8b 81       	ldd	r24, Y+3	; 0x03
    3940:	9c 81       	ldd	r25, Y+4	; 0x04
    3942:	01 97       	sbiw	r24, 0x01	; 1
    3944:	f1 f7       	brne	.-4      	; 0x3942 <KEYPAD_getPressedKey+0x186>
    3946:	9c 83       	std	Y+4, r25	; 0x04
    3948:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    394a:	8d 81       	ldd	r24, Y+5	; 0x05
    394c:	9e 81       	ldd	r25, Y+6	; 0x06
    394e:	01 97       	sbiw	r24, 0x01	; 1
    3950:	9e 83       	std	Y+6, r25	; 0x06
    3952:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3954:	8d 81       	ldd	r24, Y+5	; 0x05
    3956:	9e 81       	ldd	r25, Y+6	; 0x06
    3958:	00 97       	sbiw	r24, 0x00	; 0
    395a:	69 f7       	brne	.-38     	; 0x3936 <KEYPAD_getPressedKey+0x17a>
    395c:	14 c0       	rjmp	.+40     	; 0x3986 <KEYPAD_getPressedKey+0x1ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    395e:	6f 81       	ldd	r22, Y+7	; 0x07
    3960:	78 85       	ldd	r23, Y+8	; 0x08
    3962:	89 85       	ldd	r24, Y+9	; 0x09
    3964:	9a 85       	ldd	r25, Y+10	; 0x0a
    3966:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    396a:	dc 01       	movw	r26, r24
    396c:	cb 01       	movw	r24, r22
    396e:	9e 83       	std	Y+6, r25	; 0x06
    3970:	8d 83       	std	Y+5, r24	; 0x05
    3972:	8d 81       	ldd	r24, Y+5	; 0x05
    3974:	9e 81       	ldd	r25, Y+6	; 0x06
    3976:	9a 83       	std	Y+2, r25	; 0x02
    3978:	89 83       	std	Y+1, r24	; 0x01
    397a:	89 81       	ldd	r24, Y+1	; 0x01
    397c:	9a 81       	ldd	r25, Y+2	; 0x02
    397e:	01 97       	sbiw	r24, 0x01	; 1
    3980:	f1 f7       	brne	.-4      	; 0x397e <KEYPAD_getPressedKey+0x1c2>
    3982:	9a 83       	std	Y+2, r25	; 0x02
    3984:	89 83       	std	Y+1, r24	; 0x01
#if(KEYPAD_NUM_COLS == 4)
	GPIO_setupPinDirection(KEYPAD_COL_PORT_ID, KEYPAD_FIRST_COL_PIN_ID+3, PIN_INPUT);
#endif
	while(1)
	{
		for(row=0 ; row<KEYPAD_NUM_ROWS ; row++) /* loop for rows */
    3986:	8f 85       	ldd	r24, Y+15	; 0x0f
    3988:	8f 5f       	subi	r24, 0xFF	; 255
    398a:	8f 87       	std	Y+15, r24	; 0x0f
    398c:	8f 85       	ldd	r24, Y+15	; 0x0f
    398e:	84 30       	cpi	r24, 0x04	; 4
    3990:	08 f4       	brcc	.+2      	; 0x3994 <KEYPAD_getPressedKey+0x1d8>
    3992:	48 cf       	rjmp	.-368    	; 0x3824 <KEYPAD_getPressedKey+0x68>
    3994:	45 cf       	rjmp	.-374    	; 0x3820 <KEYPAD_getPressedKey+0x64>

00003996 <KEYPAD_4x4_adjustKeyNumber>:
/*
 * Description :
 * Update the keypad pressed button value with the correct one in keypad 4x4 shape
 */
static uint8 KEYPAD_4x4_adjustKeyNumber(uint8 button_number)
{
    3996:	df 93       	push	r29
    3998:	cf 93       	push	r28
    399a:	00 d0       	rcall	.+0      	; 0x399c <KEYPAD_4x4_adjustKeyNumber+0x6>
    399c:	00 d0       	rcall	.+0      	; 0x399e <KEYPAD_4x4_adjustKeyNumber+0x8>
    399e:	cd b7       	in	r28, 0x3d	; 61
    39a0:	de b7       	in	r29, 0x3e	; 62
    39a2:	8a 83       	std	Y+2, r24	; 0x02
	uint8 keypad_button = 0;
    39a4:	19 82       	std	Y+1, r1	; 0x01
	switch(button_number)
    39a6:	8a 81       	ldd	r24, Y+2	; 0x02
    39a8:	28 2f       	mov	r18, r24
    39aa:	30 e0       	ldi	r19, 0x00	; 0
    39ac:	3c 83       	std	Y+4, r19	; 0x04
    39ae:	2b 83       	std	Y+3, r18	; 0x03
    39b0:	8b 81       	ldd	r24, Y+3	; 0x03
    39b2:	9c 81       	ldd	r25, Y+4	; 0x04
    39b4:	88 30       	cpi	r24, 0x08	; 8
    39b6:	91 05       	cpc	r25, r1
    39b8:	09 f4       	brne	.+2      	; 0x39bc <KEYPAD_4x4_adjustKeyNumber+0x26>
    39ba:	70 c0       	rjmp	.+224    	; 0x3a9c <KEYPAD_4x4_adjustKeyNumber+0x106>
    39bc:	2b 81       	ldd	r18, Y+3	; 0x03
    39be:	3c 81       	ldd	r19, Y+4	; 0x04
    39c0:	29 30       	cpi	r18, 0x09	; 9
    39c2:	31 05       	cpc	r19, r1
    39c4:	5c f5       	brge	.+86     	; 0x3a1c <KEYPAD_4x4_adjustKeyNumber+0x86>
    39c6:	8b 81       	ldd	r24, Y+3	; 0x03
    39c8:	9c 81       	ldd	r25, Y+4	; 0x04
    39ca:	84 30       	cpi	r24, 0x04	; 4
    39cc:	91 05       	cpc	r25, r1
    39ce:	09 f4       	brne	.+2      	; 0x39d2 <KEYPAD_4x4_adjustKeyNumber+0x3c>
    39d0:	59 c0       	rjmp	.+178    	; 0x3a84 <KEYPAD_4x4_adjustKeyNumber+0xee>
    39d2:	2b 81       	ldd	r18, Y+3	; 0x03
    39d4:	3c 81       	ldd	r19, Y+4	; 0x04
    39d6:	25 30       	cpi	r18, 0x05	; 5
    39d8:	31 05       	cpc	r19, r1
    39da:	9c f4       	brge	.+38     	; 0x3a02 <KEYPAD_4x4_adjustKeyNumber+0x6c>
    39dc:	8b 81       	ldd	r24, Y+3	; 0x03
    39de:	9c 81       	ldd	r25, Y+4	; 0x04
    39e0:	82 30       	cpi	r24, 0x02	; 2
    39e2:	91 05       	cpc	r25, r1
    39e4:	09 f4       	brne	.+2      	; 0x39e8 <KEYPAD_4x4_adjustKeyNumber+0x52>
    39e6:	48 c0       	rjmp	.+144    	; 0x3a78 <KEYPAD_4x4_adjustKeyNumber+0xe2>
    39e8:	2b 81       	ldd	r18, Y+3	; 0x03
    39ea:	3c 81       	ldd	r19, Y+4	; 0x04
    39ec:	23 30       	cpi	r18, 0x03	; 3
    39ee:	31 05       	cpc	r19, r1
    39f0:	0c f0       	brlt	.+2      	; 0x39f4 <KEYPAD_4x4_adjustKeyNumber+0x5e>
    39f2:	45 c0       	rjmp	.+138    	; 0x3a7e <KEYPAD_4x4_adjustKeyNumber+0xe8>
    39f4:	8b 81       	ldd	r24, Y+3	; 0x03
    39f6:	9c 81       	ldd	r25, Y+4	; 0x04
    39f8:	81 30       	cpi	r24, 0x01	; 1
    39fa:	91 05       	cpc	r25, r1
    39fc:	09 f4       	brne	.+2      	; 0x3a00 <KEYPAD_4x4_adjustKeyNumber+0x6a>
    39fe:	39 c0       	rjmp	.+114    	; 0x3a72 <KEYPAD_4x4_adjustKeyNumber+0xdc>
    3a00:	67 c0       	rjmp	.+206    	; 0x3ad0 <KEYPAD_4x4_adjustKeyNumber+0x13a>
    3a02:	2b 81       	ldd	r18, Y+3	; 0x03
    3a04:	3c 81       	ldd	r19, Y+4	; 0x04
    3a06:	26 30       	cpi	r18, 0x06	; 6
    3a08:	31 05       	cpc	r19, r1
    3a0a:	09 f4       	brne	.+2      	; 0x3a0e <KEYPAD_4x4_adjustKeyNumber+0x78>
    3a0c:	41 c0       	rjmp	.+130    	; 0x3a90 <KEYPAD_4x4_adjustKeyNumber+0xfa>
    3a0e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a10:	9c 81       	ldd	r25, Y+4	; 0x04
    3a12:	87 30       	cpi	r24, 0x07	; 7
    3a14:	91 05       	cpc	r25, r1
    3a16:	0c f0       	brlt	.+2      	; 0x3a1a <KEYPAD_4x4_adjustKeyNumber+0x84>
    3a18:	3e c0       	rjmp	.+124    	; 0x3a96 <KEYPAD_4x4_adjustKeyNumber+0x100>
    3a1a:	37 c0       	rjmp	.+110    	; 0x3a8a <KEYPAD_4x4_adjustKeyNumber+0xf4>
    3a1c:	2b 81       	ldd	r18, Y+3	; 0x03
    3a1e:	3c 81       	ldd	r19, Y+4	; 0x04
    3a20:	2c 30       	cpi	r18, 0x0C	; 12
    3a22:	31 05       	cpc	r19, r1
    3a24:	09 f4       	brne	.+2      	; 0x3a28 <KEYPAD_4x4_adjustKeyNumber+0x92>
    3a26:	46 c0       	rjmp	.+140    	; 0x3ab4 <KEYPAD_4x4_adjustKeyNumber+0x11e>
    3a28:	8b 81       	ldd	r24, Y+3	; 0x03
    3a2a:	9c 81       	ldd	r25, Y+4	; 0x04
    3a2c:	8d 30       	cpi	r24, 0x0D	; 13
    3a2e:	91 05       	cpc	r25, r1
    3a30:	5c f4       	brge	.+22     	; 0x3a48 <KEYPAD_4x4_adjustKeyNumber+0xb2>
    3a32:	2b 81       	ldd	r18, Y+3	; 0x03
    3a34:	3c 81       	ldd	r19, Y+4	; 0x04
    3a36:	2a 30       	cpi	r18, 0x0A	; 10
    3a38:	31 05       	cpc	r19, r1
    3a3a:	b1 f1       	breq	.+108    	; 0x3aa8 <KEYPAD_4x4_adjustKeyNumber+0x112>
    3a3c:	8b 81       	ldd	r24, Y+3	; 0x03
    3a3e:	9c 81       	ldd	r25, Y+4	; 0x04
    3a40:	8b 30       	cpi	r24, 0x0B	; 11
    3a42:	91 05       	cpc	r25, r1
    3a44:	a4 f5       	brge	.+104    	; 0x3aae <KEYPAD_4x4_adjustKeyNumber+0x118>
    3a46:	2d c0       	rjmp	.+90     	; 0x3aa2 <KEYPAD_4x4_adjustKeyNumber+0x10c>
    3a48:	2b 81       	ldd	r18, Y+3	; 0x03
    3a4a:	3c 81       	ldd	r19, Y+4	; 0x04
    3a4c:	2e 30       	cpi	r18, 0x0E	; 14
    3a4e:	31 05       	cpc	r19, r1
    3a50:	b9 f1       	breq	.+110    	; 0x3ac0 <KEYPAD_4x4_adjustKeyNumber+0x12a>
    3a52:	8b 81       	ldd	r24, Y+3	; 0x03
    3a54:	9c 81       	ldd	r25, Y+4	; 0x04
    3a56:	8e 30       	cpi	r24, 0x0E	; 14
    3a58:	91 05       	cpc	r25, r1
    3a5a:	7c f1       	brlt	.+94     	; 0x3aba <KEYPAD_4x4_adjustKeyNumber+0x124>
    3a5c:	2b 81       	ldd	r18, Y+3	; 0x03
    3a5e:	3c 81       	ldd	r19, Y+4	; 0x04
    3a60:	2f 30       	cpi	r18, 0x0F	; 15
    3a62:	31 05       	cpc	r19, r1
    3a64:	79 f1       	breq	.+94     	; 0x3ac4 <KEYPAD_4x4_adjustKeyNumber+0x12e>
    3a66:	8b 81       	ldd	r24, Y+3	; 0x03
    3a68:	9c 81       	ldd	r25, Y+4	; 0x04
    3a6a:	80 31       	cpi	r24, 0x10	; 16
    3a6c:	91 05       	cpc	r25, r1
    3a6e:	69 f1       	breq	.+90     	; 0x3aca <KEYPAD_4x4_adjustKeyNumber+0x134>
    3a70:	2f c0       	rjmp	.+94     	; 0x3ad0 <KEYPAD_4x4_adjustKeyNumber+0x13a>
	{
		case 1: keypad_button = 7;
    3a72:	87 e0       	ldi	r24, 0x07	; 7
    3a74:	89 83       	std	Y+1, r24	; 0x01
    3a76:	2e c0       	rjmp	.+92     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 2: keypad_button = 8;
    3a78:	88 e0       	ldi	r24, 0x08	; 8
    3a7a:	89 83       	std	Y+1, r24	; 0x01
    3a7c:	2b c0       	rjmp	.+86     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 3: keypad_button = 9;
    3a7e:	89 e0       	ldi	r24, 0x09	; 9
    3a80:	89 83       	std	Y+1, r24	; 0x01
    3a82:	28 c0       	rjmp	.+80     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 4: keypad_button = '%'; // ASCII Code of %
    3a84:	85 e2       	ldi	r24, 0x25	; 37
    3a86:	89 83       	std	Y+1, r24	; 0x01
    3a88:	25 c0       	rjmp	.+74     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 5: keypad_button = 4;
    3a8a:	84 e0       	ldi	r24, 0x04	; 4
    3a8c:	89 83       	std	Y+1, r24	; 0x01
    3a8e:	22 c0       	rjmp	.+68     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 6: keypad_button = 5;
    3a90:	85 e0       	ldi	r24, 0x05	; 5
    3a92:	89 83       	std	Y+1, r24	; 0x01
    3a94:	1f c0       	rjmp	.+62     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 7: keypad_button = 6;
    3a96:	86 e0       	ldi	r24, 0x06	; 6
    3a98:	89 83       	std	Y+1, r24	; 0x01
    3a9a:	1c c0       	rjmp	.+56     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 8: keypad_button = '*'; /* ASCII Code of '*' */
    3a9c:	8a e2       	ldi	r24, 0x2A	; 42
    3a9e:	89 83       	std	Y+1, r24	; 0x01
    3aa0:	19 c0       	rjmp	.+50     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;		
		case 9: keypad_button = 1;
    3aa2:	81 e0       	ldi	r24, 0x01	; 1
    3aa4:	89 83       	std	Y+1, r24	; 0x01
    3aa6:	16 c0       	rjmp	.+44     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 10: keypad_button = 2;
    3aa8:	82 e0       	ldi	r24, 0x02	; 2
    3aaa:	89 83       	std	Y+1, r24	; 0x01
    3aac:	13 c0       	rjmp	.+38     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 11: keypad_button = 3;
    3aae:	83 e0       	ldi	r24, 0x03	; 3
    3ab0:	89 83       	std	Y+1, r24	; 0x01
    3ab2:	10 c0       	rjmp	.+32     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 12: keypad_button = '-'; /* ASCII Code of '-' */
    3ab4:	8d e2       	ldi	r24, 0x2D	; 45
    3ab6:	89 83       	std	Y+1, r24	; 0x01
    3ab8:	0d c0       	rjmp	.+26     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 13: keypad_button = 13;  /* ASCII of Enter */
    3aba:	8d e0       	ldi	r24, 0x0D	; 13
    3abc:	89 83       	std	Y+1, r24	; 0x01
    3abe:	0a c0       	rjmp	.+20     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;			
		case 14: keypad_button = 0;
    3ac0:	19 82       	std	Y+1, r1	; 0x01
    3ac2:	08 c0       	rjmp	.+16     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 15: keypad_button = '='; /* ASCII Code of '=' */
    3ac4:	8d e3       	ldi	r24, 0x3D	; 61
    3ac6:	89 83       	std	Y+1, r24	; 0x01
    3ac8:	05 c0       	rjmp	.+10     	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		case 16: keypad_button = '+'; /* ASCII Code of '+' */
    3aca:	8b e2       	ldi	r24, 0x2B	; 43
    3acc:	89 83       	std	Y+1, r24	; 0x01
    3ace:	02 c0       	rjmp	.+4      	; 0x3ad4 <KEYPAD_4x4_adjustKeyNumber+0x13e>
				break;
		default: keypad_button = button_number;
    3ad0:	8a 81       	ldd	r24, Y+2	; 0x02
    3ad2:	89 83       	std	Y+1, r24	; 0x01
				break;
	}
	return keypad_button;
    3ad4:	89 81       	ldd	r24, Y+1	; 0x01
} 
    3ad6:	0f 90       	pop	r0
    3ad8:	0f 90       	pop	r0
    3ada:	0f 90       	pop	r0
    3adc:	0f 90       	pop	r0
    3ade:	cf 91       	pop	r28
    3ae0:	df 91       	pop	r29
    3ae2:	08 95       	ret

00003ae4 <LCD_init>:
 * Initialize the LCD:
 * 1. Setup the LCD pins directions by use the GPIO driver.
 * 2. Setup the LCD Data Mode 4-bits or 8-bits.
 */
void LCD_init(void)
{
    3ae4:	df 93       	push	r29
    3ae6:	cf 93       	push	r28
    3ae8:	cd b7       	in	r28, 0x3d	; 61
    3aea:	de b7       	in	r29, 0x3e	; 62
    3aec:	2e 97       	sbiw	r28, 0x0e	; 14
    3aee:	0f b6       	in	r0, 0x3f	; 63
    3af0:	f8 94       	cli
    3af2:	de bf       	out	0x3e, r29	; 62
    3af4:	0f be       	out	0x3f, r0	; 63
    3af6:	cd bf       	out	0x3d, r28	; 61
	/* Configure the direction for RS and E pins as output pins */
	GPIO_setupPinDirection(LCD_RS_PORT_ID,LCD_RS_PIN_ID,PIN_OUTPUT);
    3af8:	80 e0       	ldi	r24, 0x00	; 0
    3afa:	61 e0       	ldi	r22, 0x01	; 1
    3afc:	41 e0       	ldi	r20, 0x01	; 1
    3afe:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_E_PORT_ID,LCD_E_PIN_ID,PIN_OUTPUT);
    3b02:	80 e0       	ldi	r24, 0x00	; 0
    3b04:	62 e0       	ldi	r22, 0x02	; 2
    3b06:	41 e0       	ldi	r20, 0x01	; 1
    3b08:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
    3b0c:	80 e0       	ldi	r24, 0x00	; 0
    3b0e:	90 e0       	ldi	r25, 0x00	; 0
    3b10:	a0 ea       	ldi	r26, 0xA0	; 160
    3b12:	b1 e4       	ldi	r27, 0x41	; 65
    3b14:	8b 87       	std	Y+11, r24	; 0x0b
    3b16:	9c 87       	std	Y+12, r25	; 0x0c
    3b18:	ad 87       	std	Y+13, r26	; 0x0d
    3b1a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b1c:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b1e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b20:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b22:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b24:	20 e0       	ldi	r18, 0x00	; 0
    3b26:	30 e0       	ldi	r19, 0x00	; 0
    3b28:	4a e7       	ldi	r20, 0x7A	; 122
    3b2a:	55 e4       	ldi	r21, 0x45	; 69
    3b2c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3b30:	dc 01       	movw	r26, r24
    3b32:	cb 01       	movw	r24, r22
    3b34:	8f 83       	std	Y+7, r24	; 0x07
    3b36:	98 87       	std	Y+8, r25	; 0x08
    3b38:	a9 87       	std	Y+9, r26	; 0x09
    3b3a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b3c:	6f 81       	ldd	r22, Y+7	; 0x07
    3b3e:	78 85       	ldd	r23, Y+8	; 0x08
    3b40:	89 85       	ldd	r24, Y+9	; 0x09
    3b42:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b44:	20 e0       	ldi	r18, 0x00	; 0
    3b46:	30 e0       	ldi	r19, 0x00	; 0
    3b48:	40 e8       	ldi	r20, 0x80	; 128
    3b4a:	5f e3       	ldi	r21, 0x3F	; 63
    3b4c:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    3b50:	88 23       	and	r24, r24
    3b52:	2c f4       	brge	.+10     	; 0x3b5e <LCD_init+0x7a>
		__ticks = 1;
    3b54:	81 e0       	ldi	r24, 0x01	; 1
    3b56:	90 e0       	ldi	r25, 0x00	; 0
    3b58:	9e 83       	std	Y+6, r25	; 0x06
    3b5a:	8d 83       	std	Y+5, r24	; 0x05
    3b5c:	3f c0       	rjmp	.+126    	; 0x3bdc <LCD_init+0xf8>
	else if (__tmp > 65535)
    3b5e:	6f 81       	ldd	r22, Y+7	; 0x07
    3b60:	78 85       	ldd	r23, Y+8	; 0x08
    3b62:	89 85       	ldd	r24, Y+9	; 0x09
    3b64:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b66:	20 e0       	ldi	r18, 0x00	; 0
    3b68:	3f ef       	ldi	r19, 0xFF	; 255
    3b6a:	4f e7       	ldi	r20, 0x7F	; 127
    3b6c:	57 e4       	ldi	r21, 0x47	; 71
    3b6e:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    3b72:	18 16       	cp	r1, r24
    3b74:	4c f5       	brge	.+82     	; 0x3bc8 <LCD_init+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b76:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b78:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b7a:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b7c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b7e:	20 e0       	ldi	r18, 0x00	; 0
    3b80:	30 e0       	ldi	r19, 0x00	; 0
    3b82:	40 e2       	ldi	r20, 0x20	; 32
    3b84:	51 e4       	ldi	r21, 0x41	; 65
    3b86:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3b8a:	dc 01       	movw	r26, r24
    3b8c:	cb 01       	movw	r24, r22
    3b8e:	bc 01       	movw	r22, r24
    3b90:	cd 01       	movw	r24, r26
    3b92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b96:	dc 01       	movw	r26, r24
    3b98:	cb 01       	movw	r24, r22
    3b9a:	9e 83       	std	Y+6, r25	; 0x06
    3b9c:	8d 83       	std	Y+5, r24	; 0x05
    3b9e:	0f c0       	rjmp	.+30     	; 0x3bbe <LCD_init+0xda>
    3ba0:	80 e9       	ldi	r24, 0x90	; 144
    3ba2:	91 e0       	ldi	r25, 0x01	; 1
    3ba4:	9c 83       	std	Y+4, r25	; 0x04
    3ba6:	8b 83       	std	Y+3, r24	; 0x03
    3ba8:	8b 81       	ldd	r24, Y+3	; 0x03
    3baa:	9c 81       	ldd	r25, Y+4	; 0x04
    3bac:	01 97       	sbiw	r24, 0x01	; 1
    3bae:	f1 f7       	brne	.-4      	; 0x3bac <LCD_init+0xc8>
    3bb0:	9c 83       	std	Y+4, r25	; 0x04
    3bb2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bb4:	8d 81       	ldd	r24, Y+5	; 0x05
    3bb6:	9e 81       	ldd	r25, Y+6	; 0x06
    3bb8:	01 97       	sbiw	r24, 0x01	; 1
    3bba:	9e 83       	std	Y+6, r25	; 0x06
    3bbc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bbe:	8d 81       	ldd	r24, Y+5	; 0x05
    3bc0:	9e 81       	ldd	r25, Y+6	; 0x06
    3bc2:	00 97       	sbiw	r24, 0x00	; 0
    3bc4:	69 f7       	brne	.-38     	; 0x3ba0 <LCD_init+0xbc>
    3bc6:	14 c0       	rjmp	.+40     	; 0x3bf0 <LCD_init+0x10c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bc8:	6f 81       	ldd	r22, Y+7	; 0x07
    3bca:	78 85       	ldd	r23, Y+8	; 0x08
    3bcc:	89 85       	ldd	r24, Y+9	; 0x09
    3bce:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bd4:	dc 01       	movw	r26, r24
    3bd6:	cb 01       	movw	r24, r22
    3bd8:	9e 83       	std	Y+6, r25	; 0x06
    3bda:	8d 83       	std	Y+5, r24	; 0x05
    3bdc:	8d 81       	ldd	r24, Y+5	; 0x05
    3bde:	9e 81       	ldd	r25, Y+6	; 0x06
    3be0:	9a 83       	std	Y+2, r25	; 0x02
    3be2:	89 83       	std	Y+1, r24	; 0x01
    3be4:	89 81       	ldd	r24, Y+1	; 0x01
    3be6:	9a 81       	ldd	r25, Y+2	; 0x02
    3be8:	01 97       	sbiw	r24, 0x01	; 1
    3bea:	f1 f7       	brne	.-4      	; 0x3be8 <LCD_init+0x104>
    3bec:	9a 83       	std	Y+2, r25	; 0x02
    3bee:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(20);		/* LCD Power ON delay always > 15ms */

#if(LCD_DATA_BITS_MODE == 4)
	/* Configure 4 pins in the data port as output pins */
	GPIO_setupPinDirection(LCD_DATA_PORT_ID,LCD_DB4_PIN_ID,PIN_OUTPUT);
    3bf0:	80 e0       	ldi	r24, 0x00	; 0
    3bf2:	63 e0       	ldi	r22, 0x03	; 3
    3bf4:	41 e0       	ldi	r20, 0x01	; 1
    3bf6:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_DATA_PORT_ID,LCD_DB5_PIN_ID,PIN_OUTPUT);
    3bfa:	80 e0       	ldi	r24, 0x00	; 0
    3bfc:	64 e0       	ldi	r22, 0x04	; 4
    3bfe:	41 e0       	ldi	r20, 0x01	; 1
    3c00:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_DATA_PORT_ID,LCD_DB6_PIN_ID,PIN_OUTPUT);
    3c04:	80 e0       	ldi	r24, 0x00	; 0
    3c06:	65 e0       	ldi	r22, 0x05	; 5
    3c08:	41 e0       	ldi	r20, 0x01	; 1
    3c0a:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LCD_DATA_PORT_ID,LCD_DB7_PIN_ID,PIN_OUTPUT);
    3c0e:	80 e0       	ldi	r24, 0x00	; 0
    3c10:	66 e0       	ldi	r22, 0x06	; 6
    3c12:	41 e0       	ldi	r20, 0x01	; 1
    3c14:	0e 94 a0 18 	call	0x3140	; 0x3140 <GPIO_setupPinDirection>

	/* Send for 4 bit initialization of LCD  */
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE_INIT1);
    3c18:	83 e3       	ldi	r24, 0x33	; 51
    3c1a:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <LCD_sendCommand>
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE_INIT2);
    3c1e:	82 e3       	ldi	r24, 0x32	; 50
    3c20:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <LCD_sendCommand>

	/* use 2-lines LCD + 4-bits Data Mode + 5*7 dot display Mode */
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE);
    3c24:	88 e2       	ldi	r24, 0x28	; 40
    3c26:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <LCD_sendCommand>
	/* use 2-lines LCD + 8-bits Data Mode + 5*7 dot display Mode */
	LCD_sendCommand(LCD_TWO_LINES_EIGHT_BITS_MODE);

#endif

	LCD_sendCommand(LCD_CURSOR_OFF); /* cursor off */
    3c2a:	8c e0       	ldi	r24, 0x0C	; 12
    3c2c:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <LCD_sendCommand>
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* clear LCD at the beginning */
    3c30:	81 e0       	ldi	r24, 0x01	; 1
    3c32:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <LCD_sendCommand>
}
    3c36:	2e 96       	adiw	r28, 0x0e	; 14
    3c38:	0f b6       	in	r0, 0x3f	; 63
    3c3a:	f8 94       	cli
    3c3c:	de bf       	out	0x3e, r29	; 62
    3c3e:	0f be       	out	0x3f, r0	; 63
    3c40:	cd bf       	out	0x3d, r28	; 61
    3c42:	cf 91       	pop	r28
    3c44:	df 91       	pop	r29
    3c46:	08 95       	ret

00003c48 <LCD_sendCommand>:
/*
 * Description :
 * Send the required command to the screen
 */
void LCD_sendCommand(uint8 command)
{
    3c48:	0f 93       	push	r16
    3c4a:	1f 93       	push	r17
    3c4c:	df 93       	push	r29
    3c4e:	cf 93       	push	r28
    3c50:	cd b7       	in	r28, 0x3d	; 61
    3c52:	de b7       	in	r29, 0x3e	; 62
    3c54:	c3 56       	subi	r28, 0x63	; 99
    3c56:	d0 40       	sbci	r29, 0x00	; 0
    3c58:	0f b6       	in	r0, 0x3f	; 63
    3c5a:	f8 94       	cli
    3c5c:	de bf       	out	0x3e, r29	; 62
    3c5e:	0f be       	out	0x3f, r0	; 63
    3c60:	cd bf       	out	0x3d, r28	; 61
    3c62:	fe 01       	movw	r30, r28
    3c64:	ed 59       	subi	r30, 0x9D	; 157
    3c66:	ff 4f       	sbci	r31, 0xFF	; 255
    3c68:	80 83       	st	Z, r24
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_LOW); /* Instruction Mode RS=0 */
    3c6a:	80 e0       	ldi	r24, 0x00	; 0
    3c6c:	61 e0       	ldi	r22, 0x01	; 1
    3c6e:	40 e0       	ldi	r20, 0x00	; 0
    3c70:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    3c74:	fe 01       	movw	r30, r28
    3c76:	e1 5a       	subi	r30, 0xA1	; 161
    3c78:	ff 4f       	sbci	r31, 0xFF	; 255
    3c7a:	80 e0       	ldi	r24, 0x00	; 0
    3c7c:	90 e0       	ldi	r25, 0x00	; 0
    3c7e:	a0 e8       	ldi	r26, 0x80	; 128
    3c80:	bf e3       	ldi	r27, 0x3F	; 63
    3c82:	80 83       	st	Z, r24
    3c84:	91 83       	std	Z+1, r25	; 0x01
    3c86:	a2 83       	std	Z+2, r26	; 0x02
    3c88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c8a:	8e 01       	movw	r16, r28
    3c8c:	05 5a       	subi	r16, 0xA5	; 165
    3c8e:	1f 4f       	sbci	r17, 0xFF	; 255
    3c90:	fe 01       	movw	r30, r28
    3c92:	e1 5a       	subi	r30, 0xA1	; 161
    3c94:	ff 4f       	sbci	r31, 0xFF	; 255
    3c96:	60 81       	ld	r22, Z
    3c98:	71 81       	ldd	r23, Z+1	; 0x01
    3c9a:	82 81       	ldd	r24, Z+2	; 0x02
    3c9c:	93 81       	ldd	r25, Z+3	; 0x03
    3c9e:	20 e0       	ldi	r18, 0x00	; 0
    3ca0:	30 e0       	ldi	r19, 0x00	; 0
    3ca2:	4a e7       	ldi	r20, 0x7A	; 122
    3ca4:	55 e4       	ldi	r21, 0x45	; 69
    3ca6:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3caa:	dc 01       	movw	r26, r24
    3cac:	cb 01       	movw	r24, r22
    3cae:	f8 01       	movw	r30, r16
    3cb0:	80 83       	st	Z, r24
    3cb2:	91 83       	std	Z+1, r25	; 0x01
    3cb4:	a2 83       	std	Z+2, r26	; 0x02
    3cb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3cb8:	fe 01       	movw	r30, r28
    3cba:	e5 5a       	subi	r30, 0xA5	; 165
    3cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    3cbe:	60 81       	ld	r22, Z
    3cc0:	71 81       	ldd	r23, Z+1	; 0x01
    3cc2:	82 81       	ldd	r24, Z+2	; 0x02
    3cc4:	93 81       	ldd	r25, Z+3	; 0x03
    3cc6:	20 e0       	ldi	r18, 0x00	; 0
    3cc8:	30 e0       	ldi	r19, 0x00	; 0
    3cca:	40 e8       	ldi	r20, 0x80	; 128
    3ccc:	5f e3       	ldi	r21, 0x3F	; 63
    3cce:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    3cd2:	88 23       	and	r24, r24
    3cd4:	44 f4       	brge	.+16     	; 0x3ce6 <LCD_sendCommand+0x9e>
		__ticks = 1;
    3cd6:	fe 01       	movw	r30, r28
    3cd8:	e7 5a       	subi	r30, 0xA7	; 167
    3cda:	ff 4f       	sbci	r31, 0xFF	; 255
    3cdc:	81 e0       	ldi	r24, 0x01	; 1
    3cde:	90 e0       	ldi	r25, 0x00	; 0
    3ce0:	91 83       	std	Z+1, r25	; 0x01
    3ce2:	80 83       	st	Z, r24
    3ce4:	64 c0       	rjmp	.+200    	; 0x3dae <LCD_sendCommand+0x166>
	else if (__tmp > 65535)
    3ce6:	fe 01       	movw	r30, r28
    3ce8:	e5 5a       	subi	r30, 0xA5	; 165
    3cea:	ff 4f       	sbci	r31, 0xFF	; 255
    3cec:	60 81       	ld	r22, Z
    3cee:	71 81       	ldd	r23, Z+1	; 0x01
    3cf0:	82 81       	ldd	r24, Z+2	; 0x02
    3cf2:	93 81       	ldd	r25, Z+3	; 0x03
    3cf4:	20 e0       	ldi	r18, 0x00	; 0
    3cf6:	3f ef       	ldi	r19, 0xFF	; 255
    3cf8:	4f e7       	ldi	r20, 0x7F	; 127
    3cfa:	57 e4       	ldi	r21, 0x47	; 71
    3cfc:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    3d00:	18 16       	cp	r1, r24
    3d02:	0c f0       	brlt	.+2      	; 0x3d06 <LCD_sendCommand+0xbe>
    3d04:	43 c0       	rjmp	.+134    	; 0x3d8c <LCD_sendCommand+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d06:	fe 01       	movw	r30, r28
    3d08:	e1 5a       	subi	r30, 0xA1	; 161
    3d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d0c:	60 81       	ld	r22, Z
    3d0e:	71 81       	ldd	r23, Z+1	; 0x01
    3d10:	82 81       	ldd	r24, Z+2	; 0x02
    3d12:	93 81       	ldd	r25, Z+3	; 0x03
    3d14:	20 e0       	ldi	r18, 0x00	; 0
    3d16:	30 e0       	ldi	r19, 0x00	; 0
    3d18:	40 e2       	ldi	r20, 0x20	; 32
    3d1a:	51 e4       	ldi	r21, 0x41	; 65
    3d1c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3d20:	dc 01       	movw	r26, r24
    3d22:	cb 01       	movw	r24, r22
    3d24:	8e 01       	movw	r16, r28
    3d26:	07 5a       	subi	r16, 0xA7	; 167
    3d28:	1f 4f       	sbci	r17, 0xFF	; 255
    3d2a:	bc 01       	movw	r22, r24
    3d2c:	cd 01       	movw	r24, r26
    3d2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d32:	dc 01       	movw	r26, r24
    3d34:	cb 01       	movw	r24, r22
    3d36:	f8 01       	movw	r30, r16
    3d38:	91 83       	std	Z+1, r25	; 0x01
    3d3a:	80 83       	st	Z, r24
    3d3c:	1f c0       	rjmp	.+62     	; 0x3d7c <LCD_sendCommand+0x134>
    3d3e:	fe 01       	movw	r30, r28
    3d40:	e9 5a       	subi	r30, 0xA9	; 169
    3d42:	ff 4f       	sbci	r31, 0xFF	; 255
    3d44:	80 e9       	ldi	r24, 0x90	; 144
    3d46:	91 e0       	ldi	r25, 0x01	; 1
    3d48:	91 83       	std	Z+1, r25	; 0x01
    3d4a:	80 83       	st	Z, r24
    3d4c:	fe 01       	movw	r30, r28
    3d4e:	e9 5a       	subi	r30, 0xA9	; 169
    3d50:	ff 4f       	sbci	r31, 0xFF	; 255
    3d52:	80 81       	ld	r24, Z
    3d54:	91 81       	ldd	r25, Z+1	; 0x01
    3d56:	01 97       	sbiw	r24, 0x01	; 1
    3d58:	f1 f7       	brne	.-4      	; 0x3d56 <LCD_sendCommand+0x10e>
    3d5a:	fe 01       	movw	r30, r28
    3d5c:	e9 5a       	subi	r30, 0xA9	; 169
    3d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d60:	91 83       	std	Z+1, r25	; 0x01
    3d62:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d64:	de 01       	movw	r26, r28
    3d66:	a7 5a       	subi	r26, 0xA7	; 167
    3d68:	bf 4f       	sbci	r27, 0xFF	; 255
    3d6a:	fe 01       	movw	r30, r28
    3d6c:	e7 5a       	subi	r30, 0xA7	; 167
    3d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d70:	80 81       	ld	r24, Z
    3d72:	91 81       	ldd	r25, Z+1	; 0x01
    3d74:	01 97       	sbiw	r24, 0x01	; 1
    3d76:	11 96       	adiw	r26, 0x01	; 1
    3d78:	9c 93       	st	X, r25
    3d7a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d7c:	fe 01       	movw	r30, r28
    3d7e:	e7 5a       	subi	r30, 0xA7	; 167
    3d80:	ff 4f       	sbci	r31, 0xFF	; 255
    3d82:	80 81       	ld	r24, Z
    3d84:	91 81       	ldd	r25, Z+1	; 0x01
    3d86:	00 97       	sbiw	r24, 0x00	; 0
    3d88:	d1 f6       	brne	.-76     	; 0x3d3e <LCD_sendCommand+0xf6>
    3d8a:	27 c0       	rjmp	.+78     	; 0x3dda <LCD_sendCommand+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d8c:	8e 01       	movw	r16, r28
    3d8e:	07 5a       	subi	r16, 0xA7	; 167
    3d90:	1f 4f       	sbci	r17, 0xFF	; 255
    3d92:	fe 01       	movw	r30, r28
    3d94:	e5 5a       	subi	r30, 0xA5	; 165
    3d96:	ff 4f       	sbci	r31, 0xFF	; 255
    3d98:	60 81       	ld	r22, Z
    3d9a:	71 81       	ldd	r23, Z+1	; 0x01
    3d9c:	82 81       	ldd	r24, Z+2	; 0x02
    3d9e:	93 81       	ldd	r25, Z+3	; 0x03
    3da0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3da4:	dc 01       	movw	r26, r24
    3da6:	cb 01       	movw	r24, r22
    3da8:	f8 01       	movw	r30, r16
    3daa:	91 83       	std	Z+1, r25	; 0x01
    3dac:	80 83       	st	Z, r24
    3dae:	de 01       	movw	r26, r28
    3db0:	ab 5a       	subi	r26, 0xAB	; 171
    3db2:	bf 4f       	sbci	r27, 0xFF	; 255
    3db4:	fe 01       	movw	r30, r28
    3db6:	e7 5a       	subi	r30, 0xA7	; 167
    3db8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dba:	80 81       	ld	r24, Z
    3dbc:	91 81       	ldd	r25, Z+1	; 0x01
    3dbe:	8d 93       	st	X+, r24
    3dc0:	9c 93       	st	X, r25
    3dc2:	fe 01       	movw	r30, r28
    3dc4:	eb 5a       	subi	r30, 0xAB	; 171
    3dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc8:	80 81       	ld	r24, Z
    3dca:	91 81       	ldd	r25, Z+1	; 0x01
    3dcc:	01 97       	sbiw	r24, 0x01	; 1
    3dce:	f1 f7       	brne	.-4      	; 0x3dcc <LCD_sendCommand+0x184>
    3dd0:	fe 01       	movw	r30, r28
    3dd2:	eb 5a       	subi	r30, 0xAB	; 171
    3dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3dd6:	91 83       	std	Z+1, r25	; 0x01
    3dd8:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
    3dda:	80 e0       	ldi	r24, 0x00	; 0
    3ddc:	62 e0       	ldi	r22, 0x02	; 2
    3dde:	41 e0       	ldi	r20, 0x01	; 1
    3de0:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    3de4:	fe 01       	movw	r30, r28
    3de6:	ef 5a       	subi	r30, 0xAF	; 175
    3de8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dea:	80 e0       	ldi	r24, 0x00	; 0
    3dec:	90 e0       	ldi	r25, 0x00	; 0
    3dee:	a0 e8       	ldi	r26, 0x80	; 128
    3df0:	bf e3       	ldi	r27, 0x3F	; 63
    3df2:	80 83       	st	Z, r24
    3df4:	91 83       	std	Z+1, r25	; 0x01
    3df6:	a2 83       	std	Z+2, r26	; 0x02
    3df8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dfa:	8e 01       	movw	r16, r28
    3dfc:	03 5b       	subi	r16, 0xB3	; 179
    3dfe:	1f 4f       	sbci	r17, 0xFF	; 255
    3e00:	fe 01       	movw	r30, r28
    3e02:	ef 5a       	subi	r30, 0xAF	; 175
    3e04:	ff 4f       	sbci	r31, 0xFF	; 255
    3e06:	60 81       	ld	r22, Z
    3e08:	71 81       	ldd	r23, Z+1	; 0x01
    3e0a:	82 81       	ldd	r24, Z+2	; 0x02
    3e0c:	93 81       	ldd	r25, Z+3	; 0x03
    3e0e:	20 e0       	ldi	r18, 0x00	; 0
    3e10:	30 e0       	ldi	r19, 0x00	; 0
    3e12:	4a e7       	ldi	r20, 0x7A	; 122
    3e14:	55 e4       	ldi	r21, 0x45	; 69
    3e16:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3e1a:	dc 01       	movw	r26, r24
    3e1c:	cb 01       	movw	r24, r22
    3e1e:	f8 01       	movw	r30, r16
    3e20:	80 83       	st	Z, r24
    3e22:	91 83       	std	Z+1, r25	; 0x01
    3e24:	a2 83       	std	Z+2, r26	; 0x02
    3e26:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e28:	fe 01       	movw	r30, r28
    3e2a:	e3 5b       	subi	r30, 0xB3	; 179
    3e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e2e:	60 81       	ld	r22, Z
    3e30:	71 81       	ldd	r23, Z+1	; 0x01
    3e32:	82 81       	ldd	r24, Z+2	; 0x02
    3e34:	93 81       	ldd	r25, Z+3	; 0x03
    3e36:	20 e0       	ldi	r18, 0x00	; 0
    3e38:	30 e0       	ldi	r19, 0x00	; 0
    3e3a:	40 e8       	ldi	r20, 0x80	; 128
    3e3c:	5f e3       	ldi	r21, 0x3F	; 63
    3e3e:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    3e42:	88 23       	and	r24, r24
    3e44:	44 f4       	brge	.+16     	; 0x3e56 <LCD_sendCommand+0x20e>
		__ticks = 1;
    3e46:	fe 01       	movw	r30, r28
    3e48:	e5 5b       	subi	r30, 0xB5	; 181
    3e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4c:	81 e0       	ldi	r24, 0x01	; 1
    3e4e:	90 e0       	ldi	r25, 0x00	; 0
    3e50:	91 83       	std	Z+1, r25	; 0x01
    3e52:	80 83       	st	Z, r24
    3e54:	64 c0       	rjmp	.+200    	; 0x3f1e <LCD_sendCommand+0x2d6>
	else if (__tmp > 65535)
    3e56:	fe 01       	movw	r30, r28
    3e58:	e3 5b       	subi	r30, 0xB3	; 179
    3e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e5c:	60 81       	ld	r22, Z
    3e5e:	71 81       	ldd	r23, Z+1	; 0x01
    3e60:	82 81       	ldd	r24, Z+2	; 0x02
    3e62:	93 81       	ldd	r25, Z+3	; 0x03
    3e64:	20 e0       	ldi	r18, 0x00	; 0
    3e66:	3f ef       	ldi	r19, 0xFF	; 255
    3e68:	4f e7       	ldi	r20, 0x7F	; 127
    3e6a:	57 e4       	ldi	r21, 0x47	; 71
    3e6c:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    3e70:	18 16       	cp	r1, r24
    3e72:	0c f0       	brlt	.+2      	; 0x3e76 <LCD_sendCommand+0x22e>
    3e74:	43 c0       	rjmp	.+134    	; 0x3efc <LCD_sendCommand+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e76:	fe 01       	movw	r30, r28
    3e78:	ef 5a       	subi	r30, 0xAF	; 175
    3e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e7c:	60 81       	ld	r22, Z
    3e7e:	71 81       	ldd	r23, Z+1	; 0x01
    3e80:	82 81       	ldd	r24, Z+2	; 0x02
    3e82:	93 81       	ldd	r25, Z+3	; 0x03
    3e84:	20 e0       	ldi	r18, 0x00	; 0
    3e86:	30 e0       	ldi	r19, 0x00	; 0
    3e88:	40 e2       	ldi	r20, 0x20	; 32
    3e8a:	51 e4       	ldi	r21, 0x41	; 65
    3e8c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3e90:	dc 01       	movw	r26, r24
    3e92:	cb 01       	movw	r24, r22
    3e94:	8e 01       	movw	r16, r28
    3e96:	05 5b       	subi	r16, 0xB5	; 181
    3e98:	1f 4f       	sbci	r17, 0xFF	; 255
    3e9a:	bc 01       	movw	r22, r24
    3e9c:	cd 01       	movw	r24, r26
    3e9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ea2:	dc 01       	movw	r26, r24
    3ea4:	cb 01       	movw	r24, r22
    3ea6:	f8 01       	movw	r30, r16
    3ea8:	91 83       	std	Z+1, r25	; 0x01
    3eaa:	80 83       	st	Z, r24
    3eac:	1f c0       	rjmp	.+62     	; 0x3eec <LCD_sendCommand+0x2a4>
    3eae:	fe 01       	movw	r30, r28
    3eb0:	e7 5b       	subi	r30, 0xB7	; 183
    3eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb4:	80 e9       	ldi	r24, 0x90	; 144
    3eb6:	91 e0       	ldi	r25, 0x01	; 1
    3eb8:	91 83       	std	Z+1, r25	; 0x01
    3eba:	80 83       	st	Z, r24
    3ebc:	fe 01       	movw	r30, r28
    3ebe:	e7 5b       	subi	r30, 0xB7	; 183
    3ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ec2:	80 81       	ld	r24, Z
    3ec4:	91 81       	ldd	r25, Z+1	; 0x01
    3ec6:	01 97       	sbiw	r24, 0x01	; 1
    3ec8:	f1 f7       	brne	.-4      	; 0x3ec6 <LCD_sendCommand+0x27e>
    3eca:	fe 01       	movw	r30, r28
    3ecc:	e7 5b       	subi	r30, 0xB7	; 183
    3ece:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed0:	91 83       	std	Z+1, r25	; 0x01
    3ed2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ed4:	de 01       	movw	r26, r28
    3ed6:	a5 5b       	subi	r26, 0xB5	; 181
    3ed8:	bf 4f       	sbci	r27, 0xFF	; 255
    3eda:	fe 01       	movw	r30, r28
    3edc:	e5 5b       	subi	r30, 0xB5	; 181
    3ede:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee0:	80 81       	ld	r24, Z
    3ee2:	91 81       	ldd	r25, Z+1	; 0x01
    3ee4:	01 97       	sbiw	r24, 0x01	; 1
    3ee6:	11 96       	adiw	r26, 0x01	; 1
    3ee8:	9c 93       	st	X, r25
    3eea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3eec:	fe 01       	movw	r30, r28
    3eee:	e5 5b       	subi	r30, 0xB5	; 181
    3ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef2:	80 81       	ld	r24, Z
    3ef4:	91 81       	ldd	r25, Z+1	; 0x01
    3ef6:	00 97       	sbiw	r24, 0x00	; 0
    3ef8:	d1 f6       	brne	.-76     	; 0x3eae <LCD_sendCommand+0x266>
    3efa:	27 c0       	rjmp	.+78     	; 0x3f4a <LCD_sendCommand+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3efc:	8e 01       	movw	r16, r28
    3efe:	05 5b       	subi	r16, 0xB5	; 181
    3f00:	1f 4f       	sbci	r17, 0xFF	; 255
    3f02:	fe 01       	movw	r30, r28
    3f04:	e3 5b       	subi	r30, 0xB3	; 179
    3f06:	ff 4f       	sbci	r31, 0xFF	; 255
    3f08:	60 81       	ld	r22, Z
    3f0a:	71 81       	ldd	r23, Z+1	; 0x01
    3f0c:	82 81       	ldd	r24, Z+2	; 0x02
    3f0e:	93 81       	ldd	r25, Z+3	; 0x03
    3f10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f14:	dc 01       	movw	r26, r24
    3f16:	cb 01       	movw	r24, r22
    3f18:	f8 01       	movw	r30, r16
    3f1a:	91 83       	std	Z+1, r25	; 0x01
    3f1c:	80 83       	st	Z, r24
    3f1e:	de 01       	movw	r26, r28
    3f20:	a9 5b       	subi	r26, 0xB9	; 185
    3f22:	bf 4f       	sbci	r27, 0xFF	; 255
    3f24:	fe 01       	movw	r30, r28
    3f26:	e5 5b       	subi	r30, 0xB5	; 181
    3f28:	ff 4f       	sbci	r31, 0xFF	; 255
    3f2a:	80 81       	ld	r24, Z
    3f2c:	91 81       	ldd	r25, Z+1	; 0x01
    3f2e:	8d 93       	st	X+, r24
    3f30:	9c 93       	st	X, r25
    3f32:	fe 01       	movw	r30, r28
    3f34:	e9 5b       	subi	r30, 0xB9	; 185
    3f36:	ff 4f       	sbci	r31, 0xFF	; 255
    3f38:	80 81       	ld	r24, Z
    3f3a:	91 81       	ldd	r25, Z+1	; 0x01
    3f3c:	01 97       	sbiw	r24, 0x01	; 1
    3f3e:	f1 f7       	brne	.-4      	; 0x3f3c <LCD_sendCommand+0x2f4>
    3f40:	fe 01       	movw	r30, r28
    3f42:	e9 5b       	subi	r30, 0xB9	; 185
    3f44:	ff 4f       	sbci	r31, 0xFF	; 255
    3f46:	91 83       	std	Z+1, r25	; 0x01
    3f48:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

#if(LCD_DATA_BITS_MODE == 4)
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB4_PIN_ID,GET_BIT(command,4));
    3f4a:	fe 01       	movw	r30, r28
    3f4c:	ed 59       	subi	r30, 0x9D	; 157
    3f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f50:	80 81       	ld	r24, Z
    3f52:	88 2f       	mov	r24, r24
    3f54:	90 e0       	ldi	r25, 0x00	; 0
    3f56:	80 71       	andi	r24, 0x10	; 16
    3f58:	90 70       	andi	r25, 0x00	; 0
    3f5a:	95 95       	asr	r25
    3f5c:	87 95       	ror	r24
    3f5e:	95 95       	asr	r25
    3f60:	87 95       	ror	r24
    3f62:	95 95       	asr	r25
    3f64:	87 95       	ror	r24
    3f66:	95 95       	asr	r25
    3f68:	87 95       	ror	r24
    3f6a:	98 2f       	mov	r25, r24
    3f6c:	80 e0       	ldi	r24, 0x00	; 0
    3f6e:	63 e0       	ldi	r22, 0x03	; 3
    3f70:	49 2f       	mov	r20, r25
    3f72:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB5_PIN_ID,GET_BIT(command,5));
    3f76:	fe 01       	movw	r30, r28
    3f78:	ed 59       	subi	r30, 0x9D	; 157
    3f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f7c:	80 81       	ld	r24, Z
    3f7e:	88 2f       	mov	r24, r24
    3f80:	90 e0       	ldi	r25, 0x00	; 0
    3f82:	80 72       	andi	r24, 0x20	; 32
    3f84:	90 70       	andi	r25, 0x00	; 0
    3f86:	95 95       	asr	r25
    3f88:	87 95       	ror	r24
    3f8a:	95 95       	asr	r25
    3f8c:	87 95       	ror	r24
    3f8e:	95 95       	asr	r25
    3f90:	87 95       	ror	r24
    3f92:	95 95       	asr	r25
    3f94:	87 95       	ror	r24
    3f96:	95 95       	asr	r25
    3f98:	87 95       	ror	r24
    3f9a:	98 2f       	mov	r25, r24
    3f9c:	80 e0       	ldi	r24, 0x00	; 0
    3f9e:	64 e0       	ldi	r22, 0x04	; 4
    3fa0:	49 2f       	mov	r20, r25
    3fa2:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB6_PIN_ID,GET_BIT(command,6));
    3fa6:	fe 01       	movw	r30, r28
    3fa8:	ed 59       	subi	r30, 0x9D	; 157
    3faa:	ff 4f       	sbci	r31, 0xFF	; 255
    3fac:	80 81       	ld	r24, Z
    3fae:	88 2f       	mov	r24, r24
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	80 74       	andi	r24, 0x40	; 64
    3fb4:	90 70       	andi	r25, 0x00	; 0
    3fb6:	08 2e       	mov	r0, r24
    3fb8:	89 2f       	mov	r24, r25
    3fba:	00 0c       	add	r0, r0
    3fbc:	88 1f       	adc	r24, r24
    3fbe:	99 0b       	sbc	r25, r25
    3fc0:	00 0c       	add	r0, r0
    3fc2:	88 1f       	adc	r24, r24
    3fc4:	99 1f       	adc	r25, r25
    3fc6:	98 2f       	mov	r25, r24
    3fc8:	80 e0       	ldi	r24, 0x00	; 0
    3fca:	65 e0       	ldi	r22, 0x05	; 5
    3fcc:	49 2f       	mov	r20, r25
    3fce:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB7_PIN_ID,GET_BIT(command,7));
    3fd2:	fe 01       	movw	r30, r28
    3fd4:	ed 59       	subi	r30, 0x9D	; 157
    3fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd8:	80 81       	ld	r24, Z
    3fda:	98 2f       	mov	r25, r24
    3fdc:	99 1f       	adc	r25, r25
    3fde:	99 27       	eor	r25, r25
    3fe0:	99 1f       	adc	r25, r25
    3fe2:	80 e0       	ldi	r24, 0x00	; 0
    3fe4:	66 e0       	ldi	r22, 0x06	; 6
    3fe6:	49 2f       	mov	r20, r25
    3fe8:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    3fec:	fe 01       	movw	r30, r28
    3fee:	ed 5b       	subi	r30, 0xBD	; 189
    3ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff2:	80 e0       	ldi	r24, 0x00	; 0
    3ff4:	90 e0       	ldi	r25, 0x00	; 0
    3ff6:	a0 e8       	ldi	r26, 0x80	; 128
    3ff8:	bf e3       	ldi	r27, 0x3F	; 63
    3ffa:	80 83       	st	Z, r24
    3ffc:	91 83       	std	Z+1, r25	; 0x01
    3ffe:	a2 83       	std	Z+2, r26	; 0x02
    4000:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4002:	8e 01       	movw	r16, r28
    4004:	01 5c       	subi	r16, 0xC1	; 193
    4006:	1f 4f       	sbci	r17, 0xFF	; 255
    4008:	fe 01       	movw	r30, r28
    400a:	ed 5b       	subi	r30, 0xBD	; 189
    400c:	ff 4f       	sbci	r31, 0xFF	; 255
    400e:	60 81       	ld	r22, Z
    4010:	71 81       	ldd	r23, Z+1	; 0x01
    4012:	82 81       	ldd	r24, Z+2	; 0x02
    4014:	93 81       	ldd	r25, Z+3	; 0x03
    4016:	20 e0       	ldi	r18, 0x00	; 0
    4018:	30 e0       	ldi	r19, 0x00	; 0
    401a:	4a e7       	ldi	r20, 0x7A	; 122
    401c:	55 e4       	ldi	r21, 0x45	; 69
    401e:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4022:	dc 01       	movw	r26, r24
    4024:	cb 01       	movw	r24, r22
    4026:	f8 01       	movw	r30, r16
    4028:	80 83       	st	Z, r24
    402a:	91 83       	std	Z+1, r25	; 0x01
    402c:	a2 83       	std	Z+2, r26	; 0x02
    402e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4030:	fe 01       	movw	r30, r28
    4032:	ff 96       	adiw	r30, 0x3f	; 63
    4034:	60 81       	ld	r22, Z
    4036:	71 81       	ldd	r23, Z+1	; 0x01
    4038:	82 81       	ldd	r24, Z+2	; 0x02
    403a:	93 81       	ldd	r25, Z+3	; 0x03
    403c:	20 e0       	ldi	r18, 0x00	; 0
    403e:	30 e0       	ldi	r19, 0x00	; 0
    4040:	40 e8       	ldi	r20, 0x80	; 128
    4042:	5f e3       	ldi	r21, 0x3F	; 63
    4044:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4048:	88 23       	and	r24, r24
    404a:	2c f4       	brge	.+10     	; 0x4056 <LCD_sendCommand+0x40e>
		__ticks = 1;
    404c:	81 e0       	ldi	r24, 0x01	; 1
    404e:	90 e0       	ldi	r25, 0x00	; 0
    4050:	9e af       	std	Y+62, r25	; 0x3e
    4052:	8d af       	std	Y+61, r24	; 0x3d
    4054:	46 c0       	rjmp	.+140    	; 0x40e2 <LCD_sendCommand+0x49a>
	else if (__tmp > 65535)
    4056:	fe 01       	movw	r30, r28
    4058:	ff 96       	adiw	r30, 0x3f	; 63
    405a:	60 81       	ld	r22, Z
    405c:	71 81       	ldd	r23, Z+1	; 0x01
    405e:	82 81       	ldd	r24, Z+2	; 0x02
    4060:	93 81       	ldd	r25, Z+3	; 0x03
    4062:	20 e0       	ldi	r18, 0x00	; 0
    4064:	3f ef       	ldi	r19, 0xFF	; 255
    4066:	4f e7       	ldi	r20, 0x7F	; 127
    4068:	57 e4       	ldi	r21, 0x47	; 71
    406a:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    406e:	18 16       	cp	r1, r24
    4070:	64 f5       	brge	.+88     	; 0x40ca <LCD_sendCommand+0x482>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4072:	fe 01       	movw	r30, r28
    4074:	ed 5b       	subi	r30, 0xBD	; 189
    4076:	ff 4f       	sbci	r31, 0xFF	; 255
    4078:	60 81       	ld	r22, Z
    407a:	71 81       	ldd	r23, Z+1	; 0x01
    407c:	82 81       	ldd	r24, Z+2	; 0x02
    407e:	93 81       	ldd	r25, Z+3	; 0x03
    4080:	20 e0       	ldi	r18, 0x00	; 0
    4082:	30 e0       	ldi	r19, 0x00	; 0
    4084:	40 e2       	ldi	r20, 0x20	; 32
    4086:	51 e4       	ldi	r21, 0x41	; 65
    4088:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    408c:	dc 01       	movw	r26, r24
    408e:	cb 01       	movw	r24, r22
    4090:	bc 01       	movw	r22, r24
    4092:	cd 01       	movw	r24, r26
    4094:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4098:	dc 01       	movw	r26, r24
    409a:	cb 01       	movw	r24, r22
    409c:	9e af       	std	Y+62, r25	; 0x3e
    409e:	8d af       	std	Y+61, r24	; 0x3d
    40a0:	0f c0       	rjmp	.+30     	; 0x40c0 <LCD_sendCommand+0x478>
    40a2:	80 e9       	ldi	r24, 0x90	; 144
    40a4:	91 e0       	ldi	r25, 0x01	; 1
    40a6:	9c af       	std	Y+60, r25	; 0x3c
    40a8:	8b af       	std	Y+59, r24	; 0x3b
    40aa:	8b ad       	ldd	r24, Y+59	; 0x3b
    40ac:	9c ad       	ldd	r25, Y+60	; 0x3c
    40ae:	01 97       	sbiw	r24, 0x01	; 1
    40b0:	f1 f7       	brne	.-4      	; 0x40ae <LCD_sendCommand+0x466>
    40b2:	9c af       	std	Y+60, r25	; 0x3c
    40b4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40b6:	8d ad       	ldd	r24, Y+61	; 0x3d
    40b8:	9e ad       	ldd	r25, Y+62	; 0x3e
    40ba:	01 97       	sbiw	r24, 0x01	; 1
    40bc:	9e af       	std	Y+62, r25	; 0x3e
    40be:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40c0:	8d ad       	ldd	r24, Y+61	; 0x3d
    40c2:	9e ad       	ldd	r25, Y+62	; 0x3e
    40c4:	00 97       	sbiw	r24, 0x00	; 0
    40c6:	69 f7       	brne	.-38     	; 0x40a2 <LCD_sendCommand+0x45a>
    40c8:	16 c0       	rjmp	.+44     	; 0x40f6 <LCD_sendCommand+0x4ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40ca:	fe 01       	movw	r30, r28
    40cc:	ff 96       	adiw	r30, 0x3f	; 63
    40ce:	60 81       	ld	r22, Z
    40d0:	71 81       	ldd	r23, Z+1	; 0x01
    40d2:	82 81       	ldd	r24, Z+2	; 0x02
    40d4:	93 81       	ldd	r25, Z+3	; 0x03
    40d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40da:	dc 01       	movw	r26, r24
    40dc:	cb 01       	movw	r24, r22
    40de:	9e af       	std	Y+62, r25	; 0x3e
    40e0:	8d af       	std	Y+61, r24	; 0x3d
    40e2:	8d ad       	ldd	r24, Y+61	; 0x3d
    40e4:	9e ad       	ldd	r25, Y+62	; 0x3e
    40e6:	9a af       	std	Y+58, r25	; 0x3a
    40e8:	89 af       	std	Y+57, r24	; 0x39
    40ea:	89 ad       	ldd	r24, Y+57	; 0x39
    40ec:	9a ad       	ldd	r25, Y+58	; 0x3a
    40ee:	01 97       	sbiw	r24, 0x01	; 1
    40f0:	f1 f7       	brne	.-4      	; 0x40ee <LCD_sendCommand+0x4a6>
    40f2:	9a af       	std	Y+58, r25	; 0x3a
    40f4:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
    40f6:	80 e0       	ldi	r24, 0x00	; 0
    40f8:	62 e0       	ldi	r22, 0x02	; 2
    40fa:	40 e0       	ldi	r20, 0x00	; 0
    40fc:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    4100:	80 e0       	ldi	r24, 0x00	; 0
    4102:	90 e0       	ldi	r25, 0x00	; 0
    4104:	a0 e8       	ldi	r26, 0x80	; 128
    4106:	bf e3       	ldi	r27, 0x3F	; 63
    4108:	8d ab       	std	Y+53, r24	; 0x35
    410a:	9e ab       	std	Y+54, r25	; 0x36
    410c:	af ab       	std	Y+55, r26	; 0x37
    410e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4110:	6d a9       	ldd	r22, Y+53	; 0x35
    4112:	7e a9       	ldd	r23, Y+54	; 0x36
    4114:	8f a9       	ldd	r24, Y+55	; 0x37
    4116:	98 ad       	ldd	r25, Y+56	; 0x38
    4118:	20 e0       	ldi	r18, 0x00	; 0
    411a:	30 e0       	ldi	r19, 0x00	; 0
    411c:	4a e7       	ldi	r20, 0x7A	; 122
    411e:	55 e4       	ldi	r21, 0x45	; 69
    4120:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4124:	dc 01       	movw	r26, r24
    4126:	cb 01       	movw	r24, r22
    4128:	89 ab       	std	Y+49, r24	; 0x31
    412a:	9a ab       	std	Y+50, r25	; 0x32
    412c:	ab ab       	std	Y+51, r26	; 0x33
    412e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4130:	69 a9       	ldd	r22, Y+49	; 0x31
    4132:	7a a9       	ldd	r23, Y+50	; 0x32
    4134:	8b a9       	ldd	r24, Y+51	; 0x33
    4136:	9c a9       	ldd	r25, Y+52	; 0x34
    4138:	20 e0       	ldi	r18, 0x00	; 0
    413a:	30 e0       	ldi	r19, 0x00	; 0
    413c:	40 e8       	ldi	r20, 0x80	; 128
    413e:	5f e3       	ldi	r21, 0x3F	; 63
    4140:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4144:	88 23       	and	r24, r24
    4146:	2c f4       	brge	.+10     	; 0x4152 <LCD_sendCommand+0x50a>
		__ticks = 1;
    4148:	81 e0       	ldi	r24, 0x01	; 1
    414a:	90 e0       	ldi	r25, 0x00	; 0
    414c:	98 ab       	std	Y+48, r25	; 0x30
    414e:	8f a7       	std	Y+47, r24	; 0x2f
    4150:	3f c0       	rjmp	.+126    	; 0x41d0 <LCD_sendCommand+0x588>
	else if (__tmp > 65535)
    4152:	69 a9       	ldd	r22, Y+49	; 0x31
    4154:	7a a9       	ldd	r23, Y+50	; 0x32
    4156:	8b a9       	ldd	r24, Y+51	; 0x33
    4158:	9c a9       	ldd	r25, Y+52	; 0x34
    415a:	20 e0       	ldi	r18, 0x00	; 0
    415c:	3f ef       	ldi	r19, 0xFF	; 255
    415e:	4f e7       	ldi	r20, 0x7F	; 127
    4160:	57 e4       	ldi	r21, 0x47	; 71
    4162:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4166:	18 16       	cp	r1, r24
    4168:	4c f5       	brge	.+82     	; 0x41bc <LCD_sendCommand+0x574>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    416a:	6d a9       	ldd	r22, Y+53	; 0x35
    416c:	7e a9       	ldd	r23, Y+54	; 0x36
    416e:	8f a9       	ldd	r24, Y+55	; 0x37
    4170:	98 ad       	ldd	r25, Y+56	; 0x38
    4172:	20 e0       	ldi	r18, 0x00	; 0
    4174:	30 e0       	ldi	r19, 0x00	; 0
    4176:	40 e2       	ldi	r20, 0x20	; 32
    4178:	51 e4       	ldi	r21, 0x41	; 65
    417a:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    417e:	dc 01       	movw	r26, r24
    4180:	cb 01       	movw	r24, r22
    4182:	bc 01       	movw	r22, r24
    4184:	cd 01       	movw	r24, r26
    4186:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    418a:	dc 01       	movw	r26, r24
    418c:	cb 01       	movw	r24, r22
    418e:	98 ab       	std	Y+48, r25	; 0x30
    4190:	8f a7       	std	Y+47, r24	; 0x2f
    4192:	0f c0       	rjmp	.+30     	; 0x41b2 <LCD_sendCommand+0x56a>
    4194:	80 e9       	ldi	r24, 0x90	; 144
    4196:	91 e0       	ldi	r25, 0x01	; 1
    4198:	9e a7       	std	Y+46, r25	; 0x2e
    419a:	8d a7       	std	Y+45, r24	; 0x2d
    419c:	8d a5       	ldd	r24, Y+45	; 0x2d
    419e:	9e a5       	ldd	r25, Y+46	; 0x2e
    41a0:	01 97       	sbiw	r24, 0x01	; 1
    41a2:	f1 f7       	brne	.-4      	; 0x41a0 <LCD_sendCommand+0x558>
    41a4:	9e a7       	std	Y+46, r25	; 0x2e
    41a6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    41aa:	98 a9       	ldd	r25, Y+48	; 0x30
    41ac:	01 97       	sbiw	r24, 0x01	; 1
    41ae:	98 ab       	std	Y+48, r25	; 0x30
    41b0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41b2:	8f a5       	ldd	r24, Y+47	; 0x2f
    41b4:	98 a9       	ldd	r25, Y+48	; 0x30
    41b6:	00 97       	sbiw	r24, 0x00	; 0
    41b8:	69 f7       	brne	.-38     	; 0x4194 <LCD_sendCommand+0x54c>
    41ba:	14 c0       	rjmp	.+40     	; 0x41e4 <LCD_sendCommand+0x59c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41bc:	69 a9       	ldd	r22, Y+49	; 0x31
    41be:	7a a9       	ldd	r23, Y+50	; 0x32
    41c0:	8b a9       	ldd	r24, Y+51	; 0x33
    41c2:	9c a9       	ldd	r25, Y+52	; 0x34
    41c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    41c8:	dc 01       	movw	r26, r24
    41ca:	cb 01       	movw	r24, r22
    41cc:	98 ab       	std	Y+48, r25	; 0x30
    41ce:	8f a7       	std	Y+47, r24	; 0x2f
    41d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    41d2:	98 a9       	ldd	r25, Y+48	; 0x30
    41d4:	9c a7       	std	Y+44, r25	; 0x2c
    41d6:	8b a7       	std	Y+43, r24	; 0x2b
    41d8:	8b a5       	ldd	r24, Y+43	; 0x2b
    41da:	9c a5       	ldd	r25, Y+44	; 0x2c
    41dc:	01 97       	sbiw	r24, 0x01	; 1
    41de:	f1 f7       	brne	.-4      	; 0x41dc <LCD_sendCommand+0x594>
    41e0:	9c a7       	std	Y+44, r25	; 0x2c
    41e2:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
    41e4:	80 e0       	ldi	r24, 0x00	; 0
    41e6:	62 e0       	ldi	r22, 0x02	; 2
    41e8:	41 e0       	ldi	r20, 0x01	; 1
    41ea:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    41ee:	80 e0       	ldi	r24, 0x00	; 0
    41f0:	90 e0       	ldi	r25, 0x00	; 0
    41f2:	a0 e8       	ldi	r26, 0x80	; 128
    41f4:	bf e3       	ldi	r27, 0x3F	; 63
    41f6:	8f a3       	std	Y+39, r24	; 0x27
    41f8:	98 a7       	std	Y+40, r25	; 0x28
    41fa:	a9 a7       	std	Y+41, r26	; 0x29
    41fc:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    41fe:	6f a1       	ldd	r22, Y+39	; 0x27
    4200:	78 a5       	ldd	r23, Y+40	; 0x28
    4202:	89 a5       	ldd	r24, Y+41	; 0x29
    4204:	9a a5       	ldd	r25, Y+42	; 0x2a
    4206:	20 e0       	ldi	r18, 0x00	; 0
    4208:	30 e0       	ldi	r19, 0x00	; 0
    420a:	4a e7       	ldi	r20, 0x7A	; 122
    420c:	55 e4       	ldi	r21, 0x45	; 69
    420e:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4212:	dc 01       	movw	r26, r24
    4214:	cb 01       	movw	r24, r22
    4216:	8b a3       	std	Y+35, r24	; 0x23
    4218:	9c a3       	std	Y+36, r25	; 0x24
    421a:	ad a3       	std	Y+37, r26	; 0x25
    421c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    421e:	6b a1       	ldd	r22, Y+35	; 0x23
    4220:	7c a1       	ldd	r23, Y+36	; 0x24
    4222:	8d a1       	ldd	r24, Y+37	; 0x25
    4224:	9e a1       	ldd	r25, Y+38	; 0x26
    4226:	20 e0       	ldi	r18, 0x00	; 0
    4228:	30 e0       	ldi	r19, 0x00	; 0
    422a:	40 e8       	ldi	r20, 0x80	; 128
    422c:	5f e3       	ldi	r21, 0x3F	; 63
    422e:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4232:	88 23       	and	r24, r24
    4234:	2c f4       	brge	.+10     	; 0x4240 <LCD_sendCommand+0x5f8>
		__ticks = 1;
    4236:	81 e0       	ldi	r24, 0x01	; 1
    4238:	90 e0       	ldi	r25, 0x00	; 0
    423a:	9a a3       	std	Y+34, r25	; 0x22
    423c:	89 a3       	std	Y+33, r24	; 0x21
    423e:	3f c0       	rjmp	.+126    	; 0x42be <LCD_sendCommand+0x676>
	else if (__tmp > 65535)
    4240:	6b a1       	ldd	r22, Y+35	; 0x23
    4242:	7c a1       	ldd	r23, Y+36	; 0x24
    4244:	8d a1       	ldd	r24, Y+37	; 0x25
    4246:	9e a1       	ldd	r25, Y+38	; 0x26
    4248:	20 e0       	ldi	r18, 0x00	; 0
    424a:	3f ef       	ldi	r19, 0xFF	; 255
    424c:	4f e7       	ldi	r20, 0x7F	; 127
    424e:	57 e4       	ldi	r21, 0x47	; 71
    4250:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4254:	18 16       	cp	r1, r24
    4256:	4c f5       	brge	.+82     	; 0x42aa <LCD_sendCommand+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4258:	6f a1       	ldd	r22, Y+39	; 0x27
    425a:	78 a5       	ldd	r23, Y+40	; 0x28
    425c:	89 a5       	ldd	r24, Y+41	; 0x29
    425e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4260:	20 e0       	ldi	r18, 0x00	; 0
    4262:	30 e0       	ldi	r19, 0x00	; 0
    4264:	40 e2       	ldi	r20, 0x20	; 32
    4266:	51 e4       	ldi	r21, 0x41	; 65
    4268:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    426c:	dc 01       	movw	r26, r24
    426e:	cb 01       	movw	r24, r22
    4270:	bc 01       	movw	r22, r24
    4272:	cd 01       	movw	r24, r26
    4274:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4278:	dc 01       	movw	r26, r24
    427a:	cb 01       	movw	r24, r22
    427c:	9a a3       	std	Y+34, r25	; 0x22
    427e:	89 a3       	std	Y+33, r24	; 0x21
    4280:	0f c0       	rjmp	.+30     	; 0x42a0 <LCD_sendCommand+0x658>
    4282:	80 e9       	ldi	r24, 0x90	; 144
    4284:	91 e0       	ldi	r25, 0x01	; 1
    4286:	98 a3       	std	Y+32, r25	; 0x20
    4288:	8f 8f       	std	Y+31, r24	; 0x1f
    428a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    428c:	98 a1       	ldd	r25, Y+32	; 0x20
    428e:	01 97       	sbiw	r24, 0x01	; 1
    4290:	f1 f7       	brne	.-4      	; 0x428e <LCD_sendCommand+0x646>
    4292:	98 a3       	std	Y+32, r25	; 0x20
    4294:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4296:	89 a1       	ldd	r24, Y+33	; 0x21
    4298:	9a a1       	ldd	r25, Y+34	; 0x22
    429a:	01 97       	sbiw	r24, 0x01	; 1
    429c:	9a a3       	std	Y+34, r25	; 0x22
    429e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42a0:	89 a1       	ldd	r24, Y+33	; 0x21
    42a2:	9a a1       	ldd	r25, Y+34	; 0x22
    42a4:	00 97       	sbiw	r24, 0x00	; 0
    42a6:	69 f7       	brne	.-38     	; 0x4282 <LCD_sendCommand+0x63a>
    42a8:	14 c0       	rjmp	.+40     	; 0x42d2 <LCD_sendCommand+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42aa:	6b a1       	ldd	r22, Y+35	; 0x23
    42ac:	7c a1       	ldd	r23, Y+36	; 0x24
    42ae:	8d a1       	ldd	r24, Y+37	; 0x25
    42b0:	9e a1       	ldd	r25, Y+38	; 0x26
    42b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42b6:	dc 01       	movw	r26, r24
    42b8:	cb 01       	movw	r24, r22
    42ba:	9a a3       	std	Y+34, r25	; 0x22
    42bc:	89 a3       	std	Y+33, r24	; 0x21
    42be:	89 a1       	ldd	r24, Y+33	; 0x21
    42c0:	9a a1       	ldd	r25, Y+34	; 0x22
    42c2:	9e 8f       	std	Y+30, r25	; 0x1e
    42c4:	8d 8f       	std	Y+29, r24	; 0x1d
    42c6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    42c8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    42ca:	01 97       	sbiw	r24, 0x01	; 1
    42cc:	f1 f7       	brne	.-4      	; 0x42ca <LCD_sendCommand+0x682>
    42ce:	9e 8f       	std	Y+30, r25	; 0x1e
    42d0:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB4_PIN_ID,GET_BIT(command,0));
    42d2:	fe 01       	movw	r30, r28
    42d4:	ed 59       	subi	r30, 0x9D	; 157
    42d6:	ff 4f       	sbci	r31, 0xFF	; 255
    42d8:	80 81       	ld	r24, Z
    42da:	98 2f       	mov	r25, r24
    42dc:	91 70       	andi	r25, 0x01	; 1
    42de:	80 e0       	ldi	r24, 0x00	; 0
    42e0:	63 e0       	ldi	r22, 0x03	; 3
    42e2:	49 2f       	mov	r20, r25
    42e4:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB5_PIN_ID,GET_BIT(command,1));
    42e8:	fe 01       	movw	r30, r28
    42ea:	ed 59       	subi	r30, 0x9D	; 157
    42ec:	ff 4f       	sbci	r31, 0xFF	; 255
    42ee:	80 81       	ld	r24, Z
    42f0:	88 2f       	mov	r24, r24
    42f2:	90 e0       	ldi	r25, 0x00	; 0
    42f4:	82 70       	andi	r24, 0x02	; 2
    42f6:	90 70       	andi	r25, 0x00	; 0
    42f8:	95 95       	asr	r25
    42fa:	87 95       	ror	r24
    42fc:	98 2f       	mov	r25, r24
    42fe:	80 e0       	ldi	r24, 0x00	; 0
    4300:	64 e0       	ldi	r22, 0x04	; 4
    4302:	49 2f       	mov	r20, r25
    4304:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB6_PIN_ID,GET_BIT(command,2));
    4308:	fe 01       	movw	r30, r28
    430a:	ed 59       	subi	r30, 0x9D	; 157
    430c:	ff 4f       	sbci	r31, 0xFF	; 255
    430e:	80 81       	ld	r24, Z
    4310:	88 2f       	mov	r24, r24
    4312:	90 e0       	ldi	r25, 0x00	; 0
    4314:	84 70       	andi	r24, 0x04	; 4
    4316:	90 70       	andi	r25, 0x00	; 0
    4318:	95 95       	asr	r25
    431a:	87 95       	ror	r24
    431c:	95 95       	asr	r25
    431e:	87 95       	ror	r24
    4320:	98 2f       	mov	r25, r24
    4322:	80 e0       	ldi	r24, 0x00	; 0
    4324:	65 e0       	ldi	r22, 0x05	; 5
    4326:	49 2f       	mov	r20, r25
    4328:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB7_PIN_ID,GET_BIT(command,3));
    432c:	fe 01       	movw	r30, r28
    432e:	ed 59       	subi	r30, 0x9D	; 157
    4330:	ff 4f       	sbci	r31, 0xFF	; 255
    4332:	80 81       	ld	r24, Z
    4334:	88 2f       	mov	r24, r24
    4336:	90 e0       	ldi	r25, 0x00	; 0
    4338:	88 70       	andi	r24, 0x08	; 8
    433a:	90 70       	andi	r25, 0x00	; 0
    433c:	95 95       	asr	r25
    433e:	87 95       	ror	r24
    4340:	95 95       	asr	r25
    4342:	87 95       	ror	r24
    4344:	95 95       	asr	r25
    4346:	87 95       	ror	r24
    4348:	98 2f       	mov	r25, r24
    434a:	80 e0       	ldi	r24, 0x00	; 0
    434c:	66 e0       	ldi	r22, 0x06	; 6
    434e:	49 2f       	mov	r20, r25
    4350:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    4354:	80 e0       	ldi	r24, 0x00	; 0
    4356:	90 e0       	ldi	r25, 0x00	; 0
    4358:	a0 e8       	ldi	r26, 0x80	; 128
    435a:	bf e3       	ldi	r27, 0x3F	; 63
    435c:	89 8f       	std	Y+25, r24	; 0x19
    435e:	9a 8f       	std	Y+26, r25	; 0x1a
    4360:	ab 8f       	std	Y+27, r26	; 0x1b
    4362:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4364:	69 8d       	ldd	r22, Y+25	; 0x19
    4366:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4368:	8b 8d       	ldd	r24, Y+27	; 0x1b
    436a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    436c:	20 e0       	ldi	r18, 0x00	; 0
    436e:	30 e0       	ldi	r19, 0x00	; 0
    4370:	4a e7       	ldi	r20, 0x7A	; 122
    4372:	55 e4       	ldi	r21, 0x45	; 69
    4374:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4378:	dc 01       	movw	r26, r24
    437a:	cb 01       	movw	r24, r22
    437c:	8d 8b       	std	Y+21, r24	; 0x15
    437e:	9e 8b       	std	Y+22, r25	; 0x16
    4380:	af 8b       	std	Y+23, r26	; 0x17
    4382:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4384:	6d 89       	ldd	r22, Y+21	; 0x15
    4386:	7e 89       	ldd	r23, Y+22	; 0x16
    4388:	8f 89       	ldd	r24, Y+23	; 0x17
    438a:	98 8d       	ldd	r25, Y+24	; 0x18
    438c:	20 e0       	ldi	r18, 0x00	; 0
    438e:	30 e0       	ldi	r19, 0x00	; 0
    4390:	40 e8       	ldi	r20, 0x80	; 128
    4392:	5f e3       	ldi	r21, 0x3F	; 63
    4394:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4398:	88 23       	and	r24, r24
    439a:	2c f4       	brge	.+10     	; 0x43a6 <LCD_sendCommand+0x75e>
		__ticks = 1;
    439c:	81 e0       	ldi	r24, 0x01	; 1
    439e:	90 e0       	ldi	r25, 0x00	; 0
    43a0:	9c 8b       	std	Y+20, r25	; 0x14
    43a2:	8b 8b       	std	Y+19, r24	; 0x13
    43a4:	3f c0       	rjmp	.+126    	; 0x4424 <LCD_sendCommand+0x7dc>
	else if (__tmp > 65535)
    43a6:	6d 89       	ldd	r22, Y+21	; 0x15
    43a8:	7e 89       	ldd	r23, Y+22	; 0x16
    43aa:	8f 89       	ldd	r24, Y+23	; 0x17
    43ac:	98 8d       	ldd	r25, Y+24	; 0x18
    43ae:	20 e0       	ldi	r18, 0x00	; 0
    43b0:	3f ef       	ldi	r19, 0xFF	; 255
    43b2:	4f e7       	ldi	r20, 0x7F	; 127
    43b4:	57 e4       	ldi	r21, 0x47	; 71
    43b6:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    43ba:	18 16       	cp	r1, r24
    43bc:	4c f5       	brge	.+82     	; 0x4410 <LCD_sendCommand+0x7c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43be:	69 8d       	ldd	r22, Y+25	; 0x19
    43c0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    43c2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    43c4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    43c6:	20 e0       	ldi	r18, 0x00	; 0
    43c8:	30 e0       	ldi	r19, 0x00	; 0
    43ca:	40 e2       	ldi	r20, 0x20	; 32
    43cc:	51 e4       	ldi	r21, 0x41	; 65
    43ce:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    43d2:	dc 01       	movw	r26, r24
    43d4:	cb 01       	movw	r24, r22
    43d6:	bc 01       	movw	r22, r24
    43d8:	cd 01       	movw	r24, r26
    43da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43de:	dc 01       	movw	r26, r24
    43e0:	cb 01       	movw	r24, r22
    43e2:	9c 8b       	std	Y+20, r25	; 0x14
    43e4:	8b 8b       	std	Y+19, r24	; 0x13
    43e6:	0f c0       	rjmp	.+30     	; 0x4406 <LCD_sendCommand+0x7be>
    43e8:	80 e9       	ldi	r24, 0x90	; 144
    43ea:	91 e0       	ldi	r25, 0x01	; 1
    43ec:	9a 8b       	std	Y+18, r25	; 0x12
    43ee:	89 8b       	std	Y+17, r24	; 0x11
    43f0:	89 89       	ldd	r24, Y+17	; 0x11
    43f2:	9a 89       	ldd	r25, Y+18	; 0x12
    43f4:	01 97       	sbiw	r24, 0x01	; 1
    43f6:	f1 f7       	brne	.-4      	; 0x43f4 <LCD_sendCommand+0x7ac>
    43f8:	9a 8b       	std	Y+18, r25	; 0x12
    43fa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43fc:	8b 89       	ldd	r24, Y+19	; 0x13
    43fe:	9c 89       	ldd	r25, Y+20	; 0x14
    4400:	01 97       	sbiw	r24, 0x01	; 1
    4402:	9c 8b       	std	Y+20, r25	; 0x14
    4404:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4406:	8b 89       	ldd	r24, Y+19	; 0x13
    4408:	9c 89       	ldd	r25, Y+20	; 0x14
    440a:	00 97       	sbiw	r24, 0x00	; 0
    440c:	69 f7       	brne	.-38     	; 0x43e8 <LCD_sendCommand+0x7a0>
    440e:	14 c0       	rjmp	.+40     	; 0x4438 <LCD_sendCommand+0x7f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4410:	6d 89       	ldd	r22, Y+21	; 0x15
    4412:	7e 89       	ldd	r23, Y+22	; 0x16
    4414:	8f 89       	ldd	r24, Y+23	; 0x17
    4416:	98 8d       	ldd	r25, Y+24	; 0x18
    4418:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    441c:	dc 01       	movw	r26, r24
    441e:	cb 01       	movw	r24, r22
    4420:	9c 8b       	std	Y+20, r25	; 0x14
    4422:	8b 8b       	std	Y+19, r24	; 0x13
    4424:	8b 89       	ldd	r24, Y+19	; 0x13
    4426:	9c 89       	ldd	r25, Y+20	; 0x14
    4428:	98 8b       	std	Y+16, r25	; 0x10
    442a:	8f 87       	std	Y+15, r24	; 0x0f
    442c:	8f 85       	ldd	r24, Y+15	; 0x0f
    442e:	98 89       	ldd	r25, Y+16	; 0x10
    4430:	01 97       	sbiw	r24, 0x01	; 1
    4432:	f1 f7       	brne	.-4      	; 0x4430 <LCD_sendCommand+0x7e8>
    4434:	98 8b       	std	Y+16, r25	; 0x10
    4436:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
    4438:	80 e0       	ldi	r24, 0x00	; 0
    443a:	62 e0       	ldi	r22, 0x02	; 2
    443c:	40 e0       	ldi	r20, 0x00	; 0
    443e:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    4442:	80 e0       	ldi	r24, 0x00	; 0
    4444:	90 e0       	ldi	r25, 0x00	; 0
    4446:	a0 e8       	ldi	r26, 0x80	; 128
    4448:	bf e3       	ldi	r27, 0x3F	; 63
    444a:	8b 87       	std	Y+11, r24	; 0x0b
    444c:	9c 87       	std	Y+12, r25	; 0x0c
    444e:	ad 87       	std	Y+13, r26	; 0x0d
    4450:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4452:	6b 85       	ldd	r22, Y+11	; 0x0b
    4454:	7c 85       	ldd	r23, Y+12	; 0x0c
    4456:	8d 85       	ldd	r24, Y+13	; 0x0d
    4458:	9e 85       	ldd	r25, Y+14	; 0x0e
    445a:	20 e0       	ldi	r18, 0x00	; 0
    445c:	30 e0       	ldi	r19, 0x00	; 0
    445e:	4a e7       	ldi	r20, 0x7A	; 122
    4460:	55 e4       	ldi	r21, 0x45	; 69
    4462:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4466:	dc 01       	movw	r26, r24
    4468:	cb 01       	movw	r24, r22
    446a:	8f 83       	std	Y+7, r24	; 0x07
    446c:	98 87       	std	Y+8, r25	; 0x08
    446e:	a9 87       	std	Y+9, r26	; 0x09
    4470:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4472:	6f 81       	ldd	r22, Y+7	; 0x07
    4474:	78 85       	ldd	r23, Y+8	; 0x08
    4476:	89 85       	ldd	r24, Y+9	; 0x09
    4478:	9a 85       	ldd	r25, Y+10	; 0x0a
    447a:	20 e0       	ldi	r18, 0x00	; 0
    447c:	30 e0       	ldi	r19, 0x00	; 0
    447e:	40 e8       	ldi	r20, 0x80	; 128
    4480:	5f e3       	ldi	r21, 0x3F	; 63
    4482:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4486:	88 23       	and	r24, r24
    4488:	2c f4       	brge	.+10     	; 0x4494 <LCD_sendCommand+0x84c>
		__ticks = 1;
    448a:	81 e0       	ldi	r24, 0x01	; 1
    448c:	90 e0       	ldi	r25, 0x00	; 0
    448e:	9e 83       	std	Y+6, r25	; 0x06
    4490:	8d 83       	std	Y+5, r24	; 0x05
    4492:	3f c0       	rjmp	.+126    	; 0x4512 <LCD_sendCommand+0x8ca>
	else if (__tmp > 65535)
    4494:	6f 81       	ldd	r22, Y+7	; 0x07
    4496:	78 85       	ldd	r23, Y+8	; 0x08
    4498:	89 85       	ldd	r24, Y+9	; 0x09
    449a:	9a 85       	ldd	r25, Y+10	; 0x0a
    449c:	20 e0       	ldi	r18, 0x00	; 0
    449e:	3f ef       	ldi	r19, 0xFF	; 255
    44a0:	4f e7       	ldi	r20, 0x7F	; 127
    44a2:	57 e4       	ldi	r21, 0x47	; 71
    44a4:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    44a8:	18 16       	cp	r1, r24
    44aa:	4c f5       	brge	.+82     	; 0x44fe <LCD_sendCommand+0x8b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    44ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    44b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    44b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    44b4:	20 e0       	ldi	r18, 0x00	; 0
    44b6:	30 e0       	ldi	r19, 0x00	; 0
    44b8:	40 e2       	ldi	r20, 0x20	; 32
    44ba:	51 e4       	ldi	r21, 0x41	; 65
    44bc:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    44c0:	dc 01       	movw	r26, r24
    44c2:	cb 01       	movw	r24, r22
    44c4:	bc 01       	movw	r22, r24
    44c6:	cd 01       	movw	r24, r26
    44c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44cc:	dc 01       	movw	r26, r24
    44ce:	cb 01       	movw	r24, r22
    44d0:	9e 83       	std	Y+6, r25	; 0x06
    44d2:	8d 83       	std	Y+5, r24	; 0x05
    44d4:	0f c0       	rjmp	.+30     	; 0x44f4 <LCD_sendCommand+0x8ac>
    44d6:	80 e9       	ldi	r24, 0x90	; 144
    44d8:	91 e0       	ldi	r25, 0x01	; 1
    44da:	9c 83       	std	Y+4, r25	; 0x04
    44dc:	8b 83       	std	Y+3, r24	; 0x03
    44de:	8b 81       	ldd	r24, Y+3	; 0x03
    44e0:	9c 81       	ldd	r25, Y+4	; 0x04
    44e2:	01 97       	sbiw	r24, 0x01	; 1
    44e4:	f1 f7       	brne	.-4      	; 0x44e2 <LCD_sendCommand+0x89a>
    44e6:	9c 83       	std	Y+4, r25	; 0x04
    44e8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44ea:	8d 81       	ldd	r24, Y+5	; 0x05
    44ec:	9e 81       	ldd	r25, Y+6	; 0x06
    44ee:	01 97       	sbiw	r24, 0x01	; 1
    44f0:	9e 83       	std	Y+6, r25	; 0x06
    44f2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44f4:	8d 81       	ldd	r24, Y+5	; 0x05
    44f6:	9e 81       	ldd	r25, Y+6	; 0x06
    44f8:	00 97       	sbiw	r24, 0x00	; 0
    44fa:	69 f7       	brne	.-38     	; 0x44d6 <LCD_sendCommand+0x88e>
    44fc:	14 c0       	rjmp	.+40     	; 0x4526 <LCD_sendCommand+0x8de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44fe:	6f 81       	ldd	r22, Y+7	; 0x07
    4500:	78 85       	ldd	r23, Y+8	; 0x08
    4502:	89 85       	ldd	r24, Y+9	; 0x09
    4504:	9a 85       	ldd	r25, Y+10	; 0x0a
    4506:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    450a:	dc 01       	movw	r26, r24
    450c:	cb 01       	movw	r24, r22
    450e:	9e 83       	std	Y+6, r25	; 0x06
    4510:	8d 83       	std	Y+5, r24	; 0x05
    4512:	8d 81       	ldd	r24, Y+5	; 0x05
    4514:	9e 81       	ldd	r25, Y+6	; 0x06
    4516:	9a 83       	std	Y+2, r25	; 0x02
    4518:	89 83       	std	Y+1, r24	; 0x01
    451a:	89 81       	ldd	r24, Y+1	; 0x01
    451c:	9a 81       	ldd	r25, Y+2	; 0x02
    451e:	01 97       	sbiw	r24, 0x01	; 1
    4520:	f1 f7       	brne	.-4      	; 0x451e <LCD_sendCommand+0x8d6>
    4522:	9a 83       	std	Y+2, r25	; 0x02
    4524:	89 83       	std	Y+1, r24	; 0x01
	GPIO_writePort(LCD_DATA_PORT_ID,command); /* out the required command to the data bus D0 --> D7 */
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
	_delay_ms(1); /* delay for processing Th = 13ns */
#endif
}
    4526:	cd 59       	subi	r28, 0x9D	; 157
    4528:	df 4f       	sbci	r29, 0xFF	; 255
    452a:	0f b6       	in	r0, 0x3f	; 63
    452c:	f8 94       	cli
    452e:	de bf       	out	0x3e, r29	; 62
    4530:	0f be       	out	0x3f, r0	; 63
    4532:	cd bf       	out	0x3d, r28	; 61
    4534:	cf 91       	pop	r28
    4536:	df 91       	pop	r29
    4538:	1f 91       	pop	r17
    453a:	0f 91       	pop	r16
    453c:	08 95       	ret

0000453e <LCD_displayCharacter>:
/*
 * Description :
 * Display the required character on the screen
 */
void LCD_displayCharacter(uint8 data)
{
    453e:	0f 93       	push	r16
    4540:	1f 93       	push	r17
    4542:	df 93       	push	r29
    4544:	cf 93       	push	r28
    4546:	cd b7       	in	r28, 0x3d	; 61
    4548:	de b7       	in	r29, 0x3e	; 62
    454a:	c3 56       	subi	r28, 0x63	; 99
    454c:	d0 40       	sbci	r29, 0x00	; 0
    454e:	0f b6       	in	r0, 0x3f	; 63
    4550:	f8 94       	cli
    4552:	de bf       	out	0x3e, r29	; 62
    4554:	0f be       	out	0x3f, r0	; 63
    4556:	cd bf       	out	0x3d, r28	; 61
    4558:	fe 01       	movw	r30, r28
    455a:	ed 59       	subi	r30, 0x9D	; 157
    455c:	ff 4f       	sbci	r31, 0xFF	; 255
    455e:	80 83       	st	Z, r24
	GPIO_writePin(LCD_RS_PORT_ID,LCD_RS_PIN_ID,LOGIC_HIGH); /* Data Mode RS=1 */
    4560:	80 e0       	ldi	r24, 0x00	; 0
    4562:	61 e0       	ldi	r22, 0x01	; 1
    4564:	41 e0       	ldi	r20, 0x01	; 1
    4566:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    456a:	fe 01       	movw	r30, r28
    456c:	e1 5a       	subi	r30, 0xA1	; 161
    456e:	ff 4f       	sbci	r31, 0xFF	; 255
    4570:	80 e0       	ldi	r24, 0x00	; 0
    4572:	90 e0       	ldi	r25, 0x00	; 0
    4574:	a0 e8       	ldi	r26, 0x80	; 128
    4576:	bf e3       	ldi	r27, 0x3F	; 63
    4578:	80 83       	st	Z, r24
    457a:	91 83       	std	Z+1, r25	; 0x01
    457c:	a2 83       	std	Z+2, r26	; 0x02
    457e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4580:	8e 01       	movw	r16, r28
    4582:	05 5a       	subi	r16, 0xA5	; 165
    4584:	1f 4f       	sbci	r17, 0xFF	; 255
    4586:	fe 01       	movw	r30, r28
    4588:	e1 5a       	subi	r30, 0xA1	; 161
    458a:	ff 4f       	sbci	r31, 0xFF	; 255
    458c:	60 81       	ld	r22, Z
    458e:	71 81       	ldd	r23, Z+1	; 0x01
    4590:	82 81       	ldd	r24, Z+2	; 0x02
    4592:	93 81       	ldd	r25, Z+3	; 0x03
    4594:	20 e0       	ldi	r18, 0x00	; 0
    4596:	30 e0       	ldi	r19, 0x00	; 0
    4598:	4a e7       	ldi	r20, 0x7A	; 122
    459a:	55 e4       	ldi	r21, 0x45	; 69
    459c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    45a0:	dc 01       	movw	r26, r24
    45a2:	cb 01       	movw	r24, r22
    45a4:	f8 01       	movw	r30, r16
    45a6:	80 83       	st	Z, r24
    45a8:	91 83       	std	Z+1, r25	; 0x01
    45aa:	a2 83       	std	Z+2, r26	; 0x02
    45ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45ae:	fe 01       	movw	r30, r28
    45b0:	e5 5a       	subi	r30, 0xA5	; 165
    45b2:	ff 4f       	sbci	r31, 0xFF	; 255
    45b4:	60 81       	ld	r22, Z
    45b6:	71 81       	ldd	r23, Z+1	; 0x01
    45b8:	82 81       	ldd	r24, Z+2	; 0x02
    45ba:	93 81       	ldd	r25, Z+3	; 0x03
    45bc:	20 e0       	ldi	r18, 0x00	; 0
    45be:	30 e0       	ldi	r19, 0x00	; 0
    45c0:	40 e8       	ldi	r20, 0x80	; 128
    45c2:	5f e3       	ldi	r21, 0x3F	; 63
    45c4:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    45c8:	88 23       	and	r24, r24
    45ca:	44 f4       	brge	.+16     	; 0x45dc <LCD_displayCharacter+0x9e>
		__ticks = 1;
    45cc:	fe 01       	movw	r30, r28
    45ce:	e7 5a       	subi	r30, 0xA7	; 167
    45d0:	ff 4f       	sbci	r31, 0xFF	; 255
    45d2:	81 e0       	ldi	r24, 0x01	; 1
    45d4:	90 e0       	ldi	r25, 0x00	; 0
    45d6:	91 83       	std	Z+1, r25	; 0x01
    45d8:	80 83       	st	Z, r24
    45da:	64 c0       	rjmp	.+200    	; 0x46a4 <LCD_displayCharacter+0x166>
	else if (__tmp > 65535)
    45dc:	fe 01       	movw	r30, r28
    45de:	e5 5a       	subi	r30, 0xA5	; 165
    45e0:	ff 4f       	sbci	r31, 0xFF	; 255
    45e2:	60 81       	ld	r22, Z
    45e4:	71 81       	ldd	r23, Z+1	; 0x01
    45e6:	82 81       	ldd	r24, Z+2	; 0x02
    45e8:	93 81       	ldd	r25, Z+3	; 0x03
    45ea:	20 e0       	ldi	r18, 0x00	; 0
    45ec:	3f ef       	ldi	r19, 0xFF	; 255
    45ee:	4f e7       	ldi	r20, 0x7F	; 127
    45f0:	57 e4       	ldi	r21, 0x47	; 71
    45f2:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    45f6:	18 16       	cp	r1, r24
    45f8:	0c f0       	brlt	.+2      	; 0x45fc <LCD_displayCharacter+0xbe>
    45fa:	43 c0       	rjmp	.+134    	; 0x4682 <LCD_displayCharacter+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45fc:	fe 01       	movw	r30, r28
    45fe:	e1 5a       	subi	r30, 0xA1	; 161
    4600:	ff 4f       	sbci	r31, 0xFF	; 255
    4602:	60 81       	ld	r22, Z
    4604:	71 81       	ldd	r23, Z+1	; 0x01
    4606:	82 81       	ldd	r24, Z+2	; 0x02
    4608:	93 81       	ldd	r25, Z+3	; 0x03
    460a:	20 e0       	ldi	r18, 0x00	; 0
    460c:	30 e0       	ldi	r19, 0x00	; 0
    460e:	40 e2       	ldi	r20, 0x20	; 32
    4610:	51 e4       	ldi	r21, 0x41	; 65
    4612:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4616:	dc 01       	movw	r26, r24
    4618:	cb 01       	movw	r24, r22
    461a:	8e 01       	movw	r16, r28
    461c:	07 5a       	subi	r16, 0xA7	; 167
    461e:	1f 4f       	sbci	r17, 0xFF	; 255
    4620:	bc 01       	movw	r22, r24
    4622:	cd 01       	movw	r24, r26
    4624:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4628:	dc 01       	movw	r26, r24
    462a:	cb 01       	movw	r24, r22
    462c:	f8 01       	movw	r30, r16
    462e:	91 83       	std	Z+1, r25	; 0x01
    4630:	80 83       	st	Z, r24
    4632:	1f c0       	rjmp	.+62     	; 0x4672 <LCD_displayCharacter+0x134>
    4634:	fe 01       	movw	r30, r28
    4636:	e9 5a       	subi	r30, 0xA9	; 169
    4638:	ff 4f       	sbci	r31, 0xFF	; 255
    463a:	80 e9       	ldi	r24, 0x90	; 144
    463c:	91 e0       	ldi	r25, 0x01	; 1
    463e:	91 83       	std	Z+1, r25	; 0x01
    4640:	80 83       	st	Z, r24
    4642:	fe 01       	movw	r30, r28
    4644:	e9 5a       	subi	r30, 0xA9	; 169
    4646:	ff 4f       	sbci	r31, 0xFF	; 255
    4648:	80 81       	ld	r24, Z
    464a:	91 81       	ldd	r25, Z+1	; 0x01
    464c:	01 97       	sbiw	r24, 0x01	; 1
    464e:	f1 f7       	brne	.-4      	; 0x464c <LCD_displayCharacter+0x10e>
    4650:	fe 01       	movw	r30, r28
    4652:	e9 5a       	subi	r30, 0xA9	; 169
    4654:	ff 4f       	sbci	r31, 0xFF	; 255
    4656:	91 83       	std	Z+1, r25	; 0x01
    4658:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    465a:	de 01       	movw	r26, r28
    465c:	a7 5a       	subi	r26, 0xA7	; 167
    465e:	bf 4f       	sbci	r27, 0xFF	; 255
    4660:	fe 01       	movw	r30, r28
    4662:	e7 5a       	subi	r30, 0xA7	; 167
    4664:	ff 4f       	sbci	r31, 0xFF	; 255
    4666:	80 81       	ld	r24, Z
    4668:	91 81       	ldd	r25, Z+1	; 0x01
    466a:	01 97       	sbiw	r24, 0x01	; 1
    466c:	11 96       	adiw	r26, 0x01	; 1
    466e:	9c 93       	st	X, r25
    4670:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4672:	fe 01       	movw	r30, r28
    4674:	e7 5a       	subi	r30, 0xA7	; 167
    4676:	ff 4f       	sbci	r31, 0xFF	; 255
    4678:	80 81       	ld	r24, Z
    467a:	91 81       	ldd	r25, Z+1	; 0x01
    467c:	00 97       	sbiw	r24, 0x00	; 0
    467e:	d1 f6       	brne	.-76     	; 0x4634 <LCD_displayCharacter+0xf6>
    4680:	27 c0       	rjmp	.+78     	; 0x46d0 <LCD_displayCharacter+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4682:	8e 01       	movw	r16, r28
    4684:	07 5a       	subi	r16, 0xA7	; 167
    4686:	1f 4f       	sbci	r17, 0xFF	; 255
    4688:	fe 01       	movw	r30, r28
    468a:	e5 5a       	subi	r30, 0xA5	; 165
    468c:	ff 4f       	sbci	r31, 0xFF	; 255
    468e:	60 81       	ld	r22, Z
    4690:	71 81       	ldd	r23, Z+1	; 0x01
    4692:	82 81       	ldd	r24, Z+2	; 0x02
    4694:	93 81       	ldd	r25, Z+3	; 0x03
    4696:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    469a:	dc 01       	movw	r26, r24
    469c:	cb 01       	movw	r24, r22
    469e:	f8 01       	movw	r30, r16
    46a0:	91 83       	std	Z+1, r25	; 0x01
    46a2:	80 83       	st	Z, r24
    46a4:	de 01       	movw	r26, r28
    46a6:	ab 5a       	subi	r26, 0xAB	; 171
    46a8:	bf 4f       	sbci	r27, 0xFF	; 255
    46aa:	fe 01       	movw	r30, r28
    46ac:	e7 5a       	subi	r30, 0xA7	; 167
    46ae:	ff 4f       	sbci	r31, 0xFF	; 255
    46b0:	80 81       	ld	r24, Z
    46b2:	91 81       	ldd	r25, Z+1	; 0x01
    46b4:	8d 93       	st	X+, r24
    46b6:	9c 93       	st	X, r25
    46b8:	fe 01       	movw	r30, r28
    46ba:	eb 5a       	subi	r30, 0xAB	; 171
    46bc:	ff 4f       	sbci	r31, 0xFF	; 255
    46be:	80 81       	ld	r24, Z
    46c0:	91 81       	ldd	r25, Z+1	; 0x01
    46c2:	01 97       	sbiw	r24, 0x01	; 1
    46c4:	f1 f7       	brne	.-4      	; 0x46c2 <LCD_displayCharacter+0x184>
    46c6:	fe 01       	movw	r30, r28
    46c8:	eb 5a       	subi	r30, 0xAB	; 171
    46ca:	ff 4f       	sbci	r31, 0xFF	; 255
    46cc:	91 83       	std	Z+1, r25	; 0x01
    46ce:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
    46d0:	80 e0       	ldi	r24, 0x00	; 0
    46d2:	62 e0       	ldi	r22, 0x02	; 2
    46d4:	41 e0       	ldi	r20, 0x01	; 1
    46d6:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    46da:	fe 01       	movw	r30, r28
    46dc:	ef 5a       	subi	r30, 0xAF	; 175
    46de:	ff 4f       	sbci	r31, 0xFF	; 255
    46e0:	80 e0       	ldi	r24, 0x00	; 0
    46e2:	90 e0       	ldi	r25, 0x00	; 0
    46e4:	a0 e8       	ldi	r26, 0x80	; 128
    46e6:	bf e3       	ldi	r27, 0x3F	; 63
    46e8:	80 83       	st	Z, r24
    46ea:	91 83       	std	Z+1, r25	; 0x01
    46ec:	a2 83       	std	Z+2, r26	; 0x02
    46ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    46f0:	8e 01       	movw	r16, r28
    46f2:	03 5b       	subi	r16, 0xB3	; 179
    46f4:	1f 4f       	sbci	r17, 0xFF	; 255
    46f6:	fe 01       	movw	r30, r28
    46f8:	ef 5a       	subi	r30, 0xAF	; 175
    46fa:	ff 4f       	sbci	r31, 0xFF	; 255
    46fc:	60 81       	ld	r22, Z
    46fe:	71 81       	ldd	r23, Z+1	; 0x01
    4700:	82 81       	ldd	r24, Z+2	; 0x02
    4702:	93 81       	ldd	r25, Z+3	; 0x03
    4704:	20 e0       	ldi	r18, 0x00	; 0
    4706:	30 e0       	ldi	r19, 0x00	; 0
    4708:	4a e7       	ldi	r20, 0x7A	; 122
    470a:	55 e4       	ldi	r21, 0x45	; 69
    470c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4710:	dc 01       	movw	r26, r24
    4712:	cb 01       	movw	r24, r22
    4714:	f8 01       	movw	r30, r16
    4716:	80 83       	st	Z, r24
    4718:	91 83       	std	Z+1, r25	; 0x01
    471a:	a2 83       	std	Z+2, r26	; 0x02
    471c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    471e:	fe 01       	movw	r30, r28
    4720:	e3 5b       	subi	r30, 0xB3	; 179
    4722:	ff 4f       	sbci	r31, 0xFF	; 255
    4724:	60 81       	ld	r22, Z
    4726:	71 81       	ldd	r23, Z+1	; 0x01
    4728:	82 81       	ldd	r24, Z+2	; 0x02
    472a:	93 81       	ldd	r25, Z+3	; 0x03
    472c:	20 e0       	ldi	r18, 0x00	; 0
    472e:	30 e0       	ldi	r19, 0x00	; 0
    4730:	40 e8       	ldi	r20, 0x80	; 128
    4732:	5f e3       	ldi	r21, 0x3F	; 63
    4734:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4738:	88 23       	and	r24, r24
    473a:	44 f4       	brge	.+16     	; 0x474c <LCD_displayCharacter+0x20e>
		__ticks = 1;
    473c:	fe 01       	movw	r30, r28
    473e:	e5 5b       	subi	r30, 0xB5	; 181
    4740:	ff 4f       	sbci	r31, 0xFF	; 255
    4742:	81 e0       	ldi	r24, 0x01	; 1
    4744:	90 e0       	ldi	r25, 0x00	; 0
    4746:	91 83       	std	Z+1, r25	; 0x01
    4748:	80 83       	st	Z, r24
    474a:	64 c0       	rjmp	.+200    	; 0x4814 <LCD_displayCharacter+0x2d6>
	else if (__tmp > 65535)
    474c:	fe 01       	movw	r30, r28
    474e:	e3 5b       	subi	r30, 0xB3	; 179
    4750:	ff 4f       	sbci	r31, 0xFF	; 255
    4752:	60 81       	ld	r22, Z
    4754:	71 81       	ldd	r23, Z+1	; 0x01
    4756:	82 81       	ldd	r24, Z+2	; 0x02
    4758:	93 81       	ldd	r25, Z+3	; 0x03
    475a:	20 e0       	ldi	r18, 0x00	; 0
    475c:	3f ef       	ldi	r19, 0xFF	; 255
    475e:	4f e7       	ldi	r20, 0x7F	; 127
    4760:	57 e4       	ldi	r21, 0x47	; 71
    4762:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4766:	18 16       	cp	r1, r24
    4768:	0c f0       	brlt	.+2      	; 0x476c <LCD_displayCharacter+0x22e>
    476a:	43 c0       	rjmp	.+134    	; 0x47f2 <LCD_displayCharacter+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    476c:	fe 01       	movw	r30, r28
    476e:	ef 5a       	subi	r30, 0xAF	; 175
    4770:	ff 4f       	sbci	r31, 0xFF	; 255
    4772:	60 81       	ld	r22, Z
    4774:	71 81       	ldd	r23, Z+1	; 0x01
    4776:	82 81       	ldd	r24, Z+2	; 0x02
    4778:	93 81       	ldd	r25, Z+3	; 0x03
    477a:	20 e0       	ldi	r18, 0x00	; 0
    477c:	30 e0       	ldi	r19, 0x00	; 0
    477e:	40 e2       	ldi	r20, 0x20	; 32
    4780:	51 e4       	ldi	r21, 0x41	; 65
    4782:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4786:	dc 01       	movw	r26, r24
    4788:	cb 01       	movw	r24, r22
    478a:	8e 01       	movw	r16, r28
    478c:	05 5b       	subi	r16, 0xB5	; 181
    478e:	1f 4f       	sbci	r17, 0xFF	; 255
    4790:	bc 01       	movw	r22, r24
    4792:	cd 01       	movw	r24, r26
    4794:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4798:	dc 01       	movw	r26, r24
    479a:	cb 01       	movw	r24, r22
    479c:	f8 01       	movw	r30, r16
    479e:	91 83       	std	Z+1, r25	; 0x01
    47a0:	80 83       	st	Z, r24
    47a2:	1f c0       	rjmp	.+62     	; 0x47e2 <LCD_displayCharacter+0x2a4>
    47a4:	fe 01       	movw	r30, r28
    47a6:	e7 5b       	subi	r30, 0xB7	; 183
    47a8:	ff 4f       	sbci	r31, 0xFF	; 255
    47aa:	80 e9       	ldi	r24, 0x90	; 144
    47ac:	91 e0       	ldi	r25, 0x01	; 1
    47ae:	91 83       	std	Z+1, r25	; 0x01
    47b0:	80 83       	st	Z, r24
    47b2:	fe 01       	movw	r30, r28
    47b4:	e7 5b       	subi	r30, 0xB7	; 183
    47b6:	ff 4f       	sbci	r31, 0xFF	; 255
    47b8:	80 81       	ld	r24, Z
    47ba:	91 81       	ldd	r25, Z+1	; 0x01
    47bc:	01 97       	sbiw	r24, 0x01	; 1
    47be:	f1 f7       	brne	.-4      	; 0x47bc <LCD_displayCharacter+0x27e>
    47c0:	fe 01       	movw	r30, r28
    47c2:	e7 5b       	subi	r30, 0xB7	; 183
    47c4:	ff 4f       	sbci	r31, 0xFF	; 255
    47c6:	91 83       	std	Z+1, r25	; 0x01
    47c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47ca:	de 01       	movw	r26, r28
    47cc:	a5 5b       	subi	r26, 0xB5	; 181
    47ce:	bf 4f       	sbci	r27, 0xFF	; 255
    47d0:	fe 01       	movw	r30, r28
    47d2:	e5 5b       	subi	r30, 0xB5	; 181
    47d4:	ff 4f       	sbci	r31, 0xFF	; 255
    47d6:	80 81       	ld	r24, Z
    47d8:	91 81       	ldd	r25, Z+1	; 0x01
    47da:	01 97       	sbiw	r24, 0x01	; 1
    47dc:	11 96       	adiw	r26, 0x01	; 1
    47de:	9c 93       	st	X, r25
    47e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    47e2:	fe 01       	movw	r30, r28
    47e4:	e5 5b       	subi	r30, 0xB5	; 181
    47e6:	ff 4f       	sbci	r31, 0xFF	; 255
    47e8:	80 81       	ld	r24, Z
    47ea:	91 81       	ldd	r25, Z+1	; 0x01
    47ec:	00 97       	sbiw	r24, 0x00	; 0
    47ee:	d1 f6       	brne	.-76     	; 0x47a4 <LCD_displayCharacter+0x266>
    47f0:	27 c0       	rjmp	.+78     	; 0x4840 <LCD_displayCharacter+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    47f2:	8e 01       	movw	r16, r28
    47f4:	05 5b       	subi	r16, 0xB5	; 181
    47f6:	1f 4f       	sbci	r17, 0xFF	; 255
    47f8:	fe 01       	movw	r30, r28
    47fa:	e3 5b       	subi	r30, 0xB3	; 179
    47fc:	ff 4f       	sbci	r31, 0xFF	; 255
    47fe:	60 81       	ld	r22, Z
    4800:	71 81       	ldd	r23, Z+1	; 0x01
    4802:	82 81       	ldd	r24, Z+2	; 0x02
    4804:	93 81       	ldd	r25, Z+3	; 0x03
    4806:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    480a:	dc 01       	movw	r26, r24
    480c:	cb 01       	movw	r24, r22
    480e:	f8 01       	movw	r30, r16
    4810:	91 83       	std	Z+1, r25	; 0x01
    4812:	80 83       	st	Z, r24
    4814:	de 01       	movw	r26, r28
    4816:	a9 5b       	subi	r26, 0xB9	; 185
    4818:	bf 4f       	sbci	r27, 0xFF	; 255
    481a:	fe 01       	movw	r30, r28
    481c:	e5 5b       	subi	r30, 0xB5	; 181
    481e:	ff 4f       	sbci	r31, 0xFF	; 255
    4820:	80 81       	ld	r24, Z
    4822:	91 81       	ldd	r25, Z+1	; 0x01
    4824:	8d 93       	st	X+, r24
    4826:	9c 93       	st	X, r25
    4828:	fe 01       	movw	r30, r28
    482a:	e9 5b       	subi	r30, 0xB9	; 185
    482c:	ff 4f       	sbci	r31, 0xFF	; 255
    482e:	80 81       	ld	r24, Z
    4830:	91 81       	ldd	r25, Z+1	; 0x01
    4832:	01 97       	sbiw	r24, 0x01	; 1
    4834:	f1 f7       	brne	.-4      	; 0x4832 <LCD_displayCharacter+0x2f4>
    4836:	fe 01       	movw	r30, r28
    4838:	e9 5b       	subi	r30, 0xB9	; 185
    483a:	ff 4f       	sbci	r31, 0xFF	; 255
    483c:	91 83       	std	Z+1, r25	; 0x01
    483e:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

#if(LCD_DATA_BITS_MODE == 4)
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB4_PIN_ID,GET_BIT(data,4));
    4840:	fe 01       	movw	r30, r28
    4842:	ed 59       	subi	r30, 0x9D	; 157
    4844:	ff 4f       	sbci	r31, 0xFF	; 255
    4846:	80 81       	ld	r24, Z
    4848:	88 2f       	mov	r24, r24
    484a:	90 e0       	ldi	r25, 0x00	; 0
    484c:	80 71       	andi	r24, 0x10	; 16
    484e:	90 70       	andi	r25, 0x00	; 0
    4850:	95 95       	asr	r25
    4852:	87 95       	ror	r24
    4854:	95 95       	asr	r25
    4856:	87 95       	ror	r24
    4858:	95 95       	asr	r25
    485a:	87 95       	ror	r24
    485c:	95 95       	asr	r25
    485e:	87 95       	ror	r24
    4860:	98 2f       	mov	r25, r24
    4862:	80 e0       	ldi	r24, 0x00	; 0
    4864:	63 e0       	ldi	r22, 0x03	; 3
    4866:	49 2f       	mov	r20, r25
    4868:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB5_PIN_ID,GET_BIT(data,5));
    486c:	fe 01       	movw	r30, r28
    486e:	ed 59       	subi	r30, 0x9D	; 157
    4870:	ff 4f       	sbci	r31, 0xFF	; 255
    4872:	80 81       	ld	r24, Z
    4874:	88 2f       	mov	r24, r24
    4876:	90 e0       	ldi	r25, 0x00	; 0
    4878:	80 72       	andi	r24, 0x20	; 32
    487a:	90 70       	andi	r25, 0x00	; 0
    487c:	95 95       	asr	r25
    487e:	87 95       	ror	r24
    4880:	95 95       	asr	r25
    4882:	87 95       	ror	r24
    4884:	95 95       	asr	r25
    4886:	87 95       	ror	r24
    4888:	95 95       	asr	r25
    488a:	87 95       	ror	r24
    488c:	95 95       	asr	r25
    488e:	87 95       	ror	r24
    4890:	98 2f       	mov	r25, r24
    4892:	80 e0       	ldi	r24, 0x00	; 0
    4894:	64 e0       	ldi	r22, 0x04	; 4
    4896:	49 2f       	mov	r20, r25
    4898:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB6_PIN_ID,GET_BIT(data,6));
    489c:	fe 01       	movw	r30, r28
    489e:	ed 59       	subi	r30, 0x9D	; 157
    48a0:	ff 4f       	sbci	r31, 0xFF	; 255
    48a2:	80 81       	ld	r24, Z
    48a4:	88 2f       	mov	r24, r24
    48a6:	90 e0       	ldi	r25, 0x00	; 0
    48a8:	80 74       	andi	r24, 0x40	; 64
    48aa:	90 70       	andi	r25, 0x00	; 0
    48ac:	08 2e       	mov	r0, r24
    48ae:	89 2f       	mov	r24, r25
    48b0:	00 0c       	add	r0, r0
    48b2:	88 1f       	adc	r24, r24
    48b4:	99 0b       	sbc	r25, r25
    48b6:	00 0c       	add	r0, r0
    48b8:	88 1f       	adc	r24, r24
    48ba:	99 1f       	adc	r25, r25
    48bc:	98 2f       	mov	r25, r24
    48be:	80 e0       	ldi	r24, 0x00	; 0
    48c0:	65 e0       	ldi	r22, 0x05	; 5
    48c2:	49 2f       	mov	r20, r25
    48c4:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB7_PIN_ID,GET_BIT(data,7));
    48c8:	fe 01       	movw	r30, r28
    48ca:	ed 59       	subi	r30, 0x9D	; 157
    48cc:	ff 4f       	sbci	r31, 0xFF	; 255
    48ce:	80 81       	ld	r24, Z
    48d0:	98 2f       	mov	r25, r24
    48d2:	99 1f       	adc	r25, r25
    48d4:	99 27       	eor	r25, r25
    48d6:	99 1f       	adc	r25, r25
    48d8:	80 e0       	ldi	r24, 0x00	; 0
    48da:	66 e0       	ldi	r22, 0x06	; 6
    48dc:	49 2f       	mov	r20, r25
    48de:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    48e2:	fe 01       	movw	r30, r28
    48e4:	ed 5b       	subi	r30, 0xBD	; 189
    48e6:	ff 4f       	sbci	r31, 0xFF	; 255
    48e8:	80 e0       	ldi	r24, 0x00	; 0
    48ea:	90 e0       	ldi	r25, 0x00	; 0
    48ec:	a0 e8       	ldi	r26, 0x80	; 128
    48ee:	bf e3       	ldi	r27, 0x3F	; 63
    48f0:	80 83       	st	Z, r24
    48f2:	91 83       	std	Z+1, r25	; 0x01
    48f4:	a2 83       	std	Z+2, r26	; 0x02
    48f6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48f8:	8e 01       	movw	r16, r28
    48fa:	01 5c       	subi	r16, 0xC1	; 193
    48fc:	1f 4f       	sbci	r17, 0xFF	; 255
    48fe:	fe 01       	movw	r30, r28
    4900:	ed 5b       	subi	r30, 0xBD	; 189
    4902:	ff 4f       	sbci	r31, 0xFF	; 255
    4904:	60 81       	ld	r22, Z
    4906:	71 81       	ldd	r23, Z+1	; 0x01
    4908:	82 81       	ldd	r24, Z+2	; 0x02
    490a:	93 81       	ldd	r25, Z+3	; 0x03
    490c:	20 e0       	ldi	r18, 0x00	; 0
    490e:	30 e0       	ldi	r19, 0x00	; 0
    4910:	4a e7       	ldi	r20, 0x7A	; 122
    4912:	55 e4       	ldi	r21, 0x45	; 69
    4914:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4918:	dc 01       	movw	r26, r24
    491a:	cb 01       	movw	r24, r22
    491c:	f8 01       	movw	r30, r16
    491e:	80 83       	st	Z, r24
    4920:	91 83       	std	Z+1, r25	; 0x01
    4922:	a2 83       	std	Z+2, r26	; 0x02
    4924:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4926:	fe 01       	movw	r30, r28
    4928:	ff 96       	adiw	r30, 0x3f	; 63
    492a:	60 81       	ld	r22, Z
    492c:	71 81       	ldd	r23, Z+1	; 0x01
    492e:	82 81       	ldd	r24, Z+2	; 0x02
    4930:	93 81       	ldd	r25, Z+3	; 0x03
    4932:	20 e0       	ldi	r18, 0x00	; 0
    4934:	30 e0       	ldi	r19, 0x00	; 0
    4936:	40 e8       	ldi	r20, 0x80	; 128
    4938:	5f e3       	ldi	r21, 0x3F	; 63
    493a:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    493e:	88 23       	and	r24, r24
    4940:	2c f4       	brge	.+10     	; 0x494c <LCD_displayCharacter+0x40e>
		__ticks = 1;
    4942:	81 e0       	ldi	r24, 0x01	; 1
    4944:	90 e0       	ldi	r25, 0x00	; 0
    4946:	9e af       	std	Y+62, r25	; 0x3e
    4948:	8d af       	std	Y+61, r24	; 0x3d
    494a:	46 c0       	rjmp	.+140    	; 0x49d8 <LCD_displayCharacter+0x49a>
	else if (__tmp > 65535)
    494c:	fe 01       	movw	r30, r28
    494e:	ff 96       	adiw	r30, 0x3f	; 63
    4950:	60 81       	ld	r22, Z
    4952:	71 81       	ldd	r23, Z+1	; 0x01
    4954:	82 81       	ldd	r24, Z+2	; 0x02
    4956:	93 81       	ldd	r25, Z+3	; 0x03
    4958:	20 e0       	ldi	r18, 0x00	; 0
    495a:	3f ef       	ldi	r19, 0xFF	; 255
    495c:	4f e7       	ldi	r20, 0x7F	; 127
    495e:	57 e4       	ldi	r21, 0x47	; 71
    4960:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4964:	18 16       	cp	r1, r24
    4966:	64 f5       	brge	.+88     	; 0x49c0 <LCD_displayCharacter+0x482>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4968:	fe 01       	movw	r30, r28
    496a:	ed 5b       	subi	r30, 0xBD	; 189
    496c:	ff 4f       	sbci	r31, 0xFF	; 255
    496e:	60 81       	ld	r22, Z
    4970:	71 81       	ldd	r23, Z+1	; 0x01
    4972:	82 81       	ldd	r24, Z+2	; 0x02
    4974:	93 81       	ldd	r25, Z+3	; 0x03
    4976:	20 e0       	ldi	r18, 0x00	; 0
    4978:	30 e0       	ldi	r19, 0x00	; 0
    497a:	40 e2       	ldi	r20, 0x20	; 32
    497c:	51 e4       	ldi	r21, 0x41	; 65
    497e:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4982:	dc 01       	movw	r26, r24
    4984:	cb 01       	movw	r24, r22
    4986:	bc 01       	movw	r22, r24
    4988:	cd 01       	movw	r24, r26
    498a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    498e:	dc 01       	movw	r26, r24
    4990:	cb 01       	movw	r24, r22
    4992:	9e af       	std	Y+62, r25	; 0x3e
    4994:	8d af       	std	Y+61, r24	; 0x3d
    4996:	0f c0       	rjmp	.+30     	; 0x49b6 <LCD_displayCharacter+0x478>
    4998:	80 e9       	ldi	r24, 0x90	; 144
    499a:	91 e0       	ldi	r25, 0x01	; 1
    499c:	9c af       	std	Y+60, r25	; 0x3c
    499e:	8b af       	std	Y+59, r24	; 0x3b
    49a0:	8b ad       	ldd	r24, Y+59	; 0x3b
    49a2:	9c ad       	ldd	r25, Y+60	; 0x3c
    49a4:	01 97       	sbiw	r24, 0x01	; 1
    49a6:	f1 f7       	brne	.-4      	; 0x49a4 <LCD_displayCharacter+0x466>
    49a8:	9c af       	std	Y+60, r25	; 0x3c
    49aa:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49ac:	8d ad       	ldd	r24, Y+61	; 0x3d
    49ae:	9e ad       	ldd	r25, Y+62	; 0x3e
    49b0:	01 97       	sbiw	r24, 0x01	; 1
    49b2:	9e af       	std	Y+62, r25	; 0x3e
    49b4:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49b6:	8d ad       	ldd	r24, Y+61	; 0x3d
    49b8:	9e ad       	ldd	r25, Y+62	; 0x3e
    49ba:	00 97       	sbiw	r24, 0x00	; 0
    49bc:	69 f7       	brne	.-38     	; 0x4998 <LCD_displayCharacter+0x45a>
    49be:	16 c0       	rjmp	.+44     	; 0x49ec <LCD_displayCharacter+0x4ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49c0:	fe 01       	movw	r30, r28
    49c2:	ff 96       	adiw	r30, 0x3f	; 63
    49c4:	60 81       	ld	r22, Z
    49c6:	71 81       	ldd	r23, Z+1	; 0x01
    49c8:	82 81       	ldd	r24, Z+2	; 0x02
    49ca:	93 81       	ldd	r25, Z+3	; 0x03
    49cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    49d0:	dc 01       	movw	r26, r24
    49d2:	cb 01       	movw	r24, r22
    49d4:	9e af       	std	Y+62, r25	; 0x3e
    49d6:	8d af       	std	Y+61, r24	; 0x3d
    49d8:	8d ad       	ldd	r24, Y+61	; 0x3d
    49da:	9e ad       	ldd	r25, Y+62	; 0x3e
    49dc:	9a af       	std	Y+58, r25	; 0x3a
    49de:	89 af       	std	Y+57, r24	; 0x39
    49e0:	89 ad       	ldd	r24, Y+57	; 0x39
    49e2:	9a ad       	ldd	r25, Y+58	; 0x3a
    49e4:	01 97       	sbiw	r24, 0x01	; 1
    49e6:	f1 f7       	brne	.-4      	; 0x49e4 <LCD_displayCharacter+0x4a6>
    49e8:	9a af       	std	Y+58, r25	; 0x3a
    49ea:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
    49ec:	80 e0       	ldi	r24, 0x00	; 0
    49ee:	62 e0       	ldi	r22, 0x02	; 2
    49f0:	40 e0       	ldi	r20, 0x00	; 0
    49f2:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    49f6:	80 e0       	ldi	r24, 0x00	; 0
    49f8:	90 e0       	ldi	r25, 0x00	; 0
    49fa:	a0 e8       	ldi	r26, 0x80	; 128
    49fc:	bf e3       	ldi	r27, 0x3F	; 63
    49fe:	8d ab       	std	Y+53, r24	; 0x35
    4a00:	9e ab       	std	Y+54, r25	; 0x36
    4a02:	af ab       	std	Y+55, r26	; 0x37
    4a04:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a06:	6d a9       	ldd	r22, Y+53	; 0x35
    4a08:	7e a9       	ldd	r23, Y+54	; 0x36
    4a0a:	8f a9       	ldd	r24, Y+55	; 0x37
    4a0c:	98 ad       	ldd	r25, Y+56	; 0x38
    4a0e:	20 e0       	ldi	r18, 0x00	; 0
    4a10:	30 e0       	ldi	r19, 0x00	; 0
    4a12:	4a e7       	ldi	r20, 0x7A	; 122
    4a14:	55 e4       	ldi	r21, 0x45	; 69
    4a16:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4a1a:	dc 01       	movw	r26, r24
    4a1c:	cb 01       	movw	r24, r22
    4a1e:	89 ab       	std	Y+49, r24	; 0x31
    4a20:	9a ab       	std	Y+50, r25	; 0x32
    4a22:	ab ab       	std	Y+51, r26	; 0x33
    4a24:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4a26:	69 a9       	ldd	r22, Y+49	; 0x31
    4a28:	7a a9       	ldd	r23, Y+50	; 0x32
    4a2a:	8b a9       	ldd	r24, Y+51	; 0x33
    4a2c:	9c a9       	ldd	r25, Y+52	; 0x34
    4a2e:	20 e0       	ldi	r18, 0x00	; 0
    4a30:	30 e0       	ldi	r19, 0x00	; 0
    4a32:	40 e8       	ldi	r20, 0x80	; 128
    4a34:	5f e3       	ldi	r21, 0x3F	; 63
    4a36:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4a3a:	88 23       	and	r24, r24
    4a3c:	2c f4       	brge	.+10     	; 0x4a48 <LCD_displayCharacter+0x50a>
		__ticks = 1;
    4a3e:	81 e0       	ldi	r24, 0x01	; 1
    4a40:	90 e0       	ldi	r25, 0x00	; 0
    4a42:	98 ab       	std	Y+48, r25	; 0x30
    4a44:	8f a7       	std	Y+47, r24	; 0x2f
    4a46:	3f c0       	rjmp	.+126    	; 0x4ac6 <LCD_displayCharacter+0x588>
	else if (__tmp > 65535)
    4a48:	69 a9       	ldd	r22, Y+49	; 0x31
    4a4a:	7a a9       	ldd	r23, Y+50	; 0x32
    4a4c:	8b a9       	ldd	r24, Y+51	; 0x33
    4a4e:	9c a9       	ldd	r25, Y+52	; 0x34
    4a50:	20 e0       	ldi	r18, 0x00	; 0
    4a52:	3f ef       	ldi	r19, 0xFF	; 255
    4a54:	4f e7       	ldi	r20, 0x7F	; 127
    4a56:	57 e4       	ldi	r21, 0x47	; 71
    4a58:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4a5c:	18 16       	cp	r1, r24
    4a5e:	4c f5       	brge	.+82     	; 0x4ab2 <LCD_displayCharacter+0x574>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a60:	6d a9       	ldd	r22, Y+53	; 0x35
    4a62:	7e a9       	ldd	r23, Y+54	; 0x36
    4a64:	8f a9       	ldd	r24, Y+55	; 0x37
    4a66:	98 ad       	ldd	r25, Y+56	; 0x38
    4a68:	20 e0       	ldi	r18, 0x00	; 0
    4a6a:	30 e0       	ldi	r19, 0x00	; 0
    4a6c:	40 e2       	ldi	r20, 0x20	; 32
    4a6e:	51 e4       	ldi	r21, 0x41	; 65
    4a70:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4a74:	dc 01       	movw	r26, r24
    4a76:	cb 01       	movw	r24, r22
    4a78:	bc 01       	movw	r22, r24
    4a7a:	cd 01       	movw	r24, r26
    4a7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a80:	dc 01       	movw	r26, r24
    4a82:	cb 01       	movw	r24, r22
    4a84:	98 ab       	std	Y+48, r25	; 0x30
    4a86:	8f a7       	std	Y+47, r24	; 0x2f
    4a88:	0f c0       	rjmp	.+30     	; 0x4aa8 <LCD_displayCharacter+0x56a>
    4a8a:	80 e9       	ldi	r24, 0x90	; 144
    4a8c:	91 e0       	ldi	r25, 0x01	; 1
    4a8e:	9e a7       	std	Y+46, r25	; 0x2e
    4a90:	8d a7       	std	Y+45, r24	; 0x2d
    4a92:	8d a5       	ldd	r24, Y+45	; 0x2d
    4a94:	9e a5       	ldd	r25, Y+46	; 0x2e
    4a96:	01 97       	sbiw	r24, 0x01	; 1
    4a98:	f1 f7       	brne	.-4      	; 0x4a96 <LCD_displayCharacter+0x558>
    4a9a:	9e a7       	std	Y+46, r25	; 0x2e
    4a9c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a9e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4aa0:	98 a9       	ldd	r25, Y+48	; 0x30
    4aa2:	01 97       	sbiw	r24, 0x01	; 1
    4aa4:	98 ab       	std	Y+48, r25	; 0x30
    4aa6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4aa8:	8f a5       	ldd	r24, Y+47	; 0x2f
    4aaa:	98 a9       	ldd	r25, Y+48	; 0x30
    4aac:	00 97       	sbiw	r24, 0x00	; 0
    4aae:	69 f7       	brne	.-38     	; 0x4a8a <LCD_displayCharacter+0x54c>
    4ab0:	14 c0       	rjmp	.+40     	; 0x4ada <LCD_displayCharacter+0x59c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ab2:	69 a9       	ldd	r22, Y+49	; 0x31
    4ab4:	7a a9       	ldd	r23, Y+50	; 0x32
    4ab6:	8b a9       	ldd	r24, Y+51	; 0x33
    4ab8:	9c a9       	ldd	r25, Y+52	; 0x34
    4aba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4abe:	dc 01       	movw	r26, r24
    4ac0:	cb 01       	movw	r24, r22
    4ac2:	98 ab       	std	Y+48, r25	; 0x30
    4ac4:	8f a7       	std	Y+47, r24	; 0x2f
    4ac6:	8f a5       	ldd	r24, Y+47	; 0x2f
    4ac8:	98 a9       	ldd	r25, Y+48	; 0x30
    4aca:	9c a7       	std	Y+44, r25	; 0x2c
    4acc:	8b a7       	std	Y+43, r24	; 0x2b
    4ace:	8b a5       	ldd	r24, Y+43	; 0x2b
    4ad0:	9c a5       	ldd	r25, Y+44	; 0x2c
    4ad2:	01 97       	sbiw	r24, 0x01	; 1
    4ad4:	f1 f7       	brne	.-4      	; 0x4ad2 <LCD_displayCharacter+0x594>
    4ad6:	9c a7       	std	Y+44, r25	; 0x2c
    4ad8:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_HIGH); /* Enable LCD E=1 */
    4ada:	80 e0       	ldi	r24, 0x00	; 0
    4adc:	62 e0       	ldi	r22, 0x02	; 2
    4ade:	41 e0       	ldi	r20, 0x01	; 1
    4ae0:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    4ae4:	80 e0       	ldi	r24, 0x00	; 0
    4ae6:	90 e0       	ldi	r25, 0x00	; 0
    4ae8:	a0 e8       	ldi	r26, 0x80	; 128
    4aea:	bf e3       	ldi	r27, 0x3F	; 63
    4aec:	8f a3       	std	Y+39, r24	; 0x27
    4aee:	98 a7       	std	Y+40, r25	; 0x28
    4af0:	a9 a7       	std	Y+41, r26	; 0x29
    4af2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4af4:	6f a1       	ldd	r22, Y+39	; 0x27
    4af6:	78 a5       	ldd	r23, Y+40	; 0x28
    4af8:	89 a5       	ldd	r24, Y+41	; 0x29
    4afa:	9a a5       	ldd	r25, Y+42	; 0x2a
    4afc:	20 e0       	ldi	r18, 0x00	; 0
    4afe:	30 e0       	ldi	r19, 0x00	; 0
    4b00:	4a e7       	ldi	r20, 0x7A	; 122
    4b02:	55 e4       	ldi	r21, 0x45	; 69
    4b04:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4b08:	dc 01       	movw	r26, r24
    4b0a:	cb 01       	movw	r24, r22
    4b0c:	8b a3       	std	Y+35, r24	; 0x23
    4b0e:	9c a3       	std	Y+36, r25	; 0x24
    4b10:	ad a3       	std	Y+37, r26	; 0x25
    4b12:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4b14:	6b a1       	ldd	r22, Y+35	; 0x23
    4b16:	7c a1       	ldd	r23, Y+36	; 0x24
    4b18:	8d a1       	ldd	r24, Y+37	; 0x25
    4b1a:	9e a1       	ldd	r25, Y+38	; 0x26
    4b1c:	20 e0       	ldi	r18, 0x00	; 0
    4b1e:	30 e0       	ldi	r19, 0x00	; 0
    4b20:	40 e8       	ldi	r20, 0x80	; 128
    4b22:	5f e3       	ldi	r21, 0x3F	; 63
    4b24:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4b28:	88 23       	and	r24, r24
    4b2a:	2c f4       	brge	.+10     	; 0x4b36 <LCD_displayCharacter+0x5f8>
		__ticks = 1;
    4b2c:	81 e0       	ldi	r24, 0x01	; 1
    4b2e:	90 e0       	ldi	r25, 0x00	; 0
    4b30:	9a a3       	std	Y+34, r25	; 0x22
    4b32:	89 a3       	std	Y+33, r24	; 0x21
    4b34:	3f c0       	rjmp	.+126    	; 0x4bb4 <LCD_displayCharacter+0x676>
	else if (__tmp > 65535)
    4b36:	6b a1       	ldd	r22, Y+35	; 0x23
    4b38:	7c a1       	ldd	r23, Y+36	; 0x24
    4b3a:	8d a1       	ldd	r24, Y+37	; 0x25
    4b3c:	9e a1       	ldd	r25, Y+38	; 0x26
    4b3e:	20 e0       	ldi	r18, 0x00	; 0
    4b40:	3f ef       	ldi	r19, 0xFF	; 255
    4b42:	4f e7       	ldi	r20, 0x7F	; 127
    4b44:	57 e4       	ldi	r21, 0x47	; 71
    4b46:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4b4a:	18 16       	cp	r1, r24
    4b4c:	4c f5       	brge	.+82     	; 0x4ba0 <LCD_displayCharacter+0x662>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b4e:	6f a1       	ldd	r22, Y+39	; 0x27
    4b50:	78 a5       	ldd	r23, Y+40	; 0x28
    4b52:	89 a5       	ldd	r24, Y+41	; 0x29
    4b54:	9a a5       	ldd	r25, Y+42	; 0x2a
    4b56:	20 e0       	ldi	r18, 0x00	; 0
    4b58:	30 e0       	ldi	r19, 0x00	; 0
    4b5a:	40 e2       	ldi	r20, 0x20	; 32
    4b5c:	51 e4       	ldi	r21, 0x41	; 65
    4b5e:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4b62:	dc 01       	movw	r26, r24
    4b64:	cb 01       	movw	r24, r22
    4b66:	bc 01       	movw	r22, r24
    4b68:	cd 01       	movw	r24, r26
    4b6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b6e:	dc 01       	movw	r26, r24
    4b70:	cb 01       	movw	r24, r22
    4b72:	9a a3       	std	Y+34, r25	; 0x22
    4b74:	89 a3       	std	Y+33, r24	; 0x21
    4b76:	0f c0       	rjmp	.+30     	; 0x4b96 <LCD_displayCharacter+0x658>
    4b78:	80 e9       	ldi	r24, 0x90	; 144
    4b7a:	91 e0       	ldi	r25, 0x01	; 1
    4b7c:	98 a3       	std	Y+32, r25	; 0x20
    4b7e:	8f 8f       	std	Y+31, r24	; 0x1f
    4b80:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4b82:	98 a1       	ldd	r25, Y+32	; 0x20
    4b84:	01 97       	sbiw	r24, 0x01	; 1
    4b86:	f1 f7       	brne	.-4      	; 0x4b84 <LCD_displayCharacter+0x646>
    4b88:	98 a3       	std	Y+32, r25	; 0x20
    4b8a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b8c:	89 a1       	ldd	r24, Y+33	; 0x21
    4b8e:	9a a1       	ldd	r25, Y+34	; 0x22
    4b90:	01 97       	sbiw	r24, 0x01	; 1
    4b92:	9a a3       	std	Y+34, r25	; 0x22
    4b94:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b96:	89 a1       	ldd	r24, Y+33	; 0x21
    4b98:	9a a1       	ldd	r25, Y+34	; 0x22
    4b9a:	00 97       	sbiw	r24, 0x00	; 0
    4b9c:	69 f7       	brne	.-38     	; 0x4b78 <LCD_displayCharacter+0x63a>
    4b9e:	14 c0       	rjmp	.+40     	; 0x4bc8 <LCD_displayCharacter+0x68a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ba0:	6b a1       	ldd	r22, Y+35	; 0x23
    4ba2:	7c a1       	ldd	r23, Y+36	; 0x24
    4ba4:	8d a1       	ldd	r24, Y+37	; 0x25
    4ba6:	9e a1       	ldd	r25, Y+38	; 0x26
    4ba8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4bac:	dc 01       	movw	r26, r24
    4bae:	cb 01       	movw	r24, r22
    4bb0:	9a a3       	std	Y+34, r25	; 0x22
    4bb2:	89 a3       	std	Y+33, r24	; 0x21
    4bb4:	89 a1       	ldd	r24, Y+33	; 0x21
    4bb6:	9a a1       	ldd	r25, Y+34	; 0x22
    4bb8:	9e 8f       	std	Y+30, r25	; 0x1e
    4bba:	8d 8f       	std	Y+29, r24	; 0x1d
    4bbc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4bbe:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4bc0:	01 97       	sbiw	r24, 0x01	; 1
    4bc2:	f1 f7       	brne	.-4      	; 0x4bc0 <LCD_displayCharacter+0x682>
    4bc4:	9e 8f       	std	Y+30, r25	; 0x1e
    4bc6:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB4_PIN_ID,GET_BIT(data,0));
    4bc8:	fe 01       	movw	r30, r28
    4bca:	ed 59       	subi	r30, 0x9D	; 157
    4bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    4bce:	80 81       	ld	r24, Z
    4bd0:	98 2f       	mov	r25, r24
    4bd2:	91 70       	andi	r25, 0x01	; 1
    4bd4:	80 e0       	ldi	r24, 0x00	; 0
    4bd6:	63 e0       	ldi	r22, 0x03	; 3
    4bd8:	49 2f       	mov	r20, r25
    4bda:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB5_PIN_ID,GET_BIT(data,1));
    4bde:	fe 01       	movw	r30, r28
    4be0:	ed 59       	subi	r30, 0x9D	; 157
    4be2:	ff 4f       	sbci	r31, 0xFF	; 255
    4be4:	80 81       	ld	r24, Z
    4be6:	88 2f       	mov	r24, r24
    4be8:	90 e0       	ldi	r25, 0x00	; 0
    4bea:	82 70       	andi	r24, 0x02	; 2
    4bec:	90 70       	andi	r25, 0x00	; 0
    4bee:	95 95       	asr	r25
    4bf0:	87 95       	ror	r24
    4bf2:	98 2f       	mov	r25, r24
    4bf4:	80 e0       	ldi	r24, 0x00	; 0
    4bf6:	64 e0       	ldi	r22, 0x04	; 4
    4bf8:	49 2f       	mov	r20, r25
    4bfa:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB6_PIN_ID,GET_BIT(data,2));
    4bfe:	fe 01       	movw	r30, r28
    4c00:	ed 59       	subi	r30, 0x9D	; 157
    4c02:	ff 4f       	sbci	r31, 0xFF	; 255
    4c04:	80 81       	ld	r24, Z
    4c06:	88 2f       	mov	r24, r24
    4c08:	90 e0       	ldi	r25, 0x00	; 0
    4c0a:	84 70       	andi	r24, 0x04	; 4
    4c0c:	90 70       	andi	r25, 0x00	; 0
    4c0e:	95 95       	asr	r25
    4c10:	87 95       	ror	r24
    4c12:	95 95       	asr	r25
    4c14:	87 95       	ror	r24
    4c16:	98 2f       	mov	r25, r24
    4c18:	80 e0       	ldi	r24, 0x00	; 0
    4c1a:	65 e0       	ldi	r22, 0x05	; 5
    4c1c:	49 2f       	mov	r20, r25
    4c1e:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
	GPIO_writePin(LCD_DATA_PORT_ID,LCD_DB7_PIN_ID,GET_BIT(data,3));
    4c22:	fe 01       	movw	r30, r28
    4c24:	ed 59       	subi	r30, 0x9D	; 157
    4c26:	ff 4f       	sbci	r31, 0xFF	; 255
    4c28:	80 81       	ld	r24, Z
    4c2a:	88 2f       	mov	r24, r24
    4c2c:	90 e0       	ldi	r25, 0x00	; 0
    4c2e:	88 70       	andi	r24, 0x08	; 8
    4c30:	90 70       	andi	r25, 0x00	; 0
    4c32:	95 95       	asr	r25
    4c34:	87 95       	ror	r24
    4c36:	95 95       	asr	r25
    4c38:	87 95       	ror	r24
    4c3a:	95 95       	asr	r25
    4c3c:	87 95       	ror	r24
    4c3e:	98 2f       	mov	r25, r24
    4c40:	80 e0       	ldi	r24, 0x00	; 0
    4c42:	66 e0       	ldi	r22, 0x06	; 6
    4c44:	49 2f       	mov	r20, r25
    4c46:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    4c4a:	80 e0       	ldi	r24, 0x00	; 0
    4c4c:	90 e0       	ldi	r25, 0x00	; 0
    4c4e:	a0 e8       	ldi	r26, 0x80	; 128
    4c50:	bf e3       	ldi	r27, 0x3F	; 63
    4c52:	89 8f       	std	Y+25, r24	; 0x19
    4c54:	9a 8f       	std	Y+26, r25	; 0x1a
    4c56:	ab 8f       	std	Y+27, r26	; 0x1b
    4c58:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c5a:	69 8d       	ldd	r22, Y+25	; 0x19
    4c5c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4c5e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4c60:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4c62:	20 e0       	ldi	r18, 0x00	; 0
    4c64:	30 e0       	ldi	r19, 0x00	; 0
    4c66:	4a e7       	ldi	r20, 0x7A	; 122
    4c68:	55 e4       	ldi	r21, 0x45	; 69
    4c6a:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4c6e:	dc 01       	movw	r26, r24
    4c70:	cb 01       	movw	r24, r22
    4c72:	8d 8b       	std	Y+21, r24	; 0x15
    4c74:	9e 8b       	std	Y+22, r25	; 0x16
    4c76:	af 8b       	std	Y+23, r26	; 0x17
    4c78:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4c7a:	6d 89       	ldd	r22, Y+21	; 0x15
    4c7c:	7e 89       	ldd	r23, Y+22	; 0x16
    4c7e:	8f 89       	ldd	r24, Y+23	; 0x17
    4c80:	98 8d       	ldd	r25, Y+24	; 0x18
    4c82:	20 e0       	ldi	r18, 0x00	; 0
    4c84:	30 e0       	ldi	r19, 0x00	; 0
    4c86:	40 e8       	ldi	r20, 0x80	; 128
    4c88:	5f e3       	ldi	r21, 0x3F	; 63
    4c8a:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4c8e:	88 23       	and	r24, r24
    4c90:	2c f4       	brge	.+10     	; 0x4c9c <LCD_displayCharacter+0x75e>
		__ticks = 1;
    4c92:	81 e0       	ldi	r24, 0x01	; 1
    4c94:	90 e0       	ldi	r25, 0x00	; 0
    4c96:	9c 8b       	std	Y+20, r25	; 0x14
    4c98:	8b 8b       	std	Y+19, r24	; 0x13
    4c9a:	3f c0       	rjmp	.+126    	; 0x4d1a <LCD_displayCharacter+0x7dc>
	else if (__tmp > 65535)
    4c9c:	6d 89       	ldd	r22, Y+21	; 0x15
    4c9e:	7e 89       	ldd	r23, Y+22	; 0x16
    4ca0:	8f 89       	ldd	r24, Y+23	; 0x17
    4ca2:	98 8d       	ldd	r25, Y+24	; 0x18
    4ca4:	20 e0       	ldi	r18, 0x00	; 0
    4ca6:	3f ef       	ldi	r19, 0xFF	; 255
    4ca8:	4f e7       	ldi	r20, 0x7F	; 127
    4caa:	57 e4       	ldi	r21, 0x47	; 71
    4cac:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4cb0:	18 16       	cp	r1, r24
    4cb2:	4c f5       	brge	.+82     	; 0x4d06 <LCD_displayCharacter+0x7c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4cb4:	69 8d       	ldd	r22, Y+25	; 0x19
    4cb6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4cb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4cba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4cbc:	20 e0       	ldi	r18, 0x00	; 0
    4cbe:	30 e0       	ldi	r19, 0x00	; 0
    4cc0:	40 e2       	ldi	r20, 0x20	; 32
    4cc2:	51 e4       	ldi	r21, 0x41	; 65
    4cc4:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4cc8:	dc 01       	movw	r26, r24
    4cca:	cb 01       	movw	r24, r22
    4ccc:	bc 01       	movw	r22, r24
    4cce:	cd 01       	movw	r24, r26
    4cd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4cd4:	dc 01       	movw	r26, r24
    4cd6:	cb 01       	movw	r24, r22
    4cd8:	9c 8b       	std	Y+20, r25	; 0x14
    4cda:	8b 8b       	std	Y+19, r24	; 0x13
    4cdc:	0f c0       	rjmp	.+30     	; 0x4cfc <LCD_displayCharacter+0x7be>
    4cde:	80 e9       	ldi	r24, 0x90	; 144
    4ce0:	91 e0       	ldi	r25, 0x01	; 1
    4ce2:	9a 8b       	std	Y+18, r25	; 0x12
    4ce4:	89 8b       	std	Y+17, r24	; 0x11
    4ce6:	89 89       	ldd	r24, Y+17	; 0x11
    4ce8:	9a 89       	ldd	r25, Y+18	; 0x12
    4cea:	01 97       	sbiw	r24, 0x01	; 1
    4cec:	f1 f7       	brne	.-4      	; 0x4cea <LCD_displayCharacter+0x7ac>
    4cee:	9a 8b       	std	Y+18, r25	; 0x12
    4cf0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4cf2:	8b 89       	ldd	r24, Y+19	; 0x13
    4cf4:	9c 89       	ldd	r25, Y+20	; 0x14
    4cf6:	01 97       	sbiw	r24, 0x01	; 1
    4cf8:	9c 8b       	std	Y+20, r25	; 0x14
    4cfa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4cfc:	8b 89       	ldd	r24, Y+19	; 0x13
    4cfe:	9c 89       	ldd	r25, Y+20	; 0x14
    4d00:	00 97       	sbiw	r24, 0x00	; 0
    4d02:	69 f7       	brne	.-38     	; 0x4cde <LCD_displayCharacter+0x7a0>
    4d04:	14 c0       	rjmp	.+40     	; 0x4d2e <LCD_displayCharacter+0x7f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d06:	6d 89       	ldd	r22, Y+21	; 0x15
    4d08:	7e 89       	ldd	r23, Y+22	; 0x16
    4d0a:	8f 89       	ldd	r24, Y+23	; 0x17
    4d0c:	98 8d       	ldd	r25, Y+24	; 0x18
    4d0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d12:	dc 01       	movw	r26, r24
    4d14:	cb 01       	movw	r24, r22
    4d16:	9c 8b       	std	Y+20, r25	; 0x14
    4d18:	8b 8b       	std	Y+19, r24	; 0x13
    4d1a:	8b 89       	ldd	r24, Y+19	; 0x13
    4d1c:	9c 89       	ldd	r25, Y+20	; 0x14
    4d1e:	98 8b       	std	Y+16, r25	; 0x10
    4d20:	8f 87       	std	Y+15, r24	; 0x0f
    4d22:	8f 85       	ldd	r24, Y+15	; 0x0f
    4d24:	98 89       	ldd	r25, Y+16	; 0x10
    4d26:	01 97       	sbiw	r24, 0x01	; 1
    4d28:	f1 f7       	brne	.-4      	; 0x4d26 <LCD_displayCharacter+0x7e8>
    4d2a:	98 8b       	std	Y+16, r25	; 0x10
    4d2c:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
    4d2e:	80 e0       	ldi	r24, 0x00	; 0
    4d30:	62 e0       	ldi	r22, 0x02	; 2
    4d32:	40 e0       	ldi	r20, 0x00	; 0
    4d34:	0e 94 8b 19 	call	0x3316	; 0x3316 <GPIO_writePin>
    4d38:	80 e0       	ldi	r24, 0x00	; 0
    4d3a:	90 e0       	ldi	r25, 0x00	; 0
    4d3c:	a0 e8       	ldi	r26, 0x80	; 128
    4d3e:	bf e3       	ldi	r27, 0x3F	; 63
    4d40:	8b 87       	std	Y+11, r24	; 0x0b
    4d42:	9c 87       	std	Y+12, r25	; 0x0c
    4d44:	ad 87       	std	Y+13, r26	; 0x0d
    4d46:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d48:	6b 85       	ldd	r22, Y+11	; 0x0b
    4d4a:	7c 85       	ldd	r23, Y+12	; 0x0c
    4d4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4d50:	20 e0       	ldi	r18, 0x00	; 0
    4d52:	30 e0       	ldi	r19, 0x00	; 0
    4d54:	4a e7       	ldi	r20, 0x7A	; 122
    4d56:	55 e4       	ldi	r21, 0x45	; 69
    4d58:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4d5c:	dc 01       	movw	r26, r24
    4d5e:	cb 01       	movw	r24, r22
    4d60:	8f 83       	std	Y+7, r24	; 0x07
    4d62:	98 87       	std	Y+8, r25	; 0x08
    4d64:	a9 87       	std	Y+9, r26	; 0x09
    4d66:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4d68:	6f 81       	ldd	r22, Y+7	; 0x07
    4d6a:	78 85       	ldd	r23, Y+8	; 0x08
    4d6c:	89 85       	ldd	r24, Y+9	; 0x09
    4d6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d70:	20 e0       	ldi	r18, 0x00	; 0
    4d72:	30 e0       	ldi	r19, 0x00	; 0
    4d74:	40 e8       	ldi	r20, 0x80	; 128
    4d76:	5f e3       	ldi	r21, 0x3F	; 63
    4d78:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4d7c:	88 23       	and	r24, r24
    4d7e:	2c f4       	brge	.+10     	; 0x4d8a <LCD_displayCharacter+0x84c>
		__ticks = 1;
    4d80:	81 e0       	ldi	r24, 0x01	; 1
    4d82:	90 e0       	ldi	r25, 0x00	; 0
    4d84:	9e 83       	std	Y+6, r25	; 0x06
    4d86:	8d 83       	std	Y+5, r24	; 0x05
    4d88:	3f c0       	rjmp	.+126    	; 0x4e08 <LCD_displayCharacter+0x8ca>
	else if (__tmp > 65535)
    4d8a:	6f 81       	ldd	r22, Y+7	; 0x07
    4d8c:	78 85       	ldd	r23, Y+8	; 0x08
    4d8e:	89 85       	ldd	r24, Y+9	; 0x09
    4d90:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d92:	20 e0       	ldi	r18, 0x00	; 0
    4d94:	3f ef       	ldi	r19, 0xFF	; 255
    4d96:	4f e7       	ldi	r20, 0x7F	; 127
    4d98:	57 e4       	ldi	r21, 0x47	; 71
    4d9a:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4d9e:	18 16       	cp	r1, r24
    4da0:	4c f5       	brge	.+82     	; 0x4df4 <LCD_displayCharacter+0x8b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4da2:	6b 85       	ldd	r22, Y+11	; 0x0b
    4da4:	7c 85       	ldd	r23, Y+12	; 0x0c
    4da6:	8d 85       	ldd	r24, Y+13	; 0x0d
    4da8:	9e 85       	ldd	r25, Y+14	; 0x0e
    4daa:	20 e0       	ldi	r18, 0x00	; 0
    4dac:	30 e0       	ldi	r19, 0x00	; 0
    4dae:	40 e2       	ldi	r20, 0x20	; 32
    4db0:	51 e4       	ldi	r21, 0x41	; 65
    4db2:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4db6:	dc 01       	movw	r26, r24
    4db8:	cb 01       	movw	r24, r22
    4dba:	bc 01       	movw	r22, r24
    4dbc:	cd 01       	movw	r24, r26
    4dbe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4dc2:	dc 01       	movw	r26, r24
    4dc4:	cb 01       	movw	r24, r22
    4dc6:	9e 83       	std	Y+6, r25	; 0x06
    4dc8:	8d 83       	std	Y+5, r24	; 0x05
    4dca:	0f c0       	rjmp	.+30     	; 0x4dea <LCD_displayCharacter+0x8ac>
    4dcc:	80 e9       	ldi	r24, 0x90	; 144
    4dce:	91 e0       	ldi	r25, 0x01	; 1
    4dd0:	9c 83       	std	Y+4, r25	; 0x04
    4dd2:	8b 83       	std	Y+3, r24	; 0x03
    4dd4:	8b 81       	ldd	r24, Y+3	; 0x03
    4dd6:	9c 81       	ldd	r25, Y+4	; 0x04
    4dd8:	01 97       	sbiw	r24, 0x01	; 1
    4dda:	f1 f7       	brne	.-4      	; 0x4dd8 <LCD_displayCharacter+0x89a>
    4ddc:	9c 83       	std	Y+4, r25	; 0x04
    4dde:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4de0:	8d 81       	ldd	r24, Y+5	; 0x05
    4de2:	9e 81       	ldd	r25, Y+6	; 0x06
    4de4:	01 97       	sbiw	r24, 0x01	; 1
    4de6:	9e 83       	std	Y+6, r25	; 0x06
    4de8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4dea:	8d 81       	ldd	r24, Y+5	; 0x05
    4dec:	9e 81       	ldd	r25, Y+6	; 0x06
    4dee:	00 97       	sbiw	r24, 0x00	; 0
    4df0:	69 f7       	brne	.-38     	; 0x4dcc <LCD_displayCharacter+0x88e>
    4df2:	14 c0       	rjmp	.+40     	; 0x4e1c <LCD_displayCharacter+0x8de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4df4:	6f 81       	ldd	r22, Y+7	; 0x07
    4df6:	78 85       	ldd	r23, Y+8	; 0x08
    4df8:	89 85       	ldd	r24, Y+9	; 0x09
    4dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    4dfc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e00:	dc 01       	movw	r26, r24
    4e02:	cb 01       	movw	r24, r22
    4e04:	9e 83       	std	Y+6, r25	; 0x06
    4e06:	8d 83       	std	Y+5, r24	; 0x05
    4e08:	8d 81       	ldd	r24, Y+5	; 0x05
    4e0a:	9e 81       	ldd	r25, Y+6	; 0x06
    4e0c:	9a 83       	std	Y+2, r25	; 0x02
    4e0e:	89 83       	std	Y+1, r24	; 0x01
    4e10:	89 81       	ldd	r24, Y+1	; 0x01
    4e12:	9a 81       	ldd	r25, Y+2	; 0x02
    4e14:	01 97       	sbiw	r24, 0x01	; 1
    4e16:	f1 f7       	brne	.-4      	; 0x4e14 <LCD_displayCharacter+0x8d6>
    4e18:	9a 83       	std	Y+2, r25	; 0x02
    4e1a:	89 83       	std	Y+1, r24	; 0x01
	GPIO_writePort(LCD_DATA_PORT_ID,data); /* out the required command to the data bus D0 --> D7 */
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	GPIO_writePin(LCD_E_PORT_ID,LCD_E_PIN_ID,LOGIC_LOW); /* Disable LCD E=0 */
	_delay_ms(1); /* delay for processing Th = 13ns */
#endif
}
    4e1c:	cd 59       	subi	r28, 0x9D	; 157
    4e1e:	df 4f       	sbci	r29, 0xFF	; 255
    4e20:	0f b6       	in	r0, 0x3f	; 63
    4e22:	f8 94       	cli
    4e24:	de bf       	out	0x3e, r29	; 62
    4e26:	0f be       	out	0x3f, r0	; 63
    4e28:	cd bf       	out	0x3d, r28	; 61
    4e2a:	cf 91       	pop	r28
    4e2c:	df 91       	pop	r29
    4e2e:	1f 91       	pop	r17
    4e30:	0f 91       	pop	r16
    4e32:	08 95       	ret

00004e34 <LCD_displayString>:
/*
 * Description :
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
    4e34:	df 93       	push	r29
    4e36:	cf 93       	push	r28
    4e38:	00 d0       	rcall	.+0      	; 0x4e3a <LCD_displayString+0x6>
    4e3a:	0f 92       	push	r0
    4e3c:	cd b7       	in	r28, 0x3d	; 61
    4e3e:	de b7       	in	r29, 0x3e	; 62
    4e40:	9b 83       	std	Y+3, r25	; 0x03
    4e42:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i = 0;
    4e44:	19 82       	std	Y+1, r1	; 0x01
    4e46:	0e c0       	rjmp	.+28     	; 0x4e64 <LCD_displayString+0x30>
	while(Str[i] != '\0')
	{
		LCD_displayCharacter(Str[i]);
    4e48:	89 81       	ldd	r24, Y+1	; 0x01
    4e4a:	28 2f       	mov	r18, r24
    4e4c:	30 e0       	ldi	r19, 0x00	; 0
    4e4e:	8a 81       	ldd	r24, Y+2	; 0x02
    4e50:	9b 81       	ldd	r25, Y+3	; 0x03
    4e52:	fc 01       	movw	r30, r24
    4e54:	e2 0f       	add	r30, r18
    4e56:	f3 1f       	adc	r31, r19
    4e58:	80 81       	ld	r24, Z
    4e5a:	0e 94 9f 22 	call	0x453e	; 0x453e <LCD_displayCharacter>
		i++;
    4e5e:	89 81       	ldd	r24, Y+1	; 0x01
    4e60:	8f 5f       	subi	r24, 0xFF	; 255
    4e62:	89 83       	std	Y+1, r24	; 0x01
 * Display the required string on the screen
 */
void LCD_displayString(const char *Str)
{
	uint8 i = 0;
	while(Str[i] != '\0')
    4e64:	89 81       	ldd	r24, Y+1	; 0x01
    4e66:	28 2f       	mov	r18, r24
    4e68:	30 e0       	ldi	r19, 0x00	; 0
    4e6a:	8a 81       	ldd	r24, Y+2	; 0x02
    4e6c:	9b 81       	ldd	r25, Y+3	; 0x03
    4e6e:	fc 01       	movw	r30, r24
    4e70:	e2 0f       	add	r30, r18
    4e72:	f3 1f       	adc	r31, r19
    4e74:	80 81       	ld	r24, Z
    4e76:	88 23       	and	r24, r24
    4e78:	39 f7       	brne	.-50     	; 0x4e48 <LCD_displayString+0x14>
	{
		LCD_displayCharacter(*Str);
		Str++;
	}		
	*********************************************************/
}
    4e7a:	0f 90       	pop	r0
    4e7c:	0f 90       	pop	r0
    4e7e:	0f 90       	pop	r0
    4e80:	cf 91       	pop	r28
    4e82:	df 91       	pop	r29
    4e84:	08 95       	ret

00004e86 <LCD_moveCursor>:
/*
 * Description :
 * Move the cursor to a specified row and column index on the screen
 */
void LCD_moveCursor(uint8 row,uint8 col)
{
    4e86:	df 93       	push	r29
    4e88:	cf 93       	push	r28
    4e8a:	00 d0       	rcall	.+0      	; 0x4e8c <LCD_moveCursor+0x6>
    4e8c:	00 d0       	rcall	.+0      	; 0x4e8e <LCD_moveCursor+0x8>
    4e8e:	0f 92       	push	r0
    4e90:	cd b7       	in	r28, 0x3d	; 61
    4e92:	de b7       	in	r29, 0x3e	; 62
    4e94:	8a 83       	std	Y+2, r24	; 0x02
    4e96:	6b 83       	std	Y+3, r22	; 0x03
	uint8 lcd_memory_address;
	
	/* Calculate the required address in the LCD DDRAM */
	switch(row)
    4e98:	8a 81       	ldd	r24, Y+2	; 0x02
    4e9a:	28 2f       	mov	r18, r24
    4e9c:	30 e0       	ldi	r19, 0x00	; 0
    4e9e:	3d 83       	std	Y+5, r19	; 0x05
    4ea0:	2c 83       	std	Y+4, r18	; 0x04
    4ea2:	8c 81       	ldd	r24, Y+4	; 0x04
    4ea4:	9d 81       	ldd	r25, Y+5	; 0x05
    4ea6:	81 30       	cpi	r24, 0x01	; 1
    4ea8:	91 05       	cpc	r25, r1
    4eaa:	c1 f0       	breq	.+48     	; 0x4edc <LCD_moveCursor+0x56>
    4eac:	2c 81       	ldd	r18, Y+4	; 0x04
    4eae:	3d 81       	ldd	r19, Y+5	; 0x05
    4eb0:	22 30       	cpi	r18, 0x02	; 2
    4eb2:	31 05       	cpc	r19, r1
    4eb4:	2c f4       	brge	.+10     	; 0x4ec0 <LCD_moveCursor+0x3a>
    4eb6:	8c 81       	ldd	r24, Y+4	; 0x04
    4eb8:	9d 81       	ldd	r25, Y+5	; 0x05
    4eba:	00 97       	sbiw	r24, 0x00	; 0
    4ebc:	61 f0       	breq	.+24     	; 0x4ed6 <LCD_moveCursor+0x50>
    4ebe:	19 c0       	rjmp	.+50     	; 0x4ef2 <LCD_moveCursor+0x6c>
    4ec0:	2c 81       	ldd	r18, Y+4	; 0x04
    4ec2:	3d 81       	ldd	r19, Y+5	; 0x05
    4ec4:	22 30       	cpi	r18, 0x02	; 2
    4ec6:	31 05       	cpc	r19, r1
    4ec8:	69 f0       	breq	.+26     	; 0x4ee4 <LCD_moveCursor+0x5e>
    4eca:	8c 81       	ldd	r24, Y+4	; 0x04
    4ecc:	9d 81       	ldd	r25, Y+5	; 0x05
    4ece:	83 30       	cpi	r24, 0x03	; 3
    4ed0:	91 05       	cpc	r25, r1
    4ed2:	61 f0       	breq	.+24     	; 0x4eec <LCD_moveCursor+0x66>
    4ed4:	0e c0       	rjmp	.+28     	; 0x4ef2 <LCD_moveCursor+0x6c>
	{
		case 0:
			lcd_memory_address=col;
    4ed6:	8b 81       	ldd	r24, Y+3	; 0x03
    4ed8:	89 83       	std	Y+1, r24	; 0x01
    4eda:	0b c0       	rjmp	.+22     	; 0x4ef2 <LCD_moveCursor+0x6c>
				break;
		case 1:
			lcd_memory_address=col+0x40;
    4edc:	8b 81       	ldd	r24, Y+3	; 0x03
    4ede:	80 5c       	subi	r24, 0xC0	; 192
    4ee0:	89 83       	std	Y+1, r24	; 0x01
    4ee2:	07 c0       	rjmp	.+14     	; 0x4ef2 <LCD_moveCursor+0x6c>
				break;
		case 2:
			lcd_memory_address=col+0x10;
    4ee4:	8b 81       	ldd	r24, Y+3	; 0x03
    4ee6:	80 5f       	subi	r24, 0xF0	; 240
    4ee8:	89 83       	std	Y+1, r24	; 0x01
    4eea:	03 c0       	rjmp	.+6      	; 0x4ef2 <LCD_moveCursor+0x6c>
				break;
		case 3:
			lcd_memory_address=col+0x50;
    4eec:	8b 81       	ldd	r24, Y+3	; 0x03
    4eee:	80 5b       	subi	r24, 0xB0	; 176
    4ef0:	89 83       	std	Y+1, r24	; 0x01
				break;
	}					
	/* Move the LCD cursor to this specific address */
	LCD_sendCommand(lcd_memory_address | LCD_SET_CURSOR_LOCATION);
    4ef2:	89 81       	ldd	r24, Y+1	; 0x01
    4ef4:	80 68       	ori	r24, 0x80	; 128
    4ef6:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <LCD_sendCommand>
}
    4efa:	0f 90       	pop	r0
    4efc:	0f 90       	pop	r0
    4efe:	0f 90       	pop	r0
    4f00:	0f 90       	pop	r0
    4f02:	0f 90       	pop	r0
    4f04:	cf 91       	pop	r28
    4f06:	df 91       	pop	r29
    4f08:	08 95       	ret

00004f0a <LCD_displayStringRowColumn>:
/*
 * Description :
 * Display the required string in a specified row and column index on the screen
 */
void LCD_displayStringRowColumn(uint8 row,uint8 col,const char *Str)
{
    4f0a:	df 93       	push	r29
    4f0c:	cf 93       	push	r28
    4f0e:	00 d0       	rcall	.+0      	; 0x4f10 <LCD_displayStringRowColumn+0x6>
    4f10:	00 d0       	rcall	.+0      	; 0x4f12 <LCD_displayStringRowColumn+0x8>
    4f12:	cd b7       	in	r28, 0x3d	; 61
    4f14:	de b7       	in	r29, 0x3e	; 62
    4f16:	89 83       	std	Y+1, r24	; 0x01
    4f18:	6a 83       	std	Y+2, r22	; 0x02
    4f1a:	5c 83       	std	Y+4, r21	; 0x04
    4f1c:	4b 83       	std	Y+3, r20	; 0x03
	LCD_moveCursor(row,col); /* go to to the required LCD position */
    4f1e:	89 81       	ldd	r24, Y+1	; 0x01
    4f20:	6a 81       	ldd	r22, Y+2	; 0x02
    4f22:	0e 94 43 27 	call	0x4e86	; 0x4e86 <LCD_moveCursor>
	LCD_displayString(Str); /* display the string */
    4f26:	8b 81       	ldd	r24, Y+3	; 0x03
    4f28:	9c 81       	ldd	r25, Y+4	; 0x04
    4f2a:	0e 94 1a 27 	call	0x4e34	; 0x4e34 <LCD_displayString>
}
    4f2e:	0f 90       	pop	r0
    4f30:	0f 90       	pop	r0
    4f32:	0f 90       	pop	r0
    4f34:	0f 90       	pop	r0
    4f36:	cf 91       	pop	r28
    4f38:	df 91       	pop	r29
    4f3a:	08 95       	ret

00004f3c <LCD_intgerToString>:
/*
 * Description :
 * Display the required decimal value on the screen
 */
void LCD_intgerToString(int data)
{
    4f3c:	df 93       	push	r29
    4f3e:	cf 93       	push	r28
    4f40:	cd b7       	in	r28, 0x3d	; 61
    4f42:	de b7       	in	r29, 0x3e	; 62
    4f44:	62 97       	sbiw	r28, 0x12	; 18
    4f46:	0f b6       	in	r0, 0x3f	; 63
    4f48:	f8 94       	cli
    4f4a:	de bf       	out	0x3e, r29	; 62
    4f4c:	0f be       	out	0x3f, r0	; 63
    4f4e:	cd bf       	out	0x3d, r28	; 61
    4f50:	9a 8b       	std	Y+18, r25	; 0x12
    4f52:	89 8b       	std	Y+17, r24	; 0x11
   char buff[16]; /* String to hold the ascii result */
   itoa(data,buff,10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
    4f54:	89 89       	ldd	r24, Y+17	; 0x11
    4f56:	9a 89       	ldd	r25, Y+18	; 0x12
    4f58:	9e 01       	movw	r18, r28
    4f5a:	2f 5f       	subi	r18, 0xFF	; 255
    4f5c:	3f 4f       	sbci	r19, 0xFF	; 255
    4f5e:	b9 01       	movw	r22, r18
    4f60:	4a e0       	ldi	r20, 0x0A	; 10
    4f62:	50 e0       	ldi	r21, 0x00	; 0
    4f64:	0e 94 f3 28 	call	0x51e6	; 0x51e6 <itoa>
   LCD_displayString(buff); /* Display the string */
    4f68:	ce 01       	movw	r24, r28
    4f6a:	01 96       	adiw	r24, 0x01	; 1
    4f6c:	0e 94 1a 27 	call	0x4e34	; 0x4e34 <LCD_displayString>
}
    4f70:	62 96       	adiw	r28, 0x12	; 18
    4f72:	0f b6       	in	r0, 0x3f	; 63
    4f74:	f8 94       	cli
    4f76:	de bf       	out	0x3e, r29	; 62
    4f78:	0f be       	out	0x3f, r0	; 63
    4f7a:	cd bf       	out	0x3d, r28	; 61
    4f7c:	cf 91       	pop	r28
    4f7e:	df 91       	pop	r29
    4f80:	08 95       	ret

00004f82 <LCD_floatToString>:
void LCD_floatToString(float64 data)
{
    4f82:	af 92       	push	r10
    4f84:	bf 92       	push	r11
    4f86:	cf 92       	push	r12
    4f88:	df 92       	push	r13
    4f8a:	ef 92       	push	r14
    4f8c:	ff 92       	push	r15
    4f8e:	0f 93       	push	r16
    4f90:	1f 93       	push	r17
    4f92:	df 93       	push	r29
    4f94:	cf 93       	push	r28
    4f96:	cd b7       	in	r28, 0x3d	; 61
    4f98:	de b7       	in	r29, 0x3e	; 62
    4f9a:	2c 97       	sbiw	r28, 0x0c	; 12
    4f9c:	0f b6       	in	r0, 0x3f	; 63
    4f9e:	f8 94       	cli
    4fa0:	de bf       	out	0x3e, r29	; 62
    4fa2:	0f be       	out	0x3f, r0	; 63
    4fa4:	cd bf       	out	0x3d, r28	; 61
    4fa6:	69 87       	std	Y+9, r22	; 0x09
    4fa8:	7a 87       	std	Y+10, r23	; 0x0a
    4faa:	8b 87       	std	Y+11, r24	; 0x0b
    4fac:	9c 87       	std	Y+12, r25	; 0x0c
   uint64 num = (uint64)(data * 1000) ;
    4fae:	69 85       	ldd	r22, Y+9	; 0x09
    4fb0:	7a 85       	ldd	r23, Y+10	; 0x0a
    4fb2:	8b 85       	ldd	r24, Y+11	; 0x0b
    4fb4:	9c 85       	ldd	r25, Y+12	; 0x0c
    4fb6:	20 e0       	ldi	r18, 0x00	; 0
    4fb8:	30 e0       	ldi	r19, 0x00	; 0
    4fba:	4a e7       	ldi	r20, 0x7A	; 122
    4fbc:	54 e4       	ldi	r21, 0x44	; 68
    4fbe:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4fc2:	dc 01       	movw	r26, r24
    4fc4:	cb 01       	movw	r24, r22
    4fc6:	bc 01       	movw	r22, r24
    4fc8:	cd 01       	movw	r24, r26
    4fca:	0e 94 6d 00 	call	0xda	; 0xda <__fixunssfdi>
    4fce:	a2 2e       	mov	r10, r18
    4fd0:	b3 2e       	mov	r11, r19
    4fd2:	c4 2e       	mov	r12, r20
    4fd4:	d5 2e       	mov	r13, r21
    4fd6:	e6 2e       	mov	r14, r22
    4fd8:	f7 2e       	mov	r15, r23
    4fda:	08 2f       	mov	r16, r24
    4fdc:	19 2f       	mov	r17, r25
    4fde:	a9 82       	std	Y+1, r10	; 0x01
    4fe0:	ba 82       	std	Y+2, r11	; 0x02
    4fe2:	cb 82       	std	Y+3, r12	; 0x03
    4fe4:	dc 82       	std	Y+4, r13	; 0x04
    4fe6:	ed 82       	std	Y+5, r14	; 0x05
    4fe8:	fe 82       	std	Y+6, r15	; 0x06
    4fea:	0f 83       	std	Y+7, r16	; 0x07
    4fec:	18 87       	std	Y+8, r17	; 0x08
   LCD_intgerToString((int)(num/1000));
    4fee:	a9 80       	ldd	r10, Y+1	; 0x01
    4ff0:	ba 80       	ldd	r11, Y+2	; 0x02
    4ff2:	cb 80       	ldd	r12, Y+3	; 0x03
    4ff4:	dc 80       	ldd	r13, Y+4	; 0x04
    4ff6:	ed 80       	ldd	r14, Y+5	; 0x05
    4ff8:	fe 80       	ldd	r15, Y+6	; 0x06
    4ffa:	0f 81       	ldd	r16, Y+7	; 0x07
    4ffc:	18 85       	ldd	r17, Y+8	; 0x08
    4ffe:	2a 2d       	mov	r18, r10
    5000:	3b 2d       	mov	r19, r11
    5002:	4c 2d       	mov	r20, r12
    5004:	5d 2d       	mov	r21, r13
    5006:	6e 2d       	mov	r22, r14
    5008:	7f 2d       	mov	r23, r15
    500a:	80 2f       	mov	r24, r16
    500c:	91 2f       	mov	r25, r17
    500e:	0f 2e       	mov	r0, r31
    5010:	f8 ee       	ldi	r31, 0xE8	; 232
    5012:	af 2e       	mov	r10, r31
    5014:	f0 2d       	mov	r31, r0
    5016:	0f 2e       	mov	r0, r31
    5018:	f3 e0       	ldi	r31, 0x03	; 3
    501a:	bf 2e       	mov	r11, r31
    501c:	f0 2d       	mov	r31, r0
    501e:	cc 24       	eor	r12, r12
    5020:	dd 24       	eor	r13, r13
    5022:	ee 24       	eor	r14, r14
    5024:	ff 24       	eor	r15, r15
    5026:	00 e0       	ldi	r16, 0x00	; 0
    5028:	10 e0       	ldi	r17, 0x00	; 0
    502a:	0e 94 15 01 	call	0x22a	; 0x22a <__udivdi3>
    502e:	a2 2e       	mov	r10, r18
    5030:	b3 2e       	mov	r11, r19
    5032:	c4 2e       	mov	r12, r20
    5034:	d5 2e       	mov	r13, r21
    5036:	e6 2e       	mov	r14, r22
    5038:	f7 2e       	mov	r15, r23
    503a:	08 2f       	mov	r16, r24
    503c:	19 2f       	mov	r17, r25
    503e:	2a 2d       	mov	r18, r10
    5040:	3b 2d       	mov	r19, r11
    5042:	4c 2d       	mov	r20, r12
    5044:	5d 2d       	mov	r21, r13
    5046:	6e 2d       	mov	r22, r14
    5048:	7f 2d       	mov	r23, r15
    504a:	80 2f       	mov	r24, r16
    504c:	91 2f       	mov	r25, r17
    504e:	c9 01       	movw	r24, r18
    5050:	0e 94 9e 27 	call	0x4f3c	; 0x4f3c <LCD_intgerToString>
   LCD_displayCharacter('.');
    5054:	8e e2       	ldi	r24, 0x2E	; 46
    5056:	0e 94 9f 22 	call	0x453e	; 0x453e <LCD_displayCharacter>
   LCD_intgerToString((int)(num%1000));
    505a:	a9 80       	ldd	r10, Y+1	; 0x01
    505c:	ba 80       	ldd	r11, Y+2	; 0x02
    505e:	cb 80       	ldd	r12, Y+3	; 0x03
    5060:	dc 80       	ldd	r13, Y+4	; 0x04
    5062:	ed 80       	ldd	r14, Y+5	; 0x05
    5064:	fe 80       	ldd	r15, Y+6	; 0x06
    5066:	0f 81       	ldd	r16, Y+7	; 0x07
    5068:	18 85       	ldd	r17, Y+8	; 0x08
    506a:	2a 2d       	mov	r18, r10
    506c:	3b 2d       	mov	r19, r11
    506e:	4c 2d       	mov	r20, r12
    5070:	5d 2d       	mov	r21, r13
    5072:	6e 2d       	mov	r22, r14
    5074:	7f 2d       	mov	r23, r15
    5076:	80 2f       	mov	r24, r16
    5078:	91 2f       	mov	r25, r17
    507a:	0f 2e       	mov	r0, r31
    507c:	f8 ee       	ldi	r31, 0xE8	; 232
    507e:	af 2e       	mov	r10, r31
    5080:	f0 2d       	mov	r31, r0
    5082:	0f 2e       	mov	r0, r31
    5084:	f3 e0       	ldi	r31, 0x03	; 3
    5086:	bf 2e       	mov	r11, r31
    5088:	f0 2d       	mov	r31, r0
    508a:	cc 24       	eor	r12, r12
    508c:	dd 24       	eor	r13, r13
    508e:	ee 24       	eor	r14, r14
    5090:	ff 24       	eor	r15, r15
    5092:	00 e0       	ldi	r16, 0x00	; 0
    5094:	10 e0       	ldi	r17, 0x00	; 0
    5096:	0e 94 8a 07 	call	0xf14	; 0xf14 <__umoddi3>
    509a:	a2 2e       	mov	r10, r18
    509c:	b3 2e       	mov	r11, r19
    509e:	c4 2e       	mov	r12, r20
    50a0:	d5 2e       	mov	r13, r21
    50a2:	e6 2e       	mov	r14, r22
    50a4:	f7 2e       	mov	r15, r23
    50a6:	08 2f       	mov	r16, r24
    50a8:	19 2f       	mov	r17, r25
    50aa:	2a 2d       	mov	r18, r10
    50ac:	3b 2d       	mov	r19, r11
    50ae:	4c 2d       	mov	r20, r12
    50b0:	5d 2d       	mov	r21, r13
    50b2:	6e 2d       	mov	r22, r14
    50b4:	7f 2d       	mov	r23, r15
    50b6:	80 2f       	mov	r24, r16
    50b8:	91 2f       	mov	r25, r17
    50ba:	c9 01       	movw	r24, r18
    50bc:	0e 94 9e 27 	call	0x4f3c	; 0x4f3c <LCD_intgerToString>
}
    50c0:	2c 96       	adiw	r28, 0x0c	; 12
    50c2:	0f b6       	in	r0, 0x3f	; 63
    50c4:	f8 94       	cli
    50c6:	de bf       	out	0x3e, r29	; 62
    50c8:	0f be       	out	0x3f, r0	; 63
    50ca:	cd bf       	out	0x3d, r28	; 61
    50cc:	cf 91       	pop	r28
    50ce:	df 91       	pop	r29
    50d0:	1f 91       	pop	r17
    50d2:	0f 91       	pop	r16
    50d4:	ff 90       	pop	r15
    50d6:	ef 90       	pop	r14
    50d8:	df 90       	pop	r13
    50da:	cf 90       	pop	r12
    50dc:	bf 90       	pop	r11
    50de:	af 90       	pop	r10
    50e0:	08 95       	ret

000050e2 <LCD_clearScreen>:
/*
 * Description :
 * Send the clear screen command
 */
void LCD_clearScreen(void)
{
    50e2:	df 93       	push	r29
    50e4:	cf 93       	push	r28
    50e6:	cd b7       	in	r28, 0x3d	; 61
    50e8:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* Send clear display command */
    50ea:	81 e0       	ldi	r24, 0x01	; 1
    50ec:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <LCD_sendCommand>
}
    50f0:	cf 91       	pop	r28
    50f2:	df 91       	pop	r29
    50f4:	08 95       	ret

000050f6 <__mulsi3>:
    50f6:	62 9f       	mul	r22, r18
    50f8:	d0 01       	movw	r26, r0
    50fa:	73 9f       	mul	r23, r19
    50fc:	f0 01       	movw	r30, r0
    50fe:	82 9f       	mul	r24, r18
    5100:	e0 0d       	add	r30, r0
    5102:	f1 1d       	adc	r31, r1
    5104:	64 9f       	mul	r22, r20
    5106:	e0 0d       	add	r30, r0
    5108:	f1 1d       	adc	r31, r1
    510a:	92 9f       	mul	r25, r18
    510c:	f0 0d       	add	r31, r0
    510e:	83 9f       	mul	r24, r19
    5110:	f0 0d       	add	r31, r0
    5112:	74 9f       	mul	r23, r20
    5114:	f0 0d       	add	r31, r0
    5116:	65 9f       	mul	r22, r21
    5118:	f0 0d       	add	r31, r0
    511a:	99 27       	eor	r25, r25
    511c:	72 9f       	mul	r23, r18
    511e:	b0 0d       	add	r27, r0
    5120:	e1 1d       	adc	r30, r1
    5122:	f9 1f       	adc	r31, r25
    5124:	63 9f       	mul	r22, r19
    5126:	b0 0d       	add	r27, r0
    5128:	e1 1d       	adc	r30, r1
    512a:	f9 1f       	adc	r31, r25
    512c:	bd 01       	movw	r22, r26
    512e:	cf 01       	movw	r24, r30
    5130:	11 24       	eor	r1, r1
    5132:	08 95       	ret

00005134 <__udivmodsi4>:
    5134:	a1 e2       	ldi	r26, 0x21	; 33
    5136:	1a 2e       	mov	r1, r26
    5138:	aa 1b       	sub	r26, r26
    513a:	bb 1b       	sub	r27, r27
    513c:	fd 01       	movw	r30, r26
    513e:	0d c0       	rjmp	.+26     	; 0x515a <__udivmodsi4_ep>

00005140 <__udivmodsi4_loop>:
    5140:	aa 1f       	adc	r26, r26
    5142:	bb 1f       	adc	r27, r27
    5144:	ee 1f       	adc	r30, r30
    5146:	ff 1f       	adc	r31, r31
    5148:	a2 17       	cp	r26, r18
    514a:	b3 07       	cpc	r27, r19
    514c:	e4 07       	cpc	r30, r20
    514e:	f5 07       	cpc	r31, r21
    5150:	20 f0       	brcs	.+8      	; 0x515a <__udivmodsi4_ep>
    5152:	a2 1b       	sub	r26, r18
    5154:	b3 0b       	sbc	r27, r19
    5156:	e4 0b       	sbc	r30, r20
    5158:	f5 0b       	sbc	r31, r21

0000515a <__udivmodsi4_ep>:
    515a:	66 1f       	adc	r22, r22
    515c:	77 1f       	adc	r23, r23
    515e:	88 1f       	adc	r24, r24
    5160:	99 1f       	adc	r25, r25
    5162:	1a 94       	dec	r1
    5164:	69 f7       	brne	.-38     	; 0x5140 <__udivmodsi4_loop>
    5166:	60 95       	com	r22
    5168:	70 95       	com	r23
    516a:	80 95       	com	r24
    516c:	90 95       	com	r25
    516e:	9b 01       	movw	r18, r22
    5170:	ac 01       	movw	r20, r24
    5172:	bd 01       	movw	r22, r26
    5174:	cf 01       	movw	r24, r30
    5176:	08 95       	ret

00005178 <__prologue_saves__>:
    5178:	2f 92       	push	r2
    517a:	3f 92       	push	r3
    517c:	4f 92       	push	r4
    517e:	5f 92       	push	r5
    5180:	6f 92       	push	r6
    5182:	7f 92       	push	r7
    5184:	8f 92       	push	r8
    5186:	9f 92       	push	r9
    5188:	af 92       	push	r10
    518a:	bf 92       	push	r11
    518c:	cf 92       	push	r12
    518e:	df 92       	push	r13
    5190:	ef 92       	push	r14
    5192:	ff 92       	push	r15
    5194:	0f 93       	push	r16
    5196:	1f 93       	push	r17
    5198:	cf 93       	push	r28
    519a:	df 93       	push	r29
    519c:	cd b7       	in	r28, 0x3d	; 61
    519e:	de b7       	in	r29, 0x3e	; 62
    51a0:	ca 1b       	sub	r28, r26
    51a2:	db 0b       	sbc	r29, r27
    51a4:	0f b6       	in	r0, 0x3f	; 63
    51a6:	f8 94       	cli
    51a8:	de bf       	out	0x3e, r29	; 62
    51aa:	0f be       	out	0x3f, r0	; 63
    51ac:	cd bf       	out	0x3d, r28	; 61
    51ae:	09 94       	ijmp

000051b0 <__epilogue_restores__>:
    51b0:	2a 88       	ldd	r2, Y+18	; 0x12
    51b2:	39 88       	ldd	r3, Y+17	; 0x11
    51b4:	48 88       	ldd	r4, Y+16	; 0x10
    51b6:	5f 84       	ldd	r5, Y+15	; 0x0f
    51b8:	6e 84       	ldd	r6, Y+14	; 0x0e
    51ba:	7d 84       	ldd	r7, Y+13	; 0x0d
    51bc:	8c 84       	ldd	r8, Y+12	; 0x0c
    51be:	9b 84       	ldd	r9, Y+11	; 0x0b
    51c0:	aa 84       	ldd	r10, Y+10	; 0x0a
    51c2:	b9 84       	ldd	r11, Y+9	; 0x09
    51c4:	c8 84       	ldd	r12, Y+8	; 0x08
    51c6:	df 80       	ldd	r13, Y+7	; 0x07
    51c8:	ee 80       	ldd	r14, Y+6	; 0x06
    51ca:	fd 80       	ldd	r15, Y+5	; 0x05
    51cc:	0c 81       	ldd	r16, Y+4	; 0x04
    51ce:	1b 81       	ldd	r17, Y+3	; 0x03
    51d0:	aa 81       	ldd	r26, Y+2	; 0x02
    51d2:	b9 81       	ldd	r27, Y+1	; 0x01
    51d4:	ce 0f       	add	r28, r30
    51d6:	d1 1d       	adc	r29, r1
    51d8:	0f b6       	in	r0, 0x3f	; 63
    51da:	f8 94       	cli
    51dc:	de bf       	out	0x3e, r29	; 62
    51de:	0f be       	out	0x3f, r0	; 63
    51e0:	cd bf       	out	0x3d, r28	; 61
    51e2:	ed 01       	movw	r28, r26
    51e4:	08 95       	ret

000051e6 <itoa>:
    51e6:	fb 01       	movw	r30, r22
    51e8:	9f 01       	movw	r18, r30
    51ea:	e8 94       	clt
    51ec:	42 30       	cpi	r20, 0x02	; 2
    51ee:	c4 f0       	brlt	.+48     	; 0x5220 <itoa+0x3a>
    51f0:	45 32       	cpi	r20, 0x25	; 37
    51f2:	b4 f4       	brge	.+44     	; 0x5220 <itoa+0x3a>
    51f4:	4a 30       	cpi	r20, 0x0A	; 10
    51f6:	29 f4       	brne	.+10     	; 0x5202 <itoa+0x1c>
    51f8:	97 fb       	bst	r25, 7
    51fa:	1e f4       	brtc	.+6      	; 0x5202 <itoa+0x1c>
    51fc:	90 95       	com	r25
    51fe:	81 95       	neg	r24
    5200:	9f 4f       	sbci	r25, 0xFF	; 255
    5202:	64 2f       	mov	r22, r20
    5204:	77 27       	eor	r23, r23
    5206:	0e 94 24 29 	call	0x5248	; 0x5248 <__udivmodhi4>
    520a:	80 5d       	subi	r24, 0xD0	; 208
    520c:	8a 33       	cpi	r24, 0x3A	; 58
    520e:	0c f0       	brlt	.+2      	; 0x5212 <itoa+0x2c>
    5210:	89 5d       	subi	r24, 0xD9	; 217
    5212:	81 93       	st	Z+, r24
    5214:	cb 01       	movw	r24, r22
    5216:	00 97       	sbiw	r24, 0x00	; 0
    5218:	a1 f7       	brne	.-24     	; 0x5202 <itoa+0x1c>
    521a:	16 f4       	brtc	.+4      	; 0x5220 <itoa+0x3a>
    521c:	5d e2       	ldi	r21, 0x2D	; 45
    521e:	51 93       	st	Z+, r21
    5220:	10 82       	st	Z, r1
    5222:	c9 01       	movw	r24, r18
    5224:	0c 94 14 29 	jmp	0x5228	; 0x5228 <strrev>

00005228 <strrev>:
    5228:	dc 01       	movw	r26, r24
    522a:	fc 01       	movw	r30, r24
    522c:	67 2f       	mov	r22, r23
    522e:	71 91       	ld	r23, Z+
    5230:	77 23       	and	r23, r23
    5232:	e1 f7       	brne	.-8      	; 0x522c <strrev+0x4>
    5234:	32 97       	sbiw	r30, 0x02	; 2
    5236:	04 c0       	rjmp	.+8      	; 0x5240 <strrev+0x18>
    5238:	7c 91       	ld	r23, X
    523a:	6d 93       	st	X+, r22
    523c:	70 83       	st	Z, r23
    523e:	62 91       	ld	r22, -Z
    5240:	ae 17       	cp	r26, r30
    5242:	bf 07       	cpc	r27, r31
    5244:	c8 f3       	brcs	.-14     	; 0x5238 <strrev+0x10>
    5246:	08 95       	ret

00005248 <__udivmodhi4>:
    5248:	aa 1b       	sub	r26, r26
    524a:	bb 1b       	sub	r27, r27
    524c:	51 e1       	ldi	r21, 0x11	; 17
    524e:	07 c0       	rjmp	.+14     	; 0x525e <__udivmodhi4_ep>

00005250 <__udivmodhi4_loop>:
    5250:	aa 1f       	adc	r26, r26
    5252:	bb 1f       	adc	r27, r27
    5254:	a6 17       	cp	r26, r22
    5256:	b7 07       	cpc	r27, r23
    5258:	10 f0       	brcs	.+4      	; 0x525e <__udivmodhi4_ep>
    525a:	a6 1b       	sub	r26, r22
    525c:	b7 0b       	sbc	r27, r23

0000525e <__udivmodhi4_ep>:
    525e:	88 1f       	adc	r24, r24
    5260:	99 1f       	adc	r25, r25
    5262:	5a 95       	dec	r21
    5264:	a9 f7       	brne	.-22     	; 0x5250 <__udivmodhi4_loop>
    5266:	80 95       	com	r24
    5268:	90 95       	com	r25
    526a:	bc 01       	movw	r22, r24
    526c:	cd 01       	movw	r24, r26
    526e:	08 95       	ret

00005270 <_exit>:
    5270:	f8 94       	cli

00005272 <__stop_program>:
    5272:	ff cf       	rjmp	.-2      	; 0x5272 <__stop_program>
